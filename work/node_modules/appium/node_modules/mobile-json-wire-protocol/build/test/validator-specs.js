require('source-map-support').install();

'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _this = this;

var _libValidators = require('../lib/validators');

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

_chai2['default'].should();

describe('MJSONWP', function () {
  describe('direct to driver', function () {

    describe('setUrl', function () {
      it('should fail when no url passed', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libValidators.validators.setUrl();
              }).should['throw'](/url/i);

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should fail when given invalid url', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libValidators.validators.setUrl('foo');
              }).should['throw'](/url/i);

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should succeed when given url starting with http', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libValidators.validators.setUrl('http://appium.io');
              }).should.not['throw'];

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should succeed when given an android-like scheme', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libValidators.validators.setUrl('content://contacts/people/1');
              }).should.not['throw'];

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should succeed when given an about scheme', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libValidators.validators.setUrl('about:blank');
              }).should.not['throw'];

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
    });
    describe('implicitWait', function () {
      it('should fail when given no ms', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libValidators.validators.implicitWait();
              }).should['throw'](/ms/i);

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should fail when given a non-numeric ms', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libValidators.validators.implicitWait("five");
              }).should['throw'](/ms/i);

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should fail when given a negative ms', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libValidators.validators.implicitWait(-1);
              }).should['throw'](/ms/i);

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should succeed when given an ms of 0', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libValidators.validators.implicitWait(0);
              }).should.not['throw'];

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should succeed when given an ms greater than 0', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libValidators.validators.implicitWait(100);
              }).should.not['throw'];

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
    });
    describe('asyncScriptTimeout', function () {
      it('should fail when given no ms', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libValidators.validators.asyncScriptTimeout();
              }).should['throw'](/ms/i);

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should fail when given a non-numeric ms', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libValidators.validators.asyncScriptTimeout("five");
              }).should['throw'](/ms/i);

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should fail when given a negative ms', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libValidators.validators.asyncScriptTimeout(-1);
              }).should['throw'](/ms/i);

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should succeed when given an ms of 0', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libValidators.validators.asyncScriptTimeout(0);
              }).should.not['throw'];

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should succeed when given an ms greater than 0', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libValidators.validators.asyncScriptTimeout(100);
              }).should.not['throw'];

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
    });
    describe('other timeouts', function () {
      it('should fail when given no ms', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libValidators.validators.timeouts('page load');
              }).should['throw'](/ms/i);

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should fail when given a non-numeric ms', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libValidators.validators.timeouts('page load', "five");
              }).should['throw'](/ms/i);

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should fail when given a negative ms', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libValidators.validators.timeouts('page load', -1);
              }).should['throw'](/ms/i);

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should succeed when given an ms of 0', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libValidators.validators.timeouts('page load', 0);
              }).should.not['throw'];

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should succeed when given an ms greater than 0', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libValidators.validators.timeouts('page load', 100);
              }).should.not['throw'];

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should not allow an invalid timeout type', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libValidators.validators.timeouts('foofoo', 100);
              }).should['throw'](/'foofoo'/);

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
    });
    describe('clickCurrent', function () {
      it('should fail when given an invalid button', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libValidators.validators.clickCurrent(4);
              }).should['throw'](/0, 1, or 2/i);

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should succeed when given a valid button', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libValidators.validators.clickCurrent(0);
              }).should.not['throw'];
              (function () {
                _libValidators.validators.clickCurrent(1);
              }).should.not['throw'];
              (function () {
                _libValidators.validators.clickCurrent(2);
              }).should.not['throw'];

            case 3:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
    });
    describe('setNetworkConnection', function () {
      it('should fail when given no type', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libValidators.validators.setNetworkConnection();
              }).should['throw'](/0, 1, 2, 4, 6/i);

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should fail when given an invalid type', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libValidators.validators.setNetworkConnection(8);
              }).should['throw'](/0, 1, 2, 4, 6/i);

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should succeed when given a valid type', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libValidators.validators.setNetworkConnection(0);
              }).should.not['throw'];
              (function () {
                _libValidators.validators.setNetworkConnection(1);
              }).should.not['throw'];
              (function () {
                _libValidators.validators.setNetworkConnection(2);
              }).should.not['throw'];
              (function () {
                _libValidators.validators.setNetworkConnection(4);
              }).should.not['throw'];
              (function () {
                _libValidators.validators.setNetworkConnection(6);
              }).should.not['throw'];

            case 5:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
    });
  });
});
//# sourceMappingURL=data:application/json;base64,