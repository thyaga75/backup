'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _ = require('../../..');

var _sampleApps = require('sample-apps');

var _sampleApps2 = _interopRequireDefault(_sampleApps);

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

var driver = undefined;
var defaultCaps = {
  app: (0, _sampleApps2['default'])('ApiDemos-debug'),
  deviceName: 'Android',
  platformName: 'Android'
};

describe('startActivity', function () {
  var _this = this;

  before(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          driver = new _.AndroidDriver();
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(driver.createSession(defaultCaps));

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
  after(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.deleteSession());

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should launch a new package and activity', function callee$1$0() {
    var _ref, appPackage, appActivity, startAppPackage, startAppActivity, _ref2, newAppPackage, newAppActivity;

    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.adb.getFocusedPackageAndActivity());

        case 2:
          _ref = context$2$0.sent;
          appPackage = _ref.appPackage;
          appActivity = _ref.appActivity;

          appPackage.should.equal('io.appium.android.apis');
          appActivity.should.equal('.ApiDemos');

          startAppPackage = 'io.appium.android.apis';
          startAppActivity = '.view.SplitTouchView';
          context$2$0.next = 11;
          return _regeneratorRuntime.awrap(driver.startActivity(startAppPackage, startAppActivity));

        case 11:
          context$2$0.next = 13;
          return _regeneratorRuntime.awrap(driver.adb.getFocusedPackageAndActivity());

        case 13:
          _ref2 = context$2$0.sent;
          newAppPackage = _ref2.appPackage;
          newAppActivity = _ref2.appActivity;

          newAppPackage.should.equal(startAppPackage);
          newAppActivity.should.equal(startAppActivity);

        case 18:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
  it('should be able to launch activity with custom intent parameter category', function callee$1$0() {
    var startAppPackage, startAppActivity, startIntentCategory, _ref3, appActivity;

    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          startAppPackage = 'io.appium.android.apis';
          startAppActivity = 'io.appium.android.apis.app.HelloWorld';
          startIntentCategory = 'appium.android.intent.category.SAMPLE_CODE';
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.startActivity(startAppPackage, startAppActivity, undefined, undefined, startIntentCategory));

        case 5:
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap(driver.adb.getFocusedPackageAndActivity());

        case 7:
          _ref3 = context$2$0.sent;
          appActivity = _ref3.appActivity;

          appActivity.should.include('HelloWorld');

        case 10:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
  it('should be able to launch activity with dontStopAppOnReset = true', function callee$1$0() {
    var startAppPackage, startAppActivity, _ref4, appPackage, appActivity;

    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          startAppPackage = 'io.appium.android.apis';
          startAppActivity = '.os.MorseCode';
          context$2$0.next = 4;
          return _regeneratorRuntime.awrap(driver.startActivity(startAppPackage, startAppActivity, startAppPackage, startAppActivity, undefined, undefined, undefined, undefined, true));

        case 4:
          context$2$0.next = 6;
          return _regeneratorRuntime.awrap(driver.adb.getFocusedPackageAndActivity());

        case 6:
          _ref4 = context$2$0.sent;
          appPackage = _ref4.appPackage;
          appActivity = _ref4.appActivity;

          appPackage.should.equal(startAppPackage);
          appActivity.should.equal(startAppActivity);

        case 11:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
  it('should be able to launch activity with dontStopAppOnReset = false', function callee$1$0() {
    var startAppPackage, startAppActivity, _ref5, appPackage, appActivity;

    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          startAppPackage = 'io.appium.android.apis';
          startAppActivity = '.os.MorseCode';
          context$2$0.next = 4;
          return _regeneratorRuntime.awrap(driver.startActivity(startAppPackage, startAppActivity, startAppPackage, startAppActivity, undefined, undefined, undefined, undefined, false));

        case 4:
          context$2$0.next = 6;
          return _regeneratorRuntime.awrap(driver.adb.getFocusedPackageAndActivity());

        case 6:
          _ref5 = context$2$0.sent;
          appPackage = _ref5.appPackage;
          appActivity = _ref5.appActivity;

          appPackage.should.equal(startAppPackage);
          appActivity.should.equal(startAppActivity);

        case 11:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZnVuY3Rpb25hbC9jb21tYW5kcy9nZW5lcmFsLWUyZS1zcGVjcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7b0JBQWlCLE1BQU07Ozs7OEJBQ0ksa0JBQWtCOzs7O2dCQUNmLFVBQVU7OzBCQUNqQixhQUFhOzs7O0FBRXBDLGtCQUFLLE1BQU0sRUFBRSxDQUFDO0FBQ2Qsa0JBQUssR0FBRyw2QkFBZ0IsQ0FBQzs7QUFFekIsSUFBSSxNQUFNLFlBQUEsQ0FBQztBQUNYLElBQUksV0FBVyxHQUFHO0FBQ2hCLEtBQUcsRUFBRSw2QkFBVyxnQkFBZ0IsQ0FBQztBQUNqQyxZQUFVLEVBQUUsU0FBUztBQUNyQixjQUFZLEVBQUUsU0FBUztDQUN4QixDQUFDOztBQUVGLFFBQVEsQ0FBQyxlQUFlLEVBQUUsWUFBWTs7O0FBQ3BDLFFBQU0sQ0FBQzs7OztBQUNMLGdCQUFNLEdBQUcscUJBQW1CLENBQUM7OzJDQUN2QixNQUFNLENBQUMsYUFBYSxDQUFDLFdBQVcsQ0FBQzs7Ozs7OztHQUN4QyxDQUFDLENBQUM7QUFDSCxPQUFLLENBQUM7Ozs7OzJDQUNFLE1BQU0sQ0FBQyxhQUFhLEVBQUU7Ozs7Ozs7R0FDN0IsQ0FBQyxDQUFDOztBQUVILElBQUUsQ0FBQywwQ0FBMEMsRUFBRTtjQUN4QyxVQUFVLEVBQUUsV0FBVyxFQUl4QixlQUFlLEVBQ2YsZ0JBQWdCLFNBSUgsYUFBYSxFQUFlLGNBQWM7Ozs7OzsyQ0FUckIsTUFBTSxDQUFDLEdBQUcsQ0FBQyw0QkFBNEIsRUFBRTs7OztBQUExRSxvQkFBVSxRQUFWLFVBQVU7QUFBRSxxQkFBVyxRQUFYLFdBQVc7O0FBQzVCLG9CQUFVLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO0FBQ2xELHFCQUFXLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsQ0FBQzs7QUFFbEMseUJBQWUsR0FBRyx3QkFBd0I7QUFDMUMsMEJBQWdCLEdBQUcsc0JBQXNCOzsyQ0FFdkMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxlQUFlLEVBQUUsZ0JBQWdCLENBQUM7Ozs7MkNBRVEsTUFBTSxDQUFDLEdBQUcsQ0FBQyw0QkFBNEIsRUFBRTs7OztBQUE3Rix1QkFBYSxTQUF6QixVQUFVO0FBQThCLHdCQUFjLFNBQTNCLFdBQVc7O0FBQzNDLHVCQUFhLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxlQUFlLENBQUMsQ0FBQztBQUM1Qyx3QkFBYyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLENBQUMsQ0FBQzs7Ozs7OztHQUMvQyxDQUFDLENBQUM7QUFDSCxJQUFFLENBQUMseUVBQXlFLEVBQUU7UUFDeEUsZUFBZSxFQUNmLGdCQUFnQixFQUNoQixtQkFBbUIsU0FJbEIsV0FBVzs7Ozs7QUFOWix5QkFBZSxHQUFHLHdCQUF3QjtBQUMxQywwQkFBZ0IsR0FBRyx1Q0FBdUM7QUFDMUQsNkJBQW1CLEdBQUcsNENBQTRDOzsyQ0FFaEUsTUFBTSxDQUFDLGFBQWEsQ0FBQyxlQUFlLEVBQUUsZ0JBQWdCLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxtQkFBbUIsQ0FBQzs7OzsyQ0FFOUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyw0QkFBNEIsRUFBRTs7OztBQUE5RCxxQkFBVyxTQUFYLFdBQVc7O0FBQ2hCLHFCQUFXLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQzs7Ozs7OztHQUMxQyxDQUFDLENBQUM7QUFDSCxJQUFFLENBQUMsa0VBQWtFLEVBQUU7UUFDakUsZUFBZSxFQUNmLGdCQUFnQixTQU1mLFVBQVUsRUFBRSxXQUFXOzs7OztBQVB4Qix5QkFBZSxHQUFHLHdCQUF3QjtBQUMxQywwQkFBZ0IsR0FBRyxlQUFlOzsyQ0FDaEMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxlQUFlLEVBQUUsZ0JBQWdCLEVBQ2pDLGVBQWUsRUFBRSxnQkFBZ0IsRUFDakMsU0FBUyxFQUFFLFNBQVMsRUFDcEIsU0FBUyxFQUFFLFNBQVMsRUFDcEIsSUFBSSxDQUFDOzs7OzJDQUNNLE1BQU0sQ0FBQyxHQUFHLENBQUMsNEJBQTRCLEVBQUU7Ozs7QUFBMUUsb0JBQVUsU0FBVixVQUFVO0FBQUUscUJBQVcsU0FBWCxXQUFXOztBQUM1QixvQkFBVSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsZUFBZSxDQUFDLENBQUM7QUFDekMscUJBQVcsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLGdCQUFnQixDQUFDLENBQUM7Ozs7Ozs7R0FDNUMsQ0FBQyxDQUFDO0FBQ0gsSUFBRSxDQUFDLG1FQUFtRSxFQUFFO1FBQ2xFLGVBQWUsRUFDZixnQkFBZ0IsU0FNZixVQUFVLEVBQUUsV0FBVzs7Ozs7QUFQeEIseUJBQWUsR0FBRyx3QkFBd0I7QUFDMUMsMEJBQWdCLEdBQUcsZUFBZTs7MkNBQ2hDLE1BQU0sQ0FBQyxhQUFhLENBQUMsZUFBZSxFQUFFLGdCQUFnQixFQUNqQyxlQUFlLEVBQUUsZ0JBQWdCLEVBQ2pDLFNBQVMsRUFBRSxTQUFTLEVBQ3BCLFNBQVMsRUFBRSxTQUFTLEVBQ3BCLEtBQUssQ0FBQzs7OzsyQ0FDSyxNQUFNLENBQUMsR0FBRyxDQUFDLDRCQUE0QixFQUFFOzs7O0FBQTFFLG9CQUFVLFNBQVYsVUFBVTtBQUFFLHFCQUFXLFNBQVgsV0FBVzs7QUFDNUIsb0JBQVUsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLGVBQWUsQ0FBQyxDQUFDO0FBQ3pDLHFCQUFXLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDOzs7Ozs7O0dBQzVDLENBQUMsQ0FBQztDQUNKLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXN0L2Z1bmN0aW9uYWwvY29tbWFuZHMvZ2VuZXJhbC1lMmUtc3BlY3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2hhaSBmcm9tICdjaGFpJztcbmltcG9ydCBjaGFpQXNQcm9taXNlZCBmcm9tICdjaGFpLWFzLXByb21pc2VkJztcbmltcG9ydCB7IEFuZHJvaWREcml2ZXIgfSBmcm9tICcuLi8uLi8uLic7XG5pbXBvcnQgc2FtcGxlQXBwcyBmcm9tICdzYW1wbGUtYXBwcyc7XG5cbmNoYWkuc2hvdWxkKCk7XG5jaGFpLnVzZShjaGFpQXNQcm9taXNlZCk7XG5cbmxldCBkcml2ZXI7XG5sZXQgZGVmYXVsdENhcHMgPSB7XG4gIGFwcDogc2FtcGxlQXBwcygnQXBpRGVtb3MtZGVidWcnKSxcbiAgZGV2aWNlTmFtZTogJ0FuZHJvaWQnLFxuICBwbGF0Zm9ybU5hbWU6ICdBbmRyb2lkJ1xufTtcblxuZGVzY3JpYmUoJ3N0YXJ0QWN0aXZpdHknLCBmdW5jdGlvbiAoKSB7XG4gIGJlZm9yZShhc3luYyAoKSA9PiB7XG4gICAgZHJpdmVyID0gbmV3IEFuZHJvaWREcml2ZXIoKTtcbiAgICBhd2FpdCBkcml2ZXIuY3JlYXRlU2Vzc2lvbihkZWZhdWx0Q2Fwcyk7XG4gIH0pO1xuICBhZnRlcihhc3luYyAoKSA9PiB7XG4gICAgYXdhaXQgZHJpdmVyLmRlbGV0ZVNlc3Npb24oKTtcbiAgfSk7XG5cbiAgaXQoJ3Nob3VsZCBsYXVuY2ggYSBuZXcgcGFja2FnZSBhbmQgYWN0aXZpdHknLCBhc3luYyAoKSA9PiB7XG4gICAgbGV0IHthcHBQYWNrYWdlLCBhcHBBY3Rpdml0eX0gPSBhd2FpdCBkcml2ZXIuYWRiLmdldEZvY3VzZWRQYWNrYWdlQW5kQWN0aXZpdHkoKTtcbiAgICBhcHBQYWNrYWdlLnNob3VsZC5lcXVhbCgnaW8uYXBwaXVtLmFuZHJvaWQuYXBpcycpO1xuICAgIGFwcEFjdGl2aXR5LnNob3VsZC5lcXVhbCgnLkFwaURlbW9zJyk7XG5cbiAgICBsZXQgc3RhcnRBcHBQYWNrYWdlID0gJ2lvLmFwcGl1bS5hbmRyb2lkLmFwaXMnO1xuICAgIGxldCBzdGFydEFwcEFjdGl2aXR5ID0gJy52aWV3LlNwbGl0VG91Y2hWaWV3JztcblxuICAgIGF3YWl0IGRyaXZlci5zdGFydEFjdGl2aXR5KHN0YXJ0QXBwUGFja2FnZSwgc3RhcnRBcHBBY3Rpdml0eSk7XG5cbiAgICBsZXQge2FwcFBhY2thZ2U6IG5ld0FwcFBhY2thZ2UsIGFwcEFjdGl2aXR5OiBuZXdBcHBBY3Rpdml0eX0gPSBhd2FpdCBkcml2ZXIuYWRiLmdldEZvY3VzZWRQYWNrYWdlQW5kQWN0aXZpdHkoKTtcbiAgICBuZXdBcHBQYWNrYWdlLnNob3VsZC5lcXVhbChzdGFydEFwcFBhY2thZ2UpO1xuICAgIG5ld0FwcEFjdGl2aXR5LnNob3VsZC5lcXVhbChzdGFydEFwcEFjdGl2aXR5KTtcbiAgfSk7XG4gIGl0KCdzaG91bGQgYmUgYWJsZSB0byBsYXVuY2ggYWN0aXZpdHkgd2l0aCBjdXN0b20gaW50ZW50IHBhcmFtZXRlciBjYXRlZ29yeScsIGFzeW5jICgpID0+IHtcbiAgICBsZXQgc3RhcnRBcHBQYWNrYWdlID0gJ2lvLmFwcGl1bS5hbmRyb2lkLmFwaXMnO1xuICAgIGxldCBzdGFydEFwcEFjdGl2aXR5ID0gJ2lvLmFwcGl1bS5hbmRyb2lkLmFwaXMuYXBwLkhlbGxvV29ybGQnO1xuICAgIGxldCBzdGFydEludGVudENhdGVnb3J5ID0gJ2FwcGl1bS5hbmRyb2lkLmludGVudC5jYXRlZ29yeS5TQU1QTEVfQ09ERSc7XG5cbiAgICBhd2FpdCBkcml2ZXIuc3RhcnRBY3Rpdml0eShzdGFydEFwcFBhY2thZ2UsIHN0YXJ0QXBwQWN0aXZpdHksIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBzdGFydEludGVudENhdGVnb3J5KTtcblxuICAgIGxldCB7YXBwQWN0aXZpdHl9ID0gYXdhaXQgZHJpdmVyLmFkYi5nZXRGb2N1c2VkUGFja2FnZUFuZEFjdGl2aXR5KCk7XG4gICAgYXBwQWN0aXZpdHkuc2hvdWxkLmluY2x1ZGUoJ0hlbGxvV29ybGQnKTtcbiAgfSk7XG4gIGl0KCdzaG91bGQgYmUgYWJsZSB0byBsYXVuY2ggYWN0aXZpdHkgd2l0aCBkb250U3RvcEFwcE9uUmVzZXQgPSB0cnVlJywgYXN5bmMgKCkgPT4ge1xuICAgIGxldCBzdGFydEFwcFBhY2thZ2UgPSAnaW8uYXBwaXVtLmFuZHJvaWQuYXBpcyc7XG4gICAgbGV0IHN0YXJ0QXBwQWN0aXZpdHkgPSAnLm9zLk1vcnNlQ29kZSc7XG4gICAgYXdhaXQgZHJpdmVyLnN0YXJ0QWN0aXZpdHkoc3RhcnRBcHBQYWNrYWdlLCBzdGFydEFwcEFjdGl2aXR5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0QXBwUGFja2FnZSwgc3RhcnRBcHBBY3Rpdml0eSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1bmRlZmluZWQsIHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1bmRlZmluZWQsIHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnVlKTtcbiAgICBsZXQge2FwcFBhY2thZ2UsIGFwcEFjdGl2aXR5fSA9IGF3YWl0IGRyaXZlci5hZGIuZ2V0Rm9jdXNlZFBhY2thZ2VBbmRBY3Rpdml0eSgpO1xuICAgIGFwcFBhY2thZ2Uuc2hvdWxkLmVxdWFsKHN0YXJ0QXBwUGFja2FnZSk7XG4gICAgYXBwQWN0aXZpdHkuc2hvdWxkLmVxdWFsKHN0YXJ0QXBwQWN0aXZpdHkpO1xuICB9KTtcbiAgaXQoJ3Nob3VsZCBiZSBhYmxlIHRvIGxhdW5jaCBhY3Rpdml0eSB3aXRoIGRvbnRTdG9wQXBwT25SZXNldCA9IGZhbHNlJywgYXN5bmMgKCkgPT4ge1xuICAgIGxldCBzdGFydEFwcFBhY2thZ2UgPSAnaW8uYXBwaXVtLmFuZHJvaWQuYXBpcyc7XG4gICAgbGV0IHN0YXJ0QXBwQWN0aXZpdHkgPSAnLm9zLk1vcnNlQ29kZSc7XG4gICAgYXdhaXQgZHJpdmVyLnN0YXJ0QWN0aXZpdHkoc3RhcnRBcHBQYWNrYWdlLCBzdGFydEFwcEFjdGl2aXR5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0QXBwUGFja2FnZSwgc3RhcnRBcHBBY3Rpdml0eSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1bmRlZmluZWQsIHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1bmRlZmluZWQsIHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmYWxzZSk7XG4gICAgbGV0IHthcHBQYWNrYWdlLCBhcHBBY3Rpdml0eX0gPSBhd2FpdCBkcml2ZXIuYWRiLmdldEZvY3VzZWRQYWNrYWdlQW5kQWN0aXZpdHkoKTtcbiAgICBhcHBQYWNrYWdlLnNob3VsZC5lcXVhbChzdGFydEFwcFBhY2thZ2UpO1xuICAgIGFwcEFjdGl2aXR5LnNob3VsZC5lcXVhbChzdGFydEFwcEFjdGl2aXR5KTtcbiAgfSk7XG59KTtcbiJdfQ==