'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _ = require('../../../..');

var _sampleApps = require('sample-apps');

var _sampleApps2 = _interopRequireDefault(_sampleApps);

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

var driver = undefined;
var defaultCaps = {
  app: (0, _sampleApps2['default'])('ApiDemos-debug'),
  deviceName: 'Android',
  platformName: 'Android',
  appPackage: 'io.appium.android.apis',
  appActivity: '.view.DragAndDropDemo'
};

describe('apidemo - touch', function () {
  var _this = this;

  before(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          driver = new _.AndroidDriver();
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(driver.createSession(defaultCaps));

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
  after(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.deleteSession());

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
  afterEach(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.startActivity(defaultCaps.appPackage, defaultCaps.appActivity));

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
  describe('drag', function () {
    var _this2 = this;

    it('should drag by element', function callee$2$0() {
      var dot3, dot2, gestures, results;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.findElOrEls('id', 'io.appium.android.apis:id/drag_dot_3', false));

          case 2:
            dot3 = context$3$0.sent;
            context$3$0.next = 5;
            return _regeneratorRuntime.awrap(driver.findElOrEls('id', 'io.appium.android.apis:id/drag_dot_2', false));

          case 5:
            dot2 = context$3$0.sent;
            gestures = [{ options: { element: dot3.ELEMENT } }, { options: { element: dot2.ELEMENT } }];
            context$3$0.next = 9;
            return _regeneratorRuntime.awrap(driver.doTouchDrag(gestures));

          case 9:
            context$3$0.next = 11;
            return _regeneratorRuntime.awrap(driver.findElOrEls('id', 'io.appium.android.apis:id/drag_result_text', false));

          case 11:
            results = context$3$0.sent;
            context$3$0.next = 14;
            return _regeneratorRuntime.awrap(driver.getText(results.ELEMENT).should.eventually.include('Dropped'));

          case 14:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this2);
    });
    it('should drag by element with an offset', function callee$2$0() {
      var dot3, dot2, gestures, results;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.findElOrEls('id', 'io.appium.android.apis:id/drag_dot_3', false));

          case 2:
            dot3 = context$3$0.sent;
            context$3$0.next = 5;
            return _regeneratorRuntime.awrap(driver.findElOrEls('id', 'io.appium.android.apis:id/drag_dot_2', false));

          case 5:
            dot2 = context$3$0.sent;
            gestures = [{ options: { element: dot3.ELEMENT, x: 5, y: 5 } }, { options: { element: dot2.ELEMENT, x: 5, y: 5 } }];
            context$3$0.next = 9;
            return _regeneratorRuntime.awrap(driver.doTouchDrag(gestures));

          case 9:
            context$3$0.next = 11;
            return _regeneratorRuntime.awrap(driver.findElOrEls('id', 'io.appium.android.apis:id/drag_result_text', false));

          case 11:
            results = context$3$0.sent;
            context$3$0.next = 14;
            return _regeneratorRuntime.awrap(driver.getText(results.ELEMENT).should.eventually.include('Dropped'));

          case 14:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this2);
    });
  });
  describe('performTouch', function () {
    var _this3 = this;

    it('should drag by element', function callee$2$0() {
      var startEle, endEle, gestures, resultEle;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.findElement("id", "io.appium.android.apis:id/drag_dot_3"));

          case 2:
            startEle = context$3$0.sent;
            context$3$0.next = 5;
            return _regeneratorRuntime.awrap(driver.findElement("id", "io.appium.android.apis:id/drag_dot_2"));

          case 5:
            endEle = context$3$0.sent;
            gestures = [{ "action": "longPress", "options": { "element": startEle.ELEMENT } }, { "action": "moveTo", "options": { "element": endEle.ELEMENT } }, { "action": "release", "options": {} }];
            context$3$0.next = 9;
            return _regeneratorRuntime.awrap(driver.performTouch(gestures));

          case 9:
            context$3$0.next = 11;
            return _regeneratorRuntime.awrap(driver.findElement("id", "io.appium.android.apis:id/drag_result_text"));

          case 11:
            resultEle = context$3$0.sent;
            context$3$0.next = 14;
            return _regeneratorRuntime.awrap(driver.getText(resultEle.ELEMENT).should.eventually.equal("Dropped!"));

          case 14:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this3);
    });
    it('should drag by element by offset', function callee$2$0() {
      var startEle, endEle, gestures, element3;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.findElement("id", "io.appium.android.apis:id/drag_dot_3"));

          case 2:
            startEle = context$3$0.sent;
            context$3$0.next = 5;
            return _regeneratorRuntime.awrap(driver.findElement("id", "io.appium.android.apis:id/drag_dot_2"));

          case 5:
            endEle = context$3$0.sent;
            gestures = [{ "action": "longPress",
              "options": { "element": startEle.ELEMENT, "x": 5, "y": 5 } }, { "action": "moveTo", "options": { "element": endEle.ELEMENT, "x": 5, "y": 5 } }, { "action": "release", "options": {} }];
            context$3$0.next = 9;
            return _regeneratorRuntime.awrap(driver.performTouch(gestures));

          case 9:
            context$3$0.next = 11;
            return _regeneratorRuntime.awrap(driver.findElement("id", "io.appium.android.apis:id/drag_result_text"));

          case 11:
            element3 = context$3$0.sent;
            context$3$0.next = 14;
            return _regeneratorRuntime.awrap(driver.getText(element3.ELEMENT).should.eventually.equal("Dropped!"));

          case 14:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this3);
    });
    it('should drag by absolute position', function callee$2$0() {
      var startEle, startLoc, startSize, endEle, endLoc, endSize, gestures, resultEle;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.findElement("id", "io.appium.android.apis:id/drag_dot_3"));

          case 2:
            startEle = context$3$0.sent;
            context$3$0.next = 5;
            return _regeneratorRuntime.awrap(driver.getLocationInView(startEle.ELEMENT));

          case 5:
            startLoc = context$3$0.sent;
            context$3$0.next = 8;
            return _regeneratorRuntime.awrap(driver.getSize(startEle.ELEMENT));

          case 8:
            startSize = context$3$0.sent;
            context$3$0.next = 11;
            return _regeneratorRuntime.awrap(driver.findElement("id", "io.appium.android.apis:id/drag_dot_2"));

          case 11:
            endEle = context$3$0.sent;
            context$3$0.next = 14;
            return _regeneratorRuntime.awrap(driver.getLocationInView(endEle.ELEMENT));

          case 14:
            endLoc = context$3$0.sent;
            context$3$0.next = 17;
            return _regeneratorRuntime.awrap(driver.getSize(endEle.ELEMENT));

          case 17:
            endSize = context$3$0.sent;
            gestures = [{ "action": "longPress",
              "options": { "x": startLoc.x + startSize.width / 2,
                "y": startLoc.y + startSize.height / 2 } }, { "action": "moveTo",
              "options": { "x": endLoc.x + endSize.width / 2,
                "y": endLoc.y + endSize.height / 2 } }, { "action": "release", "options": {} }];
            context$3$0.next = 21;
            return _regeneratorRuntime.awrap(driver.performTouch(gestures));

          case 21:
            context$3$0.next = 23;
            return _regeneratorRuntime.awrap(driver.findElement("id", "io.appium.android.apis:id/drag_result_text"));

          case 23:
            resultEle = context$3$0.sent;
            context$3$0.next = 26;
            return _regeneratorRuntime.awrap(driver.getText(resultEle.ELEMENT).should.eventually.equal("Dropped!"));

          case 26:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this3);
    });
  });
});

// reset the view by restarting the activity
//# sourceMappingURL=data:application/json;base64,