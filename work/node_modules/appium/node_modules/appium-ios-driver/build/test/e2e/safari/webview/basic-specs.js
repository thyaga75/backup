/* globals expect */
'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _desired = require('./desired');

var _desired2 = _interopRequireDefault(_desired);

var _setupBase = require('../../setup-base');

var _setupBase2 = _interopRequireDefault(_setupBase);

var _helpersWebview = require('../../helpers/webview');

describe('safari - webview - basics', function () {
  var _this = this;

  var driver = (0, _setupBase2['default'])(this, _desired2['default'], { 'no-reset': true }).driver;
  beforeEach(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap((0, _helpersWebview.loadWebView)(_desired2['default'], driver));

        case 2:
          return context$2$0.abrupt('return', context$2$0.sent);

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should find a web element in the web view', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('id', 'i_am_an_id'));

        case 2:
          context$2$0.sent.should.exist;

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should find multiple web elements in the web view', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElements('tag name', 'a'));

        case 2:
          context$2$0.sent.should.have.length.above(0);

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should fail gracefully to find multiple missing web elements in the web view', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElements('tag name', 'blar'));

        case 2:
          context$2$0.sent.should.have.length(0);

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should find element from another element', function callee$1$0() {
    var el;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('class name', 'border'));

        case 2:
          el = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.findElementFromElement('xpath', './form', el));

        case 5:
          context$2$0.sent.should.exist;

        case 6:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should be able to click links', function callee$1$0() {
    var el;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('link text', 'i am a link'));

        case 2:
          el = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.click(el));

        case 5:
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap((0, _helpersWebview.spinTitle)('I am another page title', driver));

        case 7:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should retrieve an element attribute', function callee$1$0() {
    var el;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('id', 'i_am_an_id'));

        case 2:
          el = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.getAttribute('id', el));

        case 5:
          context$2$0.sent.should.be.equal('i_am_an_id');
          context$2$0.next = 8;
          return _regeneratorRuntime.awrap(driver.getAttribute('blar', el));

        case 8:
          context$2$0.t0 = context$2$0.sent;
          expect(context$2$0.t0).to.be['null'];

        case 10:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should retrieve implicit attributes', function callee$1$0() {
    var els;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElements('tag name', 'option'));

        case 2:
          els = context$2$0.sent;

          els.should.have.length(3);

          context$2$0.next = 6;
          return _regeneratorRuntime.awrap(driver.getAttribute('index', els[2]));

        case 6:
          context$2$0.sent.should.be.equal('2');

        case 7:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should retrieve an element text', function callee$1$0() {
    var el;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('id', 'i_am_an_id'));

        case 2:
          el = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.getText(el));

        case 5:
          context$2$0.sent.should.be.equal('I am a div');

        case 6:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it.skip('should check if two elements are equals', function callee$1$0() {
    var el1, el2;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('id', 'i_am_an_id'));

        case 2:
          el1 = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.findElement('css selector', '#i_am_an_id'));

        case 5:
          el2 = context$2$0.sent;

          el1.should.be.equal(el2);

        case 7:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should return the page source', function callee$1$0() {
    var source;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.getPageSource());

        case 2:
          source = context$2$0.sent;

          source.should.include('<html');
          source.should.include('I am a page title');
          source.should.include('i appear 3 times');
          source.should.include('</html>');

        case 7:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should get current url', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.getUrl());

        case 2:
          context$2$0.sent.should.include('test/guinea-pig');

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should send keystrokes to specific element', function callee$1$0() {
    var el;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('id', 'comments'));

        case 2:
          el = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.clear(el));

        case 5:
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap(driver.setValue('hello world', el));

        case 7:
          context$2$0.next = 9;
          return _regeneratorRuntime.awrap(driver.getAttribute('value', el));

        case 9:
          context$2$0.sent.should.be.equal('hello world');

        case 10:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should send keystrokes to active element', function callee$1$0() {
    var el;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('id', 'comments'));

        case 2:
          el = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.clear(el));

        case 5:
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap(driver.click(el));

        case 7:
          context$2$0.next = 9;
          return _regeneratorRuntime.awrap(driver.keys('hello world'));

        case 9:
          context$2$0.next = 11;
          return _regeneratorRuntime.awrap(driver.getAttribute('value', el));

        case 11:
          context$2$0.sent.should.be.equal('hello world');

        case 12:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should clear element', function callee$1$0() {
    var el;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('id', 'comments'));

        case 2:
          el = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.setValue('hello world', el));

        case 5:
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap(driver.getAttribute('value', el));

        case 7:
          context$2$0.sent.should.have.length.above(0);
          context$2$0.next = 10;
          return _regeneratorRuntime.awrap(driver.clear(el));

        case 10:
          context$2$0.next = 12;
          return _regeneratorRuntime.awrap(driver.getAttribute('value', el));

        case 12:
          context$2$0.sent.should.be.equal('');

        case 13:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should say whether an input is selected', function callee$1$0() {
    var el;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('id', 'unchecked_checkbox'));

        case 2:
          el = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.elementSelected(el));

        case 5:
          context$2$0.sent.should.not.be.ok;
          context$2$0.next = 8;
          return _regeneratorRuntime.awrap(driver.click(el));

        case 8:
          context$2$0.next = 10;
          return _regeneratorRuntime.awrap(driver.elementSelected(el));

        case 10:
          context$2$0.sent.should.be.ok;

        case 11:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should be able to retrieve css properties', function callee$1$0() {
    var el;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('id', 'fbemail'));

        case 2:
          el = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.getCssProperty('background-color', el.ELEMENT));

        case 5:
          context$2$0.sent.should.be.equal('rgba(255, 255, 255, 1)');

        case 6:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should retrieve an element size', function callee$1$0() {
    var el, size;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('id', 'i_am_an_id'));

        case 2:
          el = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.getSize(el));

        case 5:
          size = context$2$0.sent;

          size.width.should.be.above(0);
          size.height.should.be.above(0);

        case 8:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should get location of an element', function callee$1$0() {
    var el, loc;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('id', 'fbemail'));

        case 2:
          el = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.getLocation(el));

        case 5:
          loc = context$2$0.sent;

          loc.x.should.be.above(0);
          loc.y.should.be.above(0);

        case 8:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  /**
   * getTagName not supported by mjwp
   */
  it.skip('should retrieve tag name of an element', function callee$1$0() {
    var el, a;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('id', 'fbemail'));

        case 2:
          el = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.findElement('css selector', 'a'));

        case 5:
          a = context$2$0.sent;
          context$2$0.next = 8;
          return _regeneratorRuntime.awrap(driver.getTagName(el));

        case 8:
          context$2$0.sent.should.be.equal('input');
          context$2$0.next = 11;
          return _regeneratorRuntime.awrap(driver.getTagName(a));

        case 11:
          context$2$0.sent.should.be.equal('a');

        case 12:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should retrieve a window size', function callee$1$0() {
    var size;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.getWindowSize());

        case 2:
          size = context$2$0.sent;

          size.height.should.be.above(0);
          size.width.should.be.above(0);

        case 5:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should move to an arbitrary x-y element and click on it', function callee$1$0() {
    var el;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('link text', 'i am a link'));

        case 2:
          el = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.moveTo(el, 5, 15));

        case 5:
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap(driver.click(el));

        case 7:
          context$2$0.next = 9;
          return _regeneratorRuntime.awrap((0, _helpersWebview.spinTitle)('I am another page title', driver));

        case 9:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should submit a form', function callee$1$0() {
    var el, form;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      var _this2 = this;

      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('id', 'comments'));

        case 2:
          el = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.findElement('id', 'jumpContact'));

        case 5:
          form = context$2$0.sent;
          context$2$0.next = 8;
          return _regeneratorRuntime.awrap(driver.setValue('This is a comment', el));

        case 8:
          context$2$0.next = 10;
          return _regeneratorRuntime.awrap(driver.submit(form.ELEMENT));

        case 10:
          context$2$0.next = 12;
          return _regeneratorRuntime.awrap((0, _helpersWebview.spinWait)(function callee$2$0() {
            var el;
            return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
              while (1) switch (context$3$0.prev = context$3$0.next) {
                case 0:
                  context$3$0.next = 2;
                  return _regeneratorRuntime.awrap(driver.findElement('id', 'your_comments'));

                case 2:
                  el = context$3$0.sent;
                  context$3$0.next = 5;
                  return _regeneratorRuntime.awrap(driver.getText(el));

                case 5:
                  context$3$0.sent.should.be.equal('Your comments: This is a comment');

                case 6:
                case 'end':
                  return context$3$0.stop();
              }
            }, null, _this2);
          }));

        case 12:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should return true when the element is displayed', function callee$1$0() {
    var el;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('link text', 'i am a link'));

        case 2:
          el = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.elementDisplayed(el));

        case 5:
          context$2$0.sent.should.be.ok;

        case 6:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should return false when the element is not displayed', function callee$1$0() {
    var el;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('id', 'invisible div'));

        case 2:
          el = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.elementDisplayed(el));

        case 5:
          context$2$0.sent.should.not.be.ok;

        case 6:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should return true when the element is enabled', function callee$1$0() {
    var el;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('link text', 'i am a link'));

        case 2:
          el = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.elementEnabled(el));

        case 5:
          context$2$0.sent.should.be.ok;

        case 6:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should return false when the element is not enabled', function callee$1$0() {
    var el;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('id', 'fbemail'));

        case 2:
          el = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.execute('$(\'#fbemail\').attr(\'disabled\', \'disabled\');'));

        case 5:
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap(driver.elementEnabled(el));

        case 7:
          context$2$0.sent.should.not.be.ok;

        case 8:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should return the active element', function callee$1$0() {
    var testText, el, activeEl;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          testText = 'hi there';
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(driver.findElement('id', 'i_am_a_textbox'));

        case 3:
          el = context$2$0.sent;
          context$2$0.next = 6;
          return _regeneratorRuntime.awrap(driver.setValue(testText, el));

        case 6:
          context$2$0.next = 8;
          return _regeneratorRuntime.awrap(driver.active());

        case 8:
          activeEl = context$2$0.sent;
          context$2$0.next = 11;
          return _regeneratorRuntime.awrap(driver.getAttribute('value', activeEl));

        case 11:
          context$2$0.t0 = testText;
          context$2$0.sent.should.be.equal(context$2$0.t0);

        case 13:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should properly navigate to anchor', function callee$1$0() {
    var curl;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.getUrl());

        case 2:
          curl = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.setUrl(curl));

        case 5:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should be able to refresh', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.refresh());

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
});
//# sourceMappingURL=data:application/json;base64,