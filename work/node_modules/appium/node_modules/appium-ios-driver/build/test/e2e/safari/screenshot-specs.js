'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _setupBase = require("../setup-base");

var _setupBase2 = _interopRequireDefault(_setupBase);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

describe('safari - screenshots', function () {
  describe('default', function () {
    var _this = this;

    var driver = (0, _setupBase2['default'])(this, { browserName: 'safari' }).driver;

    it('should get an app screenshot', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.getScreenshot());

          case 2:
            context$3$0.sent.should.exist;

          case 3:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });

    // TODO: fails in ci env, investigate
    it('should get an app screenshot in landscape mode @skip-ci', function callee$2$0() {
      var screenshot1, screenshot2;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.getScreenshot());

          case 2:
            screenshot1 = context$3$0.sent;

            screenshot1.should.exist;

            context$3$0.prev = 4;
            context$3$0.next = 7;
            return _regeneratorRuntime.awrap(driver.setOrientation("LANDSCAPE"));

          case 7:
            context$3$0.next = 11;
            break;

          case 9:
            context$3$0.prev = 9;
            context$3$0.t0 = context$3$0['catch'](4);

          case 11:
            context$3$0.next = 13;
            return _regeneratorRuntime.awrap(driver.getScreenshot());

          case 13:
            screenshot2 = context$3$0.sent;

            screenshot2.should.exist;
            screenshot2.should.not.eql(screenshot1);

            // cooldown
            context$3$0.next = 18;
            return _regeneratorRuntime.awrap(_bluebird2['default'].delay(3000));

          case 18:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this, [[4, 9]]);
    });
  });

  describe('setting screenshotWaitTimeout', function () {
    var _this2 = this;

    var driver = (0, _setupBase2['default'])(this, {
      browserName: 'safari',
      screenshotWaitTimeout: 5
    }).driver;

    it('should get an app screenshot', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.getScreenshot());

          case 2:
            context$3$0.sent.should.exist;

          case 3:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this2);
    });
  });
});

// A useless error does often exist here, let's ignore it
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZTJlL3NhZmFyaS9zY3JlZW5zaG90LXNwZWNzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozt5QkFBa0IsZUFBZTs7Ozt3QkFDbkIsVUFBVTs7OztBQUV4QixRQUFRLENBQUMsc0JBQXNCLEVBQUUsWUFBVztBQUMxQyxVQUFRLENBQUMsU0FBUyxFQUFFLFlBQVc7OztBQUM3QixRQUFNLE1BQU0sR0FBRyw0QkFBTSxJQUFJLEVBQUUsRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUM7O0FBRTdELE1BQUUsQ0FBQyw4QkFBOEIsRUFBRTs7Ozs7NkNBQzFCLE1BQU0sQ0FBQyxhQUFhLEVBQUU7Ozs2QkFBRSxNQUFNLENBQUMsS0FBSzs7Ozs7OztLQUM1QyxDQUFDLENBQUM7OztBQUdILE1BQUUsQ0FBQyx5REFBeUQsRUFBRTtVQUN4RCxXQUFXLEVBU1gsV0FBVzs7Ozs7NkNBVFUsTUFBTSxDQUFDLGFBQWEsRUFBRTs7O0FBQTNDLHVCQUFXOztBQUNmLHVCQUFXLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQzs7Ozs2Q0FHakIsTUFBTSxDQUFDLGNBQWMsQ0FBQyxXQUFXLENBQUM7Ozs7Ozs7Ozs7Ozs2Q0FLbEIsTUFBTSxDQUFDLGFBQWEsRUFBRTs7O0FBQTFDLHVCQUFXOztBQUNmLHVCQUFXLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQztBQUN6Qix1QkFBVyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxDQUFDOzs7OzZDQUdsQyxzQkFBRSxLQUFLLENBQUMsSUFBSSxDQUFDOzs7Ozs7O0tBQ3BCLENBQUMsQ0FBQztHQUNKLENBQUMsQ0FBQzs7QUFFSCxVQUFRLENBQUMsK0JBQStCLEVBQUUsWUFBVzs7O0FBQ25ELFFBQU0sTUFBTSxHQUFHLDRCQUFNLElBQUksRUFBRTtBQUN6QixpQkFBVyxFQUFFLFFBQVE7QUFDckIsMkJBQXFCLEVBQUUsQ0FBQztLQUN6QixDQUFDLENBQUMsTUFBTSxDQUFDOztBQUVWLE1BQUUsQ0FBQyw4QkFBOEIsRUFBRTs7Ozs7NkNBQzFCLE1BQU0sQ0FBQyxhQUFhLEVBQUU7Ozs2QkFBRSxNQUFNLENBQUMsS0FBSzs7Ozs7OztLQUM1QyxDQUFDLENBQUM7R0FDSixDQUFDLENBQUM7Q0FFSixDQUFDLENBQUMiLCJmaWxlIjoidGVzdC9lMmUvc2FmYXJpL3NjcmVlbnNob3Qtc3BlY3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc2V0dXAgZnJvbSBcIi4uL3NldHVwLWJhc2VcIjtcbmltcG9ydCBCIGZyb20gJ2JsdWViaXJkJztcblxuZGVzY3JpYmUoJ3NhZmFyaSAtIHNjcmVlbnNob3RzJywgZnVuY3Rpb24oKSB7XG4gIGRlc2NyaWJlKCdkZWZhdWx0JywgZnVuY3Rpb24oKSB7XG4gICAgY29uc3QgZHJpdmVyID0gc2V0dXAodGhpcywgeyBicm93c2VyTmFtZTogJ3NhZmFyaScgfSkuZHJpdmVyO1xuXG4gICAgaXQoJ3Nob3VsZCBnZXQgYW4gYXBwIHNjcmVlbnNob3QnLCBhc3luYyAoKSA9PiB7XG4gICAgICAoYXdhaXQgZHJpdmVyLmdldFNjcmVlbnNob3QoKSkuc2hvdWxkLmV4aXN0O1xuICAgIH0pO1xuXG4gICAgLy8gVE9ETzogZmFpbHMgaW4gY2kgZW52LCBpbnZlc3RpZ2F0ZVxuICAgIGl0KCdzaG91bGQgZ2V0IGFuIGFwcCBzY3JlZW5zaG90IGluIGxhbmRzY2FwZSBtb2RlIEBza2lwLWNpJywgYXN5bmMgKCkgPT4ge1xuICAgICAgbGV0IHNjcmVlbnNob3QxID0gKGF3YWl0IGRyaXZlci5nZXRTY3JlZW5zaG90KCkpO1xuICAgICAgc2NyZWVuc2hvdDEuc2hvdWxkLmV4aXN0O1xuXG4gICAgICB0cnkge1xuICAgICAgICBhd2FpdCBkcml2ZXIuc2V0T3JpZW50YXRpb24oXCJMQU5EU0NBUEVcIik7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIEEgdXNlbGVzcyBlcnJvciBkb2VzIG9mdGVuIGV4aXN0IGhlcmUsIGxldCdzIGlnbm9yZSBpdFxuICAgICAgfVxuXG4gICAgICBsZXQgc2NyZWVuc2hvdDIgPSBhd2FpdCBkcml2ZXIuZ2V0U2NyZWVuc2hvdCgpO1xuICAgICAgc2NyZWVuc2hvdDIuc2hvdWxkLmV4aXN0O1xuICAgICAgc2NyZWVuc2hvdDIuc2hvdWxkLm5vdC5lcWwoc2NyZWVuc2hvdDEpO1xuXG4gICAgICAvLyBjb29sZG93blxuICAgICAgYXdhaXQgQi5kZWxheSgzMDAwKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgZGVzY3JpYmUoJ3NldHRpbmcgc2NyZWVuc2hvdFdhaXRUaW1lb3V0JywgZnVuY3Rpb24oKSB7XG4gICAgY29uc3QgZHJpdmVyID0gc2V0dXAodGhpcywge1xuICAgICAgYnJvd3Nlck5hbWU6ICdzYWZhcmknLFxuICAgICAgc2NyZWVuc2hvdFdhaXRUaW1lb3V0OiA1XG4gICAgfSkuZHJpdmVyO1xuXG4gICAgaXQoJ3Nob3VsZCBnZXQgYW4gYXBwIHNjcmVlbnNob3QnLCBhc3luYyAoKSA9PiB7XG4gICAgICAoYXdhaXQgZHJpdmVyLmdldFNjcmVlbnNob3QoKSkuc2hvdWxkLmV4aXN0O1xuICAgIH0pO1xuICB9KTtcblxufSk7XG4iXX0=