/* globals expect */
'use strict';

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _desired = require('./desired');

var _desired2 = _interopRequireDefault(_desired);

var _setupBase = require('../../setup-base');

var _setupBase2 = _interopRequireDefault(_setupBase);

var _helpersWebview = require('../../helpers/webview');

describe("safari - webview - touch actions", function () {
  var _this = this;

  var driver = (0, _setupBase2['default'])(this, _Object$assign({ 'noReset': true }, _desired2['default'])).driver;
  beforeEach(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap((0, _helpersWebview.loadWebView)(_desired2['default'], driver));

        case 2:
          return context$2$0.abrupt('return', context$2$0.sent);

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should not be able to do native touch actions', function callee$1$0() {
    var el, gestures;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      var _this2 = this;

      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('id', 'comments'));

        case 2:
          el = context$2$0.sent;
          gestures = [{ action: 'press', options: { element: el } }, { action: 'release' }];

          expect(function callee$2$0() {
            return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
              while (1) switch (context$3$0.prev = context$3$0.next) {
                case 0:
                  context$3$0.next = 2;
                  return _regeneratorRuntime.awrap(driver.performTouch(gestures));

                case 2:
                  return context$3$0.abrupt('return', context$3$0.sent);

                case 3:
                case 'end':
                  return context$3$0.stop();
              }
            }, null, _this2);
          }).to['throw'];

        case 5:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZTJlL3NhZmFyaS93ZWJ2aWV3L3RvdWNoLXNwZWNzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozt1QkFDb0IsV0FBVzs7Ozt5QkFDYixrQkFBa0I7Ozs7OEJBQ1IsdUJBQXVCOztBQUVuRCxRQUFRLENBQUMsa0NBQWtDLEVBQUUsWUFBWTs7O0FBQ3ZELE1BQU0sTUFBTSxHQUFHLDRCQUFNLElBQUksRUFBRSxlQUFjLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSx1QkFBVSxDQUFDLENBQUMsTUFBTSxDQUFDO0FBQy9FLFlBQVUsQ0FBQzs7Ozs7MkNBQWtCLHVEQUFxQixNQUFNLENBQUM7Ozs7Ozs7Ozs7R0FBQSxDQUFDLENBQUM7O0FBRTNELElBQUUsQ0FBQywrQ0FBK0MsRUFBRTtRQUM5QyxFQUFFLEVBQ0YsUUFBUTs7Ozs7OzsyQ0FERyxNQUFNLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxVQUFVLENBQUM7OztBQUEvQyxZQUFFO0FBQ0Ysa0JBQVEsR0FBRyxDQUNiLEVBQUMsTUFBTSxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsRUFBQyxPQUFPLEVBQUUsRUFBRSxFQUFDLEVBQUMsRUFDekMsRUFBQyxNQUFNLEVBQUUsU0FBUyxFQUFDLENBQ3BCOztBQUNELGdCQUFNLENBQUM7Ozs7O21EQUFrQixNQUFNLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQzs7Ozs7Ozs7OztXQUFBLENBQUMsQ0FBQyxFQUFFLFNBQU0sQ0FBQzs7Ozs7OztHQUNsRSxDQUFDLENBQUM7Q0FDSixDQUFDLENBQUMiLCJmaWxlIjoidGVzdC9lMmUvc2FmYXJpL3dlYnZpZXcvdG91Y2gtc3BlY3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWxzIGV4cGVjdCAqL1xuaW1wb3J0IGRlc2lyZWQgZnJvbSAnLi9kZXNpcmVkJztcbmltcG9ydCBzZXR1cCBmcm9tICcuLi8uLi9zZXR1cC1iYXNlJztcbmltcG9ydCB7IGxvYWRXZWJWaWV3IH0gZnJvbSAnLi4vLi4vaGVscGVycy93ZWJ2aWV3JztcblxuZGVzY3JpYmUoXCJzYWZhcmkgLSB3ZWJ2aWV3IC0gdG91Y2ggYWN0aW9uc1wiLCBmdW5jdGlvbiAoKSB7XG4gIGNvbnN0IGRyaXZlciA9IHNldHVwKHRoaXMsIE9iamVjdC5hc3NpZ24oeyAnbm9SZXNldCc6IHRydWUgfSwgZGVzaXJlZCkpLmRyaXZlcjtcbiAgYmVmb3JlRWFjaChhc3luYyAoKSA9PiBhd2FpdCBsb2FkV2ViVmlldyhkZXNpcmVkLCBkcml2ZXIpKTtcblxuICBpdCgnc2hvdWxkIG5vdCBiZSBhYmxlIHRvIGRvIG5hdGl2ZSB0b3VjaCBhY3Rpb25zJywgYXN5bmMgKCkgPT4ge1xuICAgIGxldCBlbCA9IGF3YWl0IGRyaXZlci5maW5kRWxlbWVudCgnaWQnLCAnY29tbWVudHMnKTtcbiAgICBsZXQgZ2VzdHVyZXMgPSBbXG4gICAgICB7YWN0aW9uOiAncHJlc3MnLCBvcHRpb25zOiB7ZWxlbWVudDogZWx9fSxcbiAgICAgIHthY3Rpb246ICdyZWxlYXNlJ31cbiAgICBdO1xuICAgIGV4cGVjdChhc3luYyAoKSA9PiBhd2FpdCBkcml2ZXIucGVyZm9ybVRvdWNoKGdlc3R1cmVzKSkudG8udGhyb3c7XG4gIH0pO1xufSk7XG4iXX0=