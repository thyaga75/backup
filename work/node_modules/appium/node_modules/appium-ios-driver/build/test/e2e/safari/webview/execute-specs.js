/* globals expect */
'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _desired = require('./desired');

var _desired2 = _interopRequireDefault(_desired);

var _setupBase = require('../../setup-base');

var _setupBase2 = _interopRequireDefault(_setupBase);

var _helpersWebview = require('../../helpers/webview');

var SCROLL_INTO_VIEW = 'return arguments[0].scrollIntoView(true);';
var GET_RIGHT_INNERHTML = 'return document.body.innerHTML.indexOf(\'I am some page content\') > 0';
var GET_WRONG_INNERHTML = 'return document.body.innerHTML.indexOf(\'I am not some page content\') > 0';
var GET_ELEM_BY_TAGNAME = 'return document.getElementsByTagName(\'a\');';

describe('safari - webview - execute', function () {
  var _this = this;

  var driver = (0, _setupBase2['default'])(this, _desired2['default'], { 'no-reset': true }).driver;
  before(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap((0, _helpersWebview.loadWebView)(_desired2['default'], driver));

        case 2:
          return context$2$0.abrupt('return', context$2$0.sent);

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should bubble up javascript errors', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      var _this2 = this;

      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          expect(function callee$2$0() {
            return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
              while (1) switch (context$3$0.prev = context$3$0.next) {
                case 0:
                  context$3$0.next = 2;
                  return _regeneratorRuntime.awrap(driver.execute('\'nan\'--'));

                case 2:
                  return context$3$0.abrupt('return', context$3$0.sent);

                case 3:
                case 'end':
                  return context$3$0.stop();
              }
            }, null, _this2);
          }).to['throw'];

        case 1:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should eval javascript', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.execute('return 1'));

        case 2:
          context$2$0.sent.should.be.equal(1);

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should not be returning hardcoded results', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.execute('return 1+1'));

        case 2:
          context$2$0.sent.should.be.equal(2);

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should return nothing when you don\'t explicitly return', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.execute('1+1'));

        case 2:
          context$2$0.t0 = context$2$0.sent;
          expect(context$2$0.t0).to.not.exist;

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should execute code inside the web view', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.execute(GET_RIGHT_INNERHTML));

        case 2:
          context$2$0.sent.should.be.ok;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.execute(GET_WRONG_INNERHTML));

        case 5:
          context$2$0.sent.should.not.be.ok;

        case 6:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should convert selenium element arg to webview element', function callee$1$0() {
    var el;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('id', 'useragent'));

        case 2:
          el = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.execute(SCROLL_INTO_VIEW, [el]));

        case 5:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should catch stale or undefined element as arg', function callee$1$0() {
    var el;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('id', 'useragent'));

        case 2:
          el = context$2$0.sent;
          return context$2$0.abrupt('return', driver.execute(SCROLL_INTO_VIEW, [{ 'ELEMENT': el.value + 1 }]).should.beRejected);

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should be able to return multiple elements from javascript', function callee$1$0() {
    var res;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.execute(GET_ELEM_BY_TAGNAME));

        case 2:
          res = context$2$0.sent;

          expect(res).to.have.length.above(0);

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
  it('should pass along non-element arguments', function callee$1$0() {
    var arg;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          arg = 'non-element-argument';
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(driver.execute('var args = Array.prototype.slice.call(arguments, 0); return args[0];', [arg]));

        case 3:
          context$2$0.t0 = arg;
          context$2$0.sent.should.be.equal(context$2$0.t0);

        case 5:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZTJlL3NhZmFyaS93ZWJ2aWV3L2V4ZWN1dGUtc3BlY3MuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozt1QkFDb0IsV0FBVzs7Ozt5QkFDYixrQkFBa0I7Ozs7OEJBQ1IsdUJBQXVCOztBQUVuRCxJQUFNLGdCQUFnQiw4Q0FBOEMsQ0FBQztBQUNyRSxJQUFNLG1CQUFtQiwyRUFBeUUsQ0FBQztBQUNuRyxJQUFNLG1CQUFtQiwrRUFBNkUsQ0FBQztBQUN2RyxJQUFNLG1CQUFtQixpREFBK0MsQ0FBQzs7QUFFekUsUUFBUSxDQUFDLDRCQUE0QixFQUFFLFlBQVc7OztBQUNoRCxNQUFNLE1BQU0sR0FBRyw0QkFBTSxJQUFJLHdCQUFXLEVBQUMsVUFBVSxFQUFFLElBQUksRUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDO0FBQy9ELFFBQU0sQ0FBQzs7Ozs7MkNBQWtCLHVEQUFxQixNQUFNLENBQUM7Ozs7Ozs7Ozs7R0FBQSxDQUFDLENBQUM7O0FBRXZELElBQUUsQ0FBQyxvQ0FBb0MsRUFBRTs7Ozs7O0FBQ3ZDLGdCQUFNLENBQUM7Ozs7O21EQUFrQixNQUFNLENBQUMsT0FBTyxhQUFXOzs7Ozs7Ozs7O1dBQUEsQ0FBQyxDQUFDLEVBQUUsU0FBTSxDQUFDOzs7Ozs7O0dBQzlELENBQUMsQ0FBQzs7QUFFSCxJQUFFLENBQUMsd0JBQXdCLEVBQUU7Ozs7OzJDQUNwQixNQUFNLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQzs7OzJCQUFFLE1BQU0sQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUM7Ozs7Ozs7R0FDckQsQ0FBQyxDQUFDOztBQUVILElBQUUsQ0FBQywyQ0FBMkMsRUFBRTs7Ozs7MkNBQ3ZDLE1BQU0sQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDOzs7MkJBQUUsTUFBTSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQzs7Ozs7OztHQUN2RCxDQUFDLENBQUM7O0FBRUgsSUFBRSw0REFBMkQ7Ozs7OzJDQUM5QyxNQUFNLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQzs7OztBQUFsQyxnQkFBTSxpQkFBOEIsRUFBRSxDQUFDLEdBQUcsQ0FBQyxLQUFLOzs7Ozs7O0dBQ2pELENBQUMsQ0FBQzs7QUFFSCxJQUFFLENBQUMseUNBQXlDLEVBQUU7Ozs7OzJDQUNyQyxNQUFNLENBQUMsT0FBTyxDQUFDLG1CQUFtQixDQUFDOzs7MkJBQUUsTUFBTSxDQUFDLEVBQUUsQ0FBQyxFQUFFOzsyQ0FDakQsTUFBTSxDQUFDLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQzs7OzJCQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUU7Ozs7Ozs7R0FDN0QsQ0FBQyxDQUFDOztBQUVILElBQUUsQ0FBQyx3REFBd0QsRUFBRTtRQUN2RCxFQUFFOzs7OzsyQ0FBUyxNQUFNLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxXQUFXLENBQUM7OztBQUFoRCxZQUFFOzsyQ0FDQSxNQUFNLENBQUMsT0FBTyxDQUFDLGdCQUFnQixFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7Ozs7Ozs7R0FDN0MsQ0FBQyxDQUFDOztBQUVILElBQUUsQ0FBQyxnREFBZ0QsRUFBRTtRQUMvQyxFQUFFOzs7OzsyQ0FBUyxNQUFNLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxXQUFXLENBQUM7OztBQUFoRCxZQUFFOzhDQUNDLE1BQU0sQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxFQUFDLFNBQVMsRUFBRyxFQUFFLENBQUMsS0FBSyxHQUFHLENBQUMsQUFBQyxFQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVOzs7Ozs7O0dBQ3pGLENBQUMsQ0FBQzs7QUFFSCxJQUFFLENBQUMsNERBQTRELEVBQUU7UUFDM0QsR0FBRzs7Ozs7MkNBQVMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQzs7O0FBQS9DLGFBQUc7O0FBQ1AsZ0JBQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7Ozs7Ozs7R0FDckMsQ0FBQyxDQUFDO0FBQ0gsSUFBRSxDQUFDLHlDQUF5QyxFQUFFO1FBQ3hDLEdBQUc7Ozs7QUFBSCxhQUFHLEdBQUcsc0JBQXNCOzsyQ0FDekIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxzRUFBc0UsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDOzs7MkJBQWtCLEdBQUc7MkJBQW5CLE1BQU0sQ0FBQyxFQUFFLENBQUMsS0FBSzs7Ozs7OztHQUN0SCxDQUFDLENBQUM7Q0FDSixDQUFDLENBQUMiLCJmaWxlIjoidGVzdC9lMmUvc2FmYXJpL3dlYnZpZXcvZXhlY3V0ZS1zcGVjcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGdsb2JhbHMgZXhwZWN0ICovXG5pbXBvcnQgZGVzaXJlZCBmcm9tICcuL2Rlc2lyZWQnO1xuaW1wb3J0IHNldHVwIGZyb20gJy4uLy4uL3NldHVwLWJhc2UnO1xuaW1wb3J0IHsgbG9hZFdlYlZpZXcgfSBmcm9tICcuLi8uLi9oZWxwZXJzL3dlYnZpZXcnO1xuXG5jb25zdCBTQ1JPTExfSU5UT19WSUVXID0gYHJldHVybiBhcmd1bWVudHNbMF0uc2Nyb2xsSW50b1ZpZXcodHJ1ZSk7YDtcbmNvbnN0IEdFVF9SSUdIVF9JTk5FUkhUTUwgPSBgcmV0dXJuIGRvY3VtZW50LmJvZHkuaW5uZXJIVE1MLmluZGV4T2YoJ0kgYW0gc29tZSBwYWdlIGNvbnRlbnQnKSA+IDBgO1xuY29uc3QgR0VUX1dST05HX0lOTkVSSFRNTCA9IGByZXR1cm4gZG9jdW1lbnQuYm9keS5pbm5lckhUTUwuaW5kZXhPZignSSBhbSBub3Qgc29tZSBwYWdlIGNvbnRlbnQnKSA+IDBgO1xuY29uc3QgR0VUX0VMRU1fQllfVEFHTkFNRSA9IGByZXR1cm4gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2EnKTtgO1xuXG5kZXNjcmliZSgnc2FmYXJpIC0gd2VidmlldyAtIGV4ZWN1dGUnLCBmdW5jdGlvbigpIHtcbiAgY29uc3QgZHJpdmVyID0gc2V0dXAodGhpcywgZGVzaXJlZCwgeyduby1yZXNldCc6IHRydWV9KS5kcml2ZXI7XG4gIGJlZm9yZShhc3luYyAoKSA9PiBhd2FpdCBsb2FkV2ViVmlldyhkZXNpcmVkLCBkcml2ZXIpKTtcblxuICBpdCgnc2hvdWxkIGJ1YmJsZSB1cCBqYXZhc2NyaXB0IGVycm9ycycsIGFzeW5jICgpID0+IHtcbiAgICBleHBlY3QoYXN5bmMgKCkgPT4gYXdhaXQgZHJpdmVyLmV4ZWN1dGUoYCduYW4nLS1gKSkudG8udGhyb3c7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgZXZhbCBqYXZhc2NyaXB0JywgYXN5bmMgKCkgPT4ge1xuICAgIChhd2FpdCBkcml2ZXIuZXhlY3V0ZSgncmV0dXJuIDEnKSkuc2hvdWxkLmJlLmVxdWFsKDEpO1xuICB9KTtcblxuICBpdCgnc2hvdWxkIG5vdCBiZSByZXR1cm5pbmcgaGFyZGNvZGVkIHJlc3VsdHMnLCBhc3luYyAoKSA9PiB7XG4gICAgKGF3YWl0IGRyaXZlci5leGVjdXRlKCdyZXR1cm4gMSsxJykpLnNob3VsZC5iZS5lcXVhbCgyKTtcbiAgfSk7XG5cbiAgaXQoYHNob3VsZCByZXR1cm4gbm90aGluZyB3aGVuIHlvdSBkb24ndCBleHBsaWNpdGx5IHJldHVybmAsIGFzeW5jICgpID0+IHtcbiAgICBleHBlY3QoYXdhaXQgZHJpdmVyLmV4ZWN1dGUoJzErMScpKS50by5ub3QuZXhpc3Q7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgZXhlY3V0ZSBjb2RlIGluc2lkZSB0aGUgd2ViIHZpZXcnLCBhc3luYyAoKSA9PiB7XG4gICAgKGF3YWl0IGRyaXZlci5leGVjdXRlKEdFVF9SSUdIVF9JTk5FUkhUTUwpKS5zaG91bGQuYmUub2s7XG4gICAgKGF3YWl0IGRyaXZlci5leGVjdXRlKEdFVF9XUk9OR19JTk5FUkhUTUwpKS5zaG91bGQubm90LmJlLm9rO1xuICB9KTtcblxuICBpdCgnc2hvdWxkIGNvbnZlcnQgc2VsZW5pdW0gZWxlbWVudCBhcmcgdG8gd2VidmlldyBlbGVtZW50JywgYXN5bmMgKCkgPT4ge1xuICAgIGxldCBlbCA9IGF3YWl0IGRyaXZlci5maW5kRWxlbWVudCgnaWQnLCAndXNlcmFnZW50Jyk7XG4gICAgYXdhaXQgZHJpdmVyLmV4ZWN1dGUoU0NST0xMX0lOVE9fVklFVywgW2VsXSk7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgY2F0Y2ggc3RhbGUgb3IgdW5kZWZpbmVkIGVsZW1lbnQgYXMgYXJnJywgYXN5bmMgKCkgPT4ge1xuICAgIGxldCBlbCA9IGF3YWl0IGRyaXZlci5maW5kRWxlbWVudCgnaWQnLCAndXNlcmFnZW50Jyk7XG4gICAgcmV0dXJuIGRyaXZlci5leGVjdXRlKFNDUk9MTF9JTlRPX1ZJRVcsIFt7J0VMRU1FTlQnOiAoZWwudmFsdWUgKyAxKX1dKS5zaG91bGQuYmVSZWplY3RlZDtcbiAgfSk7XG5cbiAgaXQoJ3Nob3VsZCBiZSBhYmxlIHRvIHJldHVybiBtdWx0aXBsZSBlbGVtZW50cyBmcm9tIGphdmFzY3JpcHQnLCBhc3luYyAoKSA9PiB7XG4gICAgbGV0IHJlcyA9IGF3YWl0IGRyaXZlci5leGVjdXRlKEdFVF9FTEVNX0JZX1RBR05BTUUpO1xuICAgIGV4cGVjdChyZXMpLnRvLmhhdmUubGVuZ3RoLmFib3ZlKDApO1xuICB9KTtcbiAgaXQoJ3Nob3VsZCBwYXNzIGFsb25nIG5vbi1lbGVtZW50IGFyZ3VtZW50cycsIGFzeW5jICgpID0+IHtcbiAgICBsZXQgYXJnID0gJ25vbi1lbGVtZW50LWFyZ3VtZW50JztcbiAgICAoYXdhaXQgZHJpdmVyLmV4ZWN1dGUoJ3ZhciBhcmdzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAwKTsgcmV0dXJuIGFyZ3NbMF07JywgW2FyZ10pKS5zaG91bGQuYmUuZXF1YWwoYXJnKTtcbiAgfSk7XG59KTtcbiJdfQ==