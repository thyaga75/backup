'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _desired = require('./desired');

var _desired2 = _interopRequireDefault(_desired);

var _setupBase = require('../../setup-base');

var _setupBase2 = _interopRequireDefault(_setupBase);

var _helpersWebview = require('../../helpers/webview');

var _helpersEnv = require('../../helpers/env');

var _helpersEnv2 = _interopRequireDefault(_helpersEnv);

describe('safari - webview - iframes', function () {
  var _this = this;

  var driver = (0, _setupBase2['default'])(this, _desired2['default'], { 'no-reset': true }).driver;

  beforeEach(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap((0, _helpersWebview.loadWebView)(_desired2['default'], driver, _helpersEnv2['default'].TEST_END_POINT + 'iframes.html', 'Iframe guinea pig'));

        case 2:
          return context$2$0.abrupt('return', context$2$0.sent);

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should switch to iframe by name', function callee$1$0() {
    var h1;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.setFrame('iframe1'));

        case 2:
          context$2$0.next = 4;
          return _regeneratorRuntime.awrap(driver.title());

        case 4:
          context$2$0.sent.should.be.equal('Iframe guinea pig');
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap(driver.findElement('tag name', 'h1'));

        case 7:
          h1 = context$2$0.sent;
          context$2$0.next = 10;
          return _regeneratorRuntime.awrap(driver.getText(h1));

        case 10:
          context$2$0.sent.should.be.equal('Sub frame 1');

        case 11:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should switch to iframe by index', function callee$1$0() {
    var h1;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.setFrame(1));

        case 2:
          context$2$0.next = 4;
          return _regeneratorRuntime.awrap(driver.title());

        case 4:
          context$2$0.sent.should.be.equal('Iframe guinea pig');
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap(driver.findElement('tag name', 'h1'));

        case 7:
          h1 = context$2$0.sent;
          context$2$0.next = 10;
          return _regeneratorRuntime.awrap(driver.getText(h1));

        case 10:
          context$2$0.sent.should.be.equal('Sub frame 2');

        case 11:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should switch to iframe by id', function callee$1$0() {
    var h1;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.setFrame('id-iframe3'));

        case 2:
          context$2$0.next = 4;
          return _regeneratorRuntime.awrap(driver.title());

        case 4:
          context$2$0.sent.should.be.equal('Iframe guinea pig');
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap(driver.findElement('tag name', 'h1'));

        case 7:
          h1 = context$2$0.sent;
          context$2$0.next = 10;
          return _regeneratorRuntime.awrap(driver.getText(h1));

        case 10:
          context$2$0.sent.should.be.equal('Sub frame 3');

        case 11:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should switch to iframe by element', function callee$1$0() {
    var frame, h1;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('id', 'id-iframe3'));

        case 2:
          frame = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.setFrame(frame));

        case 5:
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap(driver.title());

        case 7:
          context$2$0.sent.should.be.equal('Iframe guinea pig');
          context$2$0.next = 10;
          return _regeneratorRuntime.awrap(driver.findElement('tag name', 'h1'));

        case 10:
          h1 = context$2$0.sent;
          context$2$0.next = 13;
          return _regeneratorRuntime.awrap(driver.getText(h1));

        case 13:
          context$2$0.sent.should.be.equal('Sub frame 3');

        case 14:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should not switch to iframe by element of wrong type', function callee$1$0() {
    var h1;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      var _this2 = this;

      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElement('tag name', 'h1'));

        case 2:
          h1 = context$2$0.sent;

          (function callee$2$0() {
            return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
              while (1) switch (context$3$0.prev = context$3$0.next) {
                case 0:
                  context$3$0.next = 2;
                  return _regeneratorRuntime.awrap(driver.setFrame(h1));

                case 2:
                  return context$3$0.abrupt('return', context$3$0.sent);

                case 3:
                case 'end':
                  return context$3$0.stop();
              }
            }, null, _this2);
          }).should['throw'];

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should switch back to default content from iframe', function callee$1$0() {
    var h1;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.setFrame('iframe1'));

        case 2:
          context$2$0.next = 4;
          return _regeneratorRuntime.awrap(driver.title());

        case 4:
          context$2$0.sent.should.be.equal('Iframe guinea pig');
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap(driver.findElement('tag name', 'h1'));

        case 7:
          h1 = context$2$0.sent;
          context$2$0.next = 10;
          return _regeneratorRuntime.awrap(driver.getText(h1));

        case 10:
          context$2$0.sent.should.be.equal('Sub frame 1');
          context$2$0.next = 13;
          return _regeneratorRuntime.awrap(driver.setFrame(null));

        case 13:
          context$2$0.next = 15;
          return _regeneratorRuntime.awrap(driver.findElements('tag name', 'iframe'));

        case 15:
          context$2$0.sent.should.have.length(3);

        case 16:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZTJlL3NhZmFyaS93ZWJ2aWV3L2lmcmFtZXMtc3BlY3MuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O3VCQUFvQixXQUFXOzs7O3lCQUNiLGtCQUFrQjs7Ozs4QkFDUix1QkFBdUI7OzBCQUNuQyxtQkFBbUI7Ozs7QUFHbkMsUUFBUSxDQUFDLDRCQUE0QixFQUFFLFlBQVc7OztBQUNoRCxNQUFNLE1BQU0sR0FBRyw0QkFBTSxJQUFJLHdCQUFXLEVBQUMsVUFBVSxFQUFFLElBQUksRUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDOztBQUUvRCxZQUFVLENBQUM7Ozs7OzJDQUFrQix1REFFM0IsTUFBTSxFQUNILHdCQUFJLGNBQWMsbUJBQ3JCLG1CQUFtQixDQUNwQjs7Ozs7Ozs7OztHQUFBLENBQUMsQ0FBQzs7QUFFSCxJQUFFLENBQUMsaUNBQWlDLEVBQUU7UUFJaEMsRUFBRTs7Ozs7MkNBSEEsTUFBTSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUM7Ozs7MkNBQ3pCLE1BQU0sQ0FBQyxLQUFLLEVBQUU7OzsyQkFBRSxNQUFNLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxtQkFBbUI7OzJDQUUzQyxNQUFNLENBQUMsV0FBVyxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUM7OztBQUEvQyxZQUFFOzsyQ0FDQyxNQUFNLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQzs7OzJCQUFFLE1BQU0sQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLGFBQWE7Ozs7Ozs7R0FDekQsQ0FBQyxDQUFDOztBQUVILElBQUUsQ0FBQyxrQ0FBa0MsRUFBRTtRQUlqQyxFQUFFOzs7OzsyQ0FIQSxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQzs7OzsyQ0FDakIsTUFBTSxDQUFDLEtBQUssRUFBRTs7OzJCQUFFLE1BQU0sQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLG1CQUFtQjs7MkNBRTNDLE1BQU0sQ0FBQyxXQUFXLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQzs7O0FBQS9DLFlBQUU7OzJDQUNDLE1BQU0sQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDOzs7MkJBQUUsTUFBTSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsYUFBYTs7Ozs7OztHQUN6RCxDQUFDLENBQUM7O0FBRUgsSUFBRSxDQUFDLCtCQUErQixFQUFFO1FBSTlCLEVBQUU7Ozs7OzJDQUhBLE1BQU0sQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDOzs7OzJDQUM1QixNQUFNLENBQUMsS0FBSyxFQUFFOzs7MkJBQUUsTUFBTSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsbUJBQW1COzsyQ0FFM0MsTUFBTSxDQUFDLFdBQVcsQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDOzs7QUFBL0MsWUFBRTs7MkNBQ0MsTUFBTSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7OzsyQkFBRSxNQUFNLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxhQUFhOzs7Ozs7O0dBQ3pELENBQUMsQ0FBQzs7QUFFSCxJQUFFLENBQUMsb0NBQW9DLEVBQUU7UUFDbkMsS0FBSyxFQUlMLEVBQUU7Ozs7OzJDQUpZLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLFlBQVksQ0FBQzs7O0FBQXBELGVBQUs7OzJDQUNILE1BQU0sQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDOzs7OzJDQUNyQixNQUFNLENBQUMsS0FBSyxFQUFFOzs7MkJBQUUsTUFBTSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsbUJBQW1COzsyQ0FFM0MsTUFBTSxDQUFDLFdBQVcsQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDOzs7QUFBL0MsWUFBRTs7MkNBQ0MsTUFBTSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7OzsyQkFBRSxNQUFNLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxhQUFhOzs7Ozs7O0dBQ3pELENBQUMsQ0FBQzs7QUFFSCxJQUFFLENBQUMsc0RBQXNELEVBQUU7UUFDckQsRUFBRTs7Ozs7OzsyQ0FBUyxNQUFNLENBQUMsV0FBVyxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUM7OztBQUEvQyxZQUFFOztBQUNOLFdBQUM7Ozs7O21EQUFrQixNQUFNLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQzs7Ozs7Ozs7OztZQUFBLENBQUUsTUFBTSxTQUFNLENBQUM7Ozs7Ozs7R0FDdEQsQ0FBQyxDQUFDOztBQUVILElBQUUsQ0FBQyxtREFBbUQsRUFBRTtRQUlsRCxFQUFFOzs7OzsyQ0FIQSxNQUFNLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQzs7OzsyQ0FDekIsTUFBTSxDQUFDLEtBQUssRUFBRTs7OzJCQUFFLE1BQU0sQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLG1CQUFtQjs7MkNBRTNDLE1BQU0sQ0FBQyxXQUFXLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQzs7O0FBQS9DLFlBQUU7OzJDQUNDLE1BQU0sQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDOzs7MkJBQUUsTUFBTSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsYUFBYTs7MkNBRWxELE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDOzs7OzJDQUNwQixNQUFNLENBQUMsWUFBWSxDQUFDLFVBQVUsRUFBRSxRQUFRLENBQUM7OzsyQkFBRSxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDOzs7Ozs7O0dBQ3ZFLENBQUMsQ0FBQztDQUNKLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXN0L2UyZS9zYWZhcmkvd2Vidmlldy9pZnJhbWVzLXNwZWNzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRlc2lyZWQgZnJvbSAnLi9kZXNpcmVkJztcbmltcG9ydCBzZXR1cCBmcm9tICcuLi8uLi9zZXR1cC1iYXNlJztcbmltcG9ydCB7IGxvYWRXZWJWaWV3IH0gZnJvbSAnLi4vLi4vaGVscGVycy93ZWJ2aWV3JztcbmltcG9ydCBlbnYgZnJvbSAnLi4vLi4vaGVscGVycy9lbnYnO1xuXG5cbmRlc2NyaWJlKCdzYWZhcmkgLSB3ZWJ2aWV3IC0gaWZyYW1lcycsIGZ1bmN0aW9uKCkge1xuICBjb25zdCBkcml2ZXIgPSBzZXR1cCh0aGlzLCBkZXNpcmVkLCB7J25vLXJlc2V0JzogdHJ1ZX0pLmRyaXZlcjtcblxuICBiZWZvcmVFYWNoKGFzeW5jICgpID0+IGF3YWl0IGxvYWRXZWJWaWV3KFxuICAgIGRlc2lyZWQsXG4gICAgZHJpdmVyLFxuICAgIGAke2Vudi5URVNUX0VORF9QT0lOVH1pZnJhbWVzLmh0bWxgLFxuICAgICdJZnJhbWUgZ3VpbmVhIHBpZydcbiAgKSk7XG5cbiAgaXQoJ3Nob3VsZCBzd2l0Y2ggdG8gaWZyYW1lIGJ5IG5hbWUnLCBhc3luYyAoKSA9PiB7XG4gICAgYXdhaXQgZHJpdmVyLnNldEZyYW1lKCdpZnJhbWUxJyk7XG4gICAgKGF3YWl0IGRyaXZlci50aXRsZSgpKS5zaG91bGQuYmUuZXF1YWwoJ0lmcmFtZSBndWluZWEgcGlnJyk7XG5cbiAgICBsZXQgaDEgPSBhd2FpdCBkcml2ZXIuZmluZEVsZW1lbnQoJ3RhZyBuYW1lJywgJ2gxJyk7XG4gICAgKGF3YWl0IGRyaXZlci5nZXRUZXh0KGgxKSkuc2hvdWxkLmJlLmVxdWFsKCdTdWIgZnJhbWUgMScpO1xuICB9KTtcblxuICBpdCgnc2hvdWxkIHN3aXRjaCB0byBpZnJhbWUgYnkgaW5kZXgnLCBhc3luYyAoKSA9PiB7XG4gICAgYXdhaXQgZHJpdmVyLnNldEZyYW1lKDEpO1xuICAgIChhd2FpdCBkcml2ZXIudGl0bGUoKSkuc2hvdWxkLmJlLmVxdWFsKCdJZnJhbWUgZ3VpbmVhIHBpZycpO1xuXG4gICAgbGV0IGgxID0gYXdhaXQgZHJpdmVyLmZpbmRFbGVtZW50KCd0YWcgbmFtZScsICdoMScpO1xuICAgIChhd2FpdCBkcml2ZXIuZ2V0VGV4dChoMSkpLnNob3VsZC5iZS5lcXVhbCgnU3ViIGZyYW1lIDInKTtcbiAgfSk7XG5cbiAgaXQoJ3Nob3VsZCBzd2l0Y2ggdG8gaWZyYW1lIGJ5IGlkJywgYXN5bmMgKCkgPT4ge1xuICAgIGF3YWl0IGRyaXZlci5zZXRGcmFtZSgnaWQtaWZyYW1lMycpO1xuICAgIChhd2FpdCBkcml2ZXIudGl0bGUoKSkuc2hvdWxkLmJlLmVxdWFsKCdJZnJhbWUgZ3VpbmVhIHBpZycpO1xuXG4gICAgbGV0IGgxID0gYXdhaXQgZHJpdmVyLmZpbmRFbGVtZW50KCd0YWcgbmFtZScsICdoMScpO1xuICAgIChhd2FpdCBkcml2ZXIuZ2V0VGV4dChoMSkpLnNob3VsZC5iZS5lcXVhbCgnU3ViIGZyYW1lIDMnKTtcbiAgfSk7XG5cbiAgaXQoJ3Nob3VsZCBzd2l0Y2ggdG8gaWZyYW1lIGJ5IGVsZW1lbnQnLCBhc3luYyAoKSA9PiB7XG4gICAgbGV0IGZyYW1lID0gYXdhaXQgZHJpdmVyLmZpbmRFbGVtZW50KCdpZCcsICdpZC1pZnJhbWUzJyk7XG4gICAgYXdhaXQgZHJpdmVyLnNldEZyYW1lKGZyYW1lKTtcbiAgICAoYXdhaXQgZHJpdmVyLnRpdGxlKCkpLnNob3VsZC5iZS5lcXVhbCgnSWZyYW1lIGd1aW5lYSBwaWcnKTtcblxuICAgIGxldCBoMSA9IGF3YWl0IGRyaXZlci5maW5kRWxlbWVudCgndGFnIG5hbWUnLCAnaDEnKTtcbiAgICAoYXdhaXQgZHJpdmVyLmdldFRleHQoaDEpKS5zaG91bGQuYmUuZXF1YWwoJ1N1YiBmcmFtZSAzJyk7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgbm90IHN3aXRjaCB0byBpZnJhbWUgYnkgZWxlbWVudCBvZiB3cm9uZyB0eXBlJywgYXN5bmMgKCkgPT4ge1xuICAgIGxldCBoMSA9IGF3YWl0IGRyaXZlci5maW5kRWxlbWVudCgndGFnIG5hbWUnLCAnaDEnKTtcbiAgICAoYXN5bmMgKCkgPT4gYXdhaXQgZHJpdmVyLnNldEZyYW1lKGgxKSkuc2hvdWxkLnRocm93O1xuICB9KTtcblxuICBpdCgnc2hvdWxkIHN3aXRjaCBiYWNrIHRvIGRlZmF1bHQgY29udGVudCBmcm9tIGlmcmFtZScsIGFzeW5jICgpID0+IHtcbiAgICBhd2FpdCBkcml2ZXIuc2V0RnJhbWUoJ2lmcmFtZTEnKTtcbiAgICAoYXdhaXQgZHJpdmVyLnRpdGxlKCkpLnNob3VsZC5iZS5lcXVhbCgnSWZyYW1lIGd1aW5lYSBwaWcnKTtcblxuICAgIGxldCBoMSA9IGF3YWl0IGRyaXZlci5maW5kRWxlbWVudCgndGFnIG5hbWUnLCAnaDEnKTtcbiAgICAoYXdhaXQgZHJpdmVyLmdldFRleHQoaDEpKS5zaG91bGQuYmUuZXF1YWwoJ1N1YiBmcmFtZSAxJyk7XG5cbiAgICBhd2FpdCBkcml2ZXIuc2V0RnJhbWUobnVsbCk7XG4gICAgKGF3YWl0IGRyaXZlci5maW5kRWxlbWVudHMoJ3RhZyBuYW1lJywgJ2lmcmFtZScpKS5zaG91bGQuaGF2ZS5sZW5ndGgoMyk7XG4gIH0pO1xufSk7XG4iXX0=