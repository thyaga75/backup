require('source-map-support').install();

'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _helpersEnv = require('../helpers/env');

var _helpersEnv2 = _interopRequireDefault(_helpersEnv);

var _libDriver = require('../../../lib/driver');

var _libUtils = require('../../../lib/utils');

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

describe('capabilities', function () {
  var _this = this;

  this.timeout(120000);
  var driver = undefined;

  after(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.deleteSession());

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should contain server details', function callee$1$0() {
    var caps, serverCaps;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          caps = {
            app: _path2['default'].resolve(_libUtils.rootDir, 'test', 'assets', 'TestApp.zip'),
            platformName: 'iOS'
          };

          caps = _lodash2['default'].merge({}, _helpersEnv2['default'].CAPS, caps);
          driver = new _libDriver.IosDriver();
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.createSession(caps));

        case 5:
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap(driver.getSession());

        case 7:
          serverCaps = context$2$0.sent;

          serverCaps.takesScreenshot.should.exist;

        case 9:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZTJlL2RyaXZlci9jYXBhYmlsaXRpZXMtZTJlLXNwZWNzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O3NCQUVjLFFBQVE7Ozs7MEJBQ04sZ0JBQWdCOzs7O3lCQUNOLHFCQUFxQjs7d0JBQ3ZCLG9CQUFvQjs7b0JBQzNCLE1BQU07Ozs7OEJBQ0ksa0JBQWtCOzs7O29CQUM1QixNQUFNOzs7O0FBRXZCLGtCQUFLLE1BQU0sRUFBRSxDQUFDO0FBQ2Qsa0JBQUssR0FBRyw2QkFBZ0IsQ0FBQzs7QUFFekIsUUFBUSxDQUFDLGNBQWMsRUFBRSxZQUFZOzs7QUFDbkMsTUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUNyQixNQUFJLE1BQU0sWUFBQSxDQUFDOztBQUVYLE9BQUssQ0FBQzs7Ozs7MkNBQ0UsTUFBTSxDQUFDLGFBQWEsRUFBRTs7Ozs7OztHQUM3QixDQUFDLENBQUM7O0FBRUgsSUFBRSxDQUFDLCtCQUErQixFQUFFO1FBQzlCLElBQUksRUFPSixVQUFVOzs7O0FBUFYsY0FBSSxHQUFHO0FBQ1QsZUFBRyxFQUFFLGtCQUFLLE9BQU8sb0JBQVUsTUFBTSxFQUFFLFFBQVEsRUFBRSxhQUFhLENBQUM7QUFDM0Qsd0JBQVksRUFBRSxLQUFLO1dBQ3BCOztBQUNELGNBQUksR0FBRyxvQkFBRSxLQUFLLENBQUMsRUFBRSxFQUFFLHdCQUFJLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNuQyxnQkFBTSxHQUFHLDBCQUFlLENBQUM7OzJDQUNuQixNQUFNLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQzs7OzsyQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUFFOzs7QUFBdEMsb0JBQVU7O0FBQ2Qsb0JBQVUsQ0FBQyxlQUFlLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQzs7Ozs7OztHQUN6QyxDQUFDLENBQUM7Q0FDSixDQUFDLENBQUMiLCJmaWxlIjoidGVzdC9lMmUvZHJpdmVyL2NhcGFiaWxpdGllcy1lMmUtc3BlY3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyB0cmFuc3BpbGU6bW9jaGFcblxuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCBlbnYgZnJvbSAnLi4vaGVscGVycy9lbnYnO1xuaW1wb3J0IHsgSW9zRHJpdmVyIH0gZnJvbSAnLi4vLi4vLi4vbGliL2RyaXZlcic7XG5pbXBvcnQgeyByb290RGlyIH0gZnJvbSAnLi4vLi4vLi4vbGliL3V0aWxzJztcbmltcG9ydCBjaGFpIGZyb20gJ2NoYWknO1xuaW1wb3J0IGNoYWlBc1Byb21pc2VkIGZyb20gJ2NoYWktYXMtcHJvbWlzZWQnO1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5cbmNoYWkuc2hvdWxkKCk7XG5jaGFpLnVzZShjaGFpQXNQcm9taXNlZCk7XG5cbmRlc2NyaWJlKCdjYXBhYmlsaXRpZXMnLCBmdW5jdGlvbiAoKSB7XG4gIHRoaXMudGltZW91dCgxMjAwMDApO1xuICBsZXQgZHJpdmVyO1xuXG4gIGFmdGVyKGFzeW5jICgpID0+IHtcbiAgICBhd2FpdCBkcml2ZXIuZGVsZXRlU2Vzc2lvbigpO1xuICB9KTtcblxuICBpdCgnc2hvdWxkIGNvbnRhaW4gc2VydmVyIGRldGFpbHMnLCBhc3luYyAoKSA9PiB7XG4gICAgbGV0IGNhcHMgPSB7XG4gICAgICBhcHA6IHBhdGgucmVzb2x2ZShyb290RGlyLCAndGVzdCcsICdhc3NldHMnLCAnVGVzdEFwcC56aXAnKSxcbiAgICAgIHBsYXRmb3JtTmFtZTogJ2lPUydcbiAgICB9O1xuICAgIGNhcHMgPSBfLm1lcmdlKHt9LCBlbnYuQ0FQUywgY2Fwcyk7XG4gICAgZHJpdmVyID0gbmV3IElvc0RyaXZlcigpO1xuICAgIGF3YWl0IGRyaXZlci5jcmVhdGVTZXNzaW9uKGNhcHMpO1xuICAgIGxldCBzZXJ2ZXJDYXBzID0gYXdhaXQgZHJpdmVyLmdldFNlc3Npb24oKTtcbiAgICBzZXJ2ZXJDYXBzLnRha2VzU2NyZWVuc2hvdC5zaG91bGQuZXhpc3Q7XG4gIH0pO1xufSk7XG4iXX0=