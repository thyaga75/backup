'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _getIterator = require('babel-runtime/core-js/get-iterator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _appiumXcode = require('appium-xcode');

var _appiumXcode2 = _interopRequireDefault(_appiumXcode);

var _appiumSupport = require('appium-support');

var _teen_process = require('teen_process');

var _logger = require('./logger');

var _logger2 = _interopRequireDefault(_logger);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var SAFARI_LAUNCHER_DIR = _path2['default'].resolve(__dirname, '..', '..', 'build', 'SafariLauncher');
var SAFARI_LAUNCHER_APP_FILE = _path2['default'].resolve(__dirname, '..', '..', 'build', 'SafariLauncher', 'SafariLauncher.app');
var SAFARI_LAUNCHER_REPO = _path2['default'].resolve(__dirname, '..', '..', 'node_modules', 'safari-launcher');
var SAFARI_LAUNCHER_CONFIG_FILE = _path2['default'].resolve(SAFARI_LAUNCHER_REPO, 'build.xconfig');
var SAFARI_LAUNCHER_BUNDLE = 'com.bytearc.SafariLauncher';

var sdks = ['iphoneos'];

function cleanApp(appRoot, sdk) {
  return _regeneratorRuntime.async(function cleanApp$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        _logger2['default'].debug('Cleaning SafariLauncher for ' + sdk);
        context$1$0.prev = 1;
        context$1$0.next = 4;
        return _regeneratorRuntime.awrap((0, _teen_process.exec)('xcodebuild', ['-sdk', sdk, 'clean'], { cwd: appRoot }));

      case 4:
        context$1$0.next = 10;
        break;

      case 6:
        context$1$0.prev = 6;
        context$1$0.t0 = context$1$0['catch'](1);

        _logger2['default'].error(context$1$0.t0);
        throw context$1$0.t0;

      case 10:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[1, 6]]);
}

function cleanAll() {
  var sdkVer, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, sdk, fullSdk;

  return _regeneratorRuntime.async(function cleanAll$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        _logger2['default'].info("Cleaning SafariLauncher");
        context$1$0.next = 3;
        return _regeneratorRuntime.awrap(_appiumXcode2['default'].getMaxIOSSDK());

      case 3:
        sdkVer = context$1$0.sent;
        _iteratorNormalCompletion = true;
        _didIteratorError = false;
        _iteratorError = undefined;
        context$1$0.prev = 7;
        _iterator = _getIterator(sdks);

      case 9:
        if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
          context$1$0.next = 17;
          break;
        }

        sdk = _step.value;
        fullSdk = sdk + sdkVer;
        context$1$0.next = 14;
        return _regeneratorRuntime.awrap(cleanApp(SAFARI_LAUNCHER_REPO, fullSdk));

      case 14:
        _iteratorNormalCompletion = true;
        context$1$0.next = 9;
        break;

      case 17:
        context$1$0.next = 23;
        break;

      case 19:
        context$1$0.prev = 19;
        context$1$0.t0 = context$1$0['catch'](7);
        _didIteratorError = true;
        _iteratorError = context$1$0.t0;

      case 23:
        context$1$0.prev = 23;
        context$1$0.prev = 24;

        if (!_iteratorNormalCompletion && _iterator['return']) {
          _iterator['return']();
        }

      case 26:
        context$1$0.prev = 26;

        if (!_didIteratorError) {
          context$1$0.next = 29;
          break;
        }

        throw _iteratorError;

      case 29:
        return context$1$0.finish(26);

      case 30:
        return context$1$0.finish(23);

      case 31:
        context$1$0.next = 33;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.rimraf(SAFARI_LAUNCHER_DIR));

      case 33:
        _logger2['default'].info("Finished cleaning SafariLauncher");

      case 34:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[7, 19, 23, 31], [24,, 26, 30]]);
}

function buildApp(appRoot, sdk) {
  var args;
  return _regeneratorRuntime.async(function buildApp$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.prev = 0;

        _logger2['default'].debug('Building SafariLauncher for ' + sdk);
        args = ['-sdk', sdk, '-xcconfig', SAFARI_LAUNCHER_CONFIG_FILE];
        context$1$0.next = 5;
        return _regeneratorRuntime.awrap((0, _teen_process.exec)('xcodebuild', args, {
          cwd: appRoot
        }));

      case 5:
        context$1$0.next = 11;
        break;

      case 7:
        context$1$0.prev = 7;
        context$1$0.t0 = context$1$0['catch'](0);

        _logger2['default'].error(context$1$0.t0);
        throw context$1$0.t0;

      case 11:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[0, 7]]);
}

function buildAll() {
  var sdkVer, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, sdk, fullSdk;

  return _regeneratorRuntime.async(function buildAll$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        _logger2['default'].info("Building SafariLauncher");
        context$1$0.next = 3;
        return _regeneratorRuntime.awrap(_appiumXcode2['default'].getMaxIOSSDK());

      case 3:
        sdkVer = context$1$0.sent;
        _iteratorNormalCompletion2 = true;
        _didIteratorError2 = false;
        _iteratorError2 = undefined;
        context$1$0.prev = 7;
        _iterator2 = _getIterator(sdks);

      case 9:
        if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {
          context$1$0.next = 17;
          break;
        }

        sdk = _step2.value;
        fullSdk = sdk + sdkVer;
        context$1$0.next = 14;
        return _regeneratorRuntime.awrap(buildApp(SAFARI_LAUNCHER_REPO, fullSdk));

      case 14:
        _iteratorNormalCompletion2 = true;
        context$1$0.next = 9;
        break;

      case 17:
        context$1$0.next = 23;
        break;

      case 19:
        context$1$0.prev = 19;
        context$1$0.t0 = context$1$0['catch'](7);
        _didIteratorError2 = true;
        _iteratorError2 = context$1$0.t0;

      case 23:
        context$1$0.prev = 23;
        context$1$0.prev = 24;

        if (!_iteratorNormalCompletion2 && _iterator2['return']) {
          _iterator2['return']();
        }

      case 26:
        context$1$0.prev = 26;

        if (!_didIteratorError2) {
          context$1$0.next = 29;
          break;
        }

        throw _iteratorError2;

      case 29:
        return context$1$0.finish(26);

      case 30:
        return context$1$0.finish(23);

      case 31:
        _logger2['default'].info("Finished building SafariLauncher");

      case 32:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[7, 19, 23, 31], [24,, 26, 30]]);
}

function renameAll() {
  var file;
  return _regeneratorRuntime.async(function renameAll$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.prev = 0;

        _logger2['default'].info("Renaming SafariLauncher");
        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.exists(SAFARI_LAUNCHER_DIR));

      case 4:
        if (context$1$0.sent) {
          context$1$0.next = 7;
          break;
        }

        context$1$0.next = 7;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.mkdir(SAFARI_LAUNCHER_DIR));

      case 7:
        file = _path2['default'].resolve(SAFARI_LAUNCHER_REPO, 'build', 'Release-iphoneos', 'SafariLauncher.app');
        context$1$0.next = 10;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.rename(file, SAFARI_LAUNCHER_APP_FILE));

      case 10:
        _logger2['default'].info("Finished renaming SafariLauncher");
        context$1$0.next = 17;
        break;

      case 13:
        context$1$0.prev = 13;
        context$1$0.t0 = context$1$0['catch'](0);

        _logger2['default'].warn("Could not rename SafariLauncher");
        _logger2['default'].errorAndThrow(context$1$0.t0);

      case 17:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[0, 13]]);
}

function updateConfig() {
  var config;
  return _regeneratorRuntime.async(function updateConfig$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        _logger2['default'].info('Updating config for Safari Launcher');
        config = 'BUNDLE_ID = ' + SAFARI_LAUNCHER_BUNDLE + '\nIDENTITY_NAME = iPhone Developer\nIDENTITY_CODE =';
        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.writeFile(SAFARI_LAUNCHER_CONFIG_FILE, config));

      case 4:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

function install() {
  return _regeneratorRuntime.async(function install$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(cleanAll());

      case 2:
        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(updateConfig());

      case 4:
        context$1$0.next = 6;
        return _regeneratorRuntime.awrap(buildAll());

      case 6:
        context$1$0.next = 8;
        return _regeneratorRuntime.awrap(renameAll());

      case 8:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

function needsInstall() {
  var exists;
  return _regeneratorRuntime.async(function needsInstall$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        _logger2['default'].debug('Checking for presence of SafariLauncher at \'' + SAFARI_LAUNCHER_APP_FILE + '\'');
        context$1$0.next = 3;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.exists(SAFARI_LAUNCHER_APP_FILE));

      case 3:
        exists = context$1$0.sent;

        _logger2['default'].debug('SafariLauncher ' + (exists ? 'exists' : 'does not exist'));
        return context$1$0.abrupt('return', !exists);

      case 6:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

exports.install = install;
exports.needsInstall = needsInstall;
exports.SAFARI_LAUNCHER_APP_FILE = SAFARI_LAUNCHER_APP_FILE;
exports.SAFARI_LAUNCHER_BUNDLE = SAFARI_LAUNCHER_BUNDLE;
//# sourceMappingURL=data:application/json;base64,