'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _logger = require('../logger');

var _logger2 = _interopRequireDefault(_logger);

var commands = {},
    helpers = {},
    extensions = {};

commands.getOrientation = function callee$0$0() {
  var res, orientation;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(this.uiAutoClient.sendCommand('au.getScreenOrientation()'));

      case 2:
        res = context$1$0.sent;

        if (res && res.status === 0) {
          orientation = res.value.toUpperCase();

          _logger2['default'].debug('Setting internal orientation to \'' + orientation + '\'');
          this.opts.curOrientation = orientation;
        }
        return context$1$0.abrupt('return', res);

      case 5:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.setOrientation = function callee$0$0(orientation) {
  var cmd, res;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        orientation = orientation.toUpperCase();
        cmd = 'au.setScreenOrientation(\'' + orientation + '\')';
        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(this.uiAutoClient.sendCommand(cmd));

      case 4:
        res = context$1$0.sent;

        if (res && res.status === 0) {
          this.opts.curOrientation = orientation;
        }
        return context$1$0.abrupt('return', res);

      case 7:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

_Object$assign(extensions, commands, helpers);
exports.commands = commands;
exports.helpers = helpers;
exports['default'] = extensions;

// keep track of orientation for our own purposes
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb21tYW5kcy9vcmllbnRhdGlvbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7c0JBQW1CLFdBQVc7Ozs7QUFHOUIsSUFBSSxRQUFRLEdBQUcsRUFBRTtJQUFFLE9BQU8sR0FBRyxFQUFFO0lBQUUsVUFBVSxHQUFHLEVBQUUsQ0FBQzs7QUFFakQsUUFBUSxDQUFDLGNBQWMsR0FBRztNQUNwQixHQUFHLEVBR0QsV0FBVzs7Ozs7eUNBSEQsSUFBSSxDQUFDLFlBQVksQ0FBQyxXQUFXLENBQUMsMkJBQTJCLENBQUM7OztBQUF0RSxXQUFHOztBQUNQLFlBQUksR0FBRyxJQUFJLEdBQUcsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO0FBRXZCLHFCQUFXLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxXQUFXLEVBQUU7O0FBQ3pDLDhCQUFPLEtBQUssd0NBQXFDLFdBQVcsUUFBSSxDQUFDO0FBQ2pFLGNBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxHQUFHLFdBQVcsQ0FBQztTQUN4Qzs0Q0FDTSxHQUFHOzs7Ozs7O0NBQ1gsQ0FBQzs7QUFFRixRQUFRLENBQUMsY0FBYyxHQUFHLG9CQUFnQixXQUFXO01BRS9DLEdBQUcsRUFDSCxHQUFHOzs7O0FBRlAsbUJBQVcsR0FBRyxXQUFXLENBQUMsV0FBVyxFQUFFLENBQUM7QUFDcEMsV0FBRyxrQ0FBK0IsV0FBVzs7eUNBQ2pDLElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQzs7O0FBQTlDLFdBQUc7O0FBQ1AsWUFBSSxHQUFHLElBQUksR0FBRyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7QUFDM0IsY0FBSSxDQUFDLElBQUksQ0FBQyxjQUFjLEdBQUcsV0FBVyxDQUFDO1NBQ3hDOzRDQUNNLEdBQUc7Ozs7Ozs7Q0FDWCxDQUFDOztBQUdGLGVBQWMsVUFBVSxFQUFFLFFBQVEsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUNwQyxRQUFRLEdBQVIsUUFBUTtRQUFFLE9BQU8sR0FBUCxPQUFPO3FCQUNYLFVBQVUiLCJmaWxlIjoibGliL2NvbW1hbmRzL29yaWVudGF0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGxvZ2dlciBmcm9tICcuLi9sb2dnZXInO1xuXG5cbmxldCBjb21tYW5kcyA9IHt9LCBoZWxwZXJzID0ge30sIGV4dGVuc2lvbnMgPSB7fTtcblxuY29tbWFuZHMuZ2V0T3JpZW50YXRpb24gPSBhc3luYyBmdW5jdGlvbiAoKSB7XG4gIGxldCByZXMgPSBhd2FpdCB0aGlzLnVpQXV0b0NsaWVudC5zZW5kQ29tbWFuZCgnYXUuZ2V0U2NyZWVuT3JpZW50YXRpb24oKScpO1xuICBpZiAocmVzICYmIHJlcy5zdGF0dXMgPT09IDApIHtcbiAgICAvLyBrZWVwIHRyYWNrIG9mIG9yaWVudGF0aW9uIGZvciBvdXIgb3duIHB1cnBvc2VzXG4gICAgbGV0IG9yaWVudGF0aW9uID0gcmVzLnZhbHVlLnRvVXBwZXJDYXNlKCk7XG4gICAgbG9nZ2VyLmRlYnVnKGBTZXR0aW5nIGludGVybmFsIG9yaWVudGF0aW9uIHRvICcke29yaWVudGF0aW9ufSdgKTtcbiAgICB0aGlzLm9wdHMuY3VyT3JpZW50YXRpb24gPSBvcmllbnRhdGlvbjtcbiAgfVxuICByZXR1cm4gcmVzO1xufTtcblxuY29tbWFuZHMuc2V0T3JpZW50YXRpb24gPSBhc3luYyBmdW5jdGlvbiAob3JpZW50YXRpb24pIHtcbiAgb3JpZW50YXRpb24gPSBvcmllbnRhdGlvbi50b1VwcGVyQ2FzZSgpO1xuICBsZXQgY21kID0gYGF1LnNldFNjcmVlbk9yaWVudGF0aW9uKCcke29yaWVudGF0aW9ufScpYDtcbiAgbGV0IHJlcyA9IGF3YWl0IHRoaXMudWlBdXRvQ2xpZW50LnNlbmRDb21tYW5kKGNtZCk7XG4gIGlmIChyZXMgJiYgcmVzLnN0YXR1cyA9PT0gMCkge1xuICAgIHRoaXMub3B0cy5jdXJPcmllbnRhdGlvbiA9IG9yaWVudGF0aW9uO1xuICB9XG4gIHJldHVybiByZXM7XG59O1xuXG5cbk9iamVjdC5hc3NpZ24oZXh0ZW5zaW9ucywgY29tbWFuZHMsIGhlbHBlcnMpO1xuZXhwb3J0IHsgY29tbWFuZHMsIGhlbHBlcnMgfTtcbmV4cG9ydCBkZWZhdWx0IGV4dGVuc2lvbnM7XG4iXX0=