'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _this = this;

var _ = require('..');

var _2 = _interopRequireDefault(_);

var _mobileJsonWireProtocol = require('mobile-json-wire-protocol');

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _libLoggerJs = require('../lib/logger.js');

var _libLoggerJs2 = _interopRequireDefault(_libLoggerJs);

var _sinon = require('sinon');

var _sinon2 = _interopRequireDefault(_sinon);

var should = _chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

describe('Desired Capabilities', function () {

  var d = undefined;

  beforeEach(function () {
    d = new _2['default']();
    _sinon2['default'].spy(_libLoggerJs2['default'], 'warn');
  });

  afterEach(function () {
    _libLoggerJs2['default'].warn.restore();
  });

  it('should require platformName and deviceName', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.prev = 0;
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(d.createSession({}));

        case 3:
          context$2$0.next = 11;
          break;

        case 5:
          context$2$0.prev = 5;
          context$2$0.t0 = context$2$0['catch'](0);

          context$2$0.t0.should.be['instanceof'](_mobileJsonWireProtocol.errors.SessionNotCreatedError);
          context$2$0.t0.message.should.contain('platformName');
          context$2$0.t0.message.should.contain('deviceName');
          return context$2$0.abrupt('return');

        case 11:

          should.fail('error should have been thrown');

        case 12:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this, [[0, 5]]);
  });

  it('should require platformName', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.prev = 0;
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(d.createSession({ 'platformName': 'iOS' }));

        case 3:
          context$2$0.next = 10;
          break;

        case 5:
          context$2$0.prev = 5;
          context$2$0.t0 = context$2$0['catch'](0);

          context$2$0.t0.should.be['instanceof'](_mobileJsonWireProtocol.errors.SessionNotCreatedError);
          context$2$0.t0.message.should.contain('deviceName');
          return context$2$0.abrupt('return');

        case 10:

          should.fail('error should have been thrown');

        case 11:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this, [[0, 5]]);
  });

  it('should require deviceName', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.prev = 0;
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(d.createSession({ 'deviceName': 'Delorean' }));

        case 3:
          context$2$0.next = 10;
          break;

        case 5:
          context$2$0.prev = 5;
          context$2$0.t0 = context$2$0['catch'](0);

          context$2$0.t0.should.be['instanceof'](_mobileJsonWireProtocol.errors.SessionNotCreatedError);
          context$2$0.t0.message.should.contain('platformName');
          return context$2$0.abrupt('return');

        case 10:

          should.fail('error should have been thrown');

        case 11:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this, [[0, 5]]);
  });

  it('should not care about cap order', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(d.createSession({
            deviceName: 'Delorean',
            platformName: 'iOS'
          }));

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should check required caps which are added to driver', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          d.desiredCapConstraints = {
            necessary: {
              presence: true
            },
            proper: {
              presence: true,
              isString: true,
              inclusion: ['Delorean', 'Reventon']
            }
          };

          context$2$0.prev = 1;
          context$2$0.next = 4;
          return _regeneratorRuntime.awrap(d.createSession({
            'platformName': 'iOS',
            'deviceName': 'Delorean'
          }));

        case 4:
          context$2$0.next = 12;
          break;

        case 6:
          context$2$0.prev = 6;
          context$2$0.t0 = context$2$0['catch'](1);

          context$2$0.t0.should.be['instanceof'](_mobileJsonWireProtocol.errors.SessionNotCreatedError);
          context$2$0.t0.message.should.contain('necessary');
          context$2$0.t0.message.should.contain('proper');
          return context$2$0.abrupt('return');

        case 12:

          should.fail('error should have been thrown');

        case 13:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this, [[1, 6]]);
  });

  it('should check added required caps in addition to base', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          d.desiredCapConstraints = {
            necessary: {
              presence: true
            },
            proper: {
              presence: true,
              isString: true,
              inclusion: ['Delorean', 'Reventon']
            }
          };

          context$2$0.prev = 1;
          context$2$0.next = 4;
          return _regeneratorRuntime.awrap(d.createSession({
            necessary: 'yup',
            proper: 'yup, your highness'
          }));

        case 4:
          context$2$0.next = 12;
          break;

        case 6:
          context$2$0.prev = 6;
          context$2$0.t0 = context$2$0['catch'](1);

          context$2$0.t0.should.be['instanceof'](_mobileJsonWireProtocol.errors.SessionNotCreatedError);
          context$2$0.t0.message.should.contain('platformName');
          context$2$0.t0.message.should.contain('deviceName');
          return context$2$0.abrupt('return');

        case 12:

          should.fail('error should have been thrown');

        case 13:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this, [[1, 6]]);
  });

  it('should accept extra capabilities', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(d.createSession({
            'platformName': 'iOS',
            'deviceName': 'Delorean',
            'extra': 'cheese',
            'hold the': 'sauce'
          }));

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should log the use of extra caps', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          this.timeout(500);

          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(d.createSession({
            'platformName': 'iOS',
            'deviceName': 'Delorean',
            'extra': 'cheese',
            'hold the': 'sauce'
          }));

        case 3:

          _libLoggerJs2['default'].warn.callCount.should.be.above(0);

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });

  it('should be sensitive to the case of caps', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.prev = 0;
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(d.createSession({
            'platformname': 'iOS',
            'deviceName': 'Delorean'
          }));

        case 3:
          context$2$0.next = 10;
          break;

        case 5:
          context$2$0.prev = 5;
          context$2$0.t0 = context$2$0['catch'](0);

          context$2$0.t0.should.be['instanceof'](_mobileJsonWireProtocol.errors.SessionNotCreatedError);
          context$2$0.t0.message.should.contain('platformName');
          return context$2$0.abrupt('return');

        case 10:

          should.fail('error should have been thrown');

        case 11:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this, [[0, 5]]);
  });

  describe('boolean capabilities', function () {
    it('should allow a string "false"', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(d.createSession({
              'platformName': 'iOS',
              'deviceName': 'Delorean',
              'noReset': 'false'
            }));

          case 2:
            _libLoggerJs2['default'].warn.callCount.should.be.above(0);

          case 3:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });

    it('should allow a string "true"', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(d.createSession({
              'platformName': 'iOS',
              'deviceName': 'Delorean',
              'noReset': 'true'
            }));

          case 2:
            _libLoggerJs2['default'].warn.callCount.should.be.above(0);

          case 3:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
  });

  it('should error if objects in caps', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.prev = 0;
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(d.createSession({
            'platformName': { a: 'iOS' },
            'deviceName': 'Delorean'
          }));

        case 3:
          context$2$0.next = 10;
          break;

        case 5:
          context$2$0.prev = 5;
          context$2$0.t0 = context$2$0['catch'](0);

          context$2$0.t0.should.be['instanceof'](_mobileJsonWireProtocol.errors.SessionNotCreatedError);
          context$2$0.t0.message.should.contain('platformName');
          return context$2$0.abrupt('return');

        case 10:

          should.fail('error should have been thrown');

        case 11:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this, [[0, 5]]);
  });

  it('should check for deprecated caps', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          this.timeout(500);

          d.desiredCapConstraints = {
            'lynx-version': {
              deprecated: true
            }
          };

          context$2$0.next = 4;
          return _regeneratorRuntime.awrap(d.createSession({
            'platformName': 'iOS',
            'deviceName': 'Delorean',
            'lynx-version': 5
          }));

        case 4:

          _libLoggerJs2['default'].warn.callCount.should.be.above(0);

        case 5:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });

  it('should not warn if deprecated=false', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          this.timeout(500);

          d.desiredCapConstraints = {
            'lynx-version': {
              deprecated: false
            }
          };

          context$2$0.next = 4;
          return _regeneratorRuntime.awrap(d.createSession({
            'platformName': 'iOS',
            'deviceName': 'Delorean',
            'lynx-version': 5
          }));

        case 4:

          _libLoggerJs2['default'].warn.callCount.should.equal(0);

        case 5:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });

  it('should not validate against null/undefined caps', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          d.desiredCapConstraints = {
            'foo': {
              isString: true
            }
          };

          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(d.createSession({
            platformName: 'iOS',
            deviceName: 'Dumb',
            foo: null
          }));

        case 3:
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(d.deleteSession());

        case 5:
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap(d.createSession({
            platformName: 'iOS',
            deviceName: 'Dumb',
            foo: 1
          }).should.eventually.be.rejectedWith(/was not valid/));

        case 7:
          context$2$0.next = 9;
          return _regeneratorRuntime.awrap(d.createSession({
            platformName: 'iOS',
            deviceName: 'Dumb',
            foo: undefined
          }));

        case 9:
          context$2$0.next = 11;
          return _regeneratorRuntime.awrap(d.deleteSession());

        case 11:
          context$2$0.next = 13;
          return _regeneratorRuntime.awrap(d.createSession({
            platformName: 'iOS',
            deviceName: 'Dumb',
            foo: ''
          }));

        case 13:
          context$2$0.next = 15;
          return _regeneratorRuntime.awrap(d.deleteSession());

        case 15:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });

  it('should still validate null/undefined caps whose presence is required', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          d.desiredCapConstraints = {
            foo: {
              presence: true
            }
          };

          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(d.createSession({
            platformName: 'iOS',
            deviceName: 'Dumb',
            foo: null
          }).should.eventually.be.rejectedWith(/blank/));

        case 3:
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(d.createSession({
            platformName: 'iOS',
            deviceName: 'Dumb',
            foo: ''
          }).should.eventually.be.rejectedWith(/blank/));

        case 5:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
});
//# sourceMappingURL=data:application/json;base64,