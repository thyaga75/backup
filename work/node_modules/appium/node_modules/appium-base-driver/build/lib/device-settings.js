'use strict';

var _createClass = require('babel-runtime/helpers/create-class')['default'];

var _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _getIterator = require('babel-runtime/core-js/get-iterator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _logger = require('./logger');

var _logger2 = _interopRequireDefault(_logger);

var DeviceSettings = (function () {
  function DeviceSettings() {
    var defaultSettings = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
    var onSettingsUpdate = arguments.length <= 1 || arguments[1] === undefined ? null : arguments[1];

    _classCallCheck(this, DeviceSettings);

    this._settings = defaultSettings;
    this.onSettingsUpdate = onSettingsUpdate;
  }

  // calls updateSettings from implementing driver every time a setting is changed.

  _createClass(DeviceSettings, [{
    key: 'update',
    value: function update(newSettings) {
      var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, prop;

      return _regeneratorRuntime.async(function update$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            if (_lodash2['default'].isObject(newSettings)) {
              context$2$0.next = 2;
              break;
            }

            throw new Error('Settings update should be called with valid JSON');

          case 2:
            _iteratorNormalCompletion = true;
            _didIteratorError = false;
            _iteratorError = undefined;
            context$2$0.prev = 5;
            _iterator = _getIterator(_lodash2['default'].keys(newSettings));

          case 7:
            if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
              context$2$0.next = 20;
              break;
            }

            prop = _step.value;

            if (!(this._settings[prop] !== newSettings[prop])) {
              context$2$0.next = 17;
              break;
            }

            if (!this.onSettingsUpdate) {
              context$2$0.next = 16;
              break;
            }

            context$2$0.next = 13;
            return _regeneratorRuntime.awrap(this.onSettingsUpdate(prop, newSettings[prop], this._settings[prop]));

          case 13:
            this._settings[prop] = newSettings[prop];
            context$2$0.next = 17;
            break;

          case 16:
            _logger2['default'].errorAndThrow('Unable to update settings; onSettingsUpdate method not found');

          case 17:
            _iteratorNormalCompletion = true;
            context$2$0.next = 7;
            break;

          case 20:
            context$2$0.next = 26;
            break;

          case 22:
            context$2$0.prev = 22;
            context$2$0.t0 = context$2$0['catch'](5);
            _didIteratorError = true;
            _iteratorError = context$2$0.t0;

          case 26:
            context$2$0.prev = 26;
            context$2$0.prev = 27;

            if (!_iteratorNormalCompletion && _iterator['return']) {
              _iterator['return']();
            }

          case 29:
            context$2$0.prev = 29;

            if (!_didIteratorError) {
              context$2$0.next = 32;
              break;
            }

            throw _iteratorError;

          case 32:
            return context$2$0.finish(29);

          case 33:
            return context$2$0.finish(26);

          case 34:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this, [[5, 22, 26, 34], [27,, 29, 33]]);
    }
  }, {
    key: 'getSettings',
    value: function getSettings() {
      return this._settings;
    }
  }]);

  return DeviceSettings;
})();

exports['default'] = DeviceSettings;
module.exports = exports['default'];

// update setting only when there is updateSettings defined.
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9kZXZpY2Utc2V0dGluZ3MuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztzQkFBYyxRQUFROzs7O3NCQUNOLFVBQVU7Ozs7SUFFcEIsY0FBYztBQUVOLFdBRlIsY0FBYyxHQUUwQztRQUEvQyxlQUFlLHlEQUFHLEVBQUU7UUFBRSxnQkFBZ0IseURBQUcsSUFBSTs7MEJBRnRELGNBQWM7O0FBR2hCLFFBQUksQ0FBQyxTQUFTLEdBQUcsZUFBZSxDQUFDO0FBQ2pDLFFBQUksQ0FBQyxnQkFBZ0IsR0FBRyxnQkFBZ0IsQ0FBQztHQUMxQzs7OztlQUxHLGNBQWM7O1dBUUwsZ0JBQUMsV0FBVzswRkFJZCxJQUFJOzs7OztnQkFIUixvQkFBRSxRQUFRLENBQUMsV0FBVyxDQUFDOzs7OztrQkFDcEIsSUFBSSxLQUFLLENBQUMsa0RBQWtELENBQUM7Ozs7Ozs7cUNBRXBELG9CQUFFLElBQUksQ0FBQyxXQUFXLENBQUM7Ozs7Ozs7O0FBQTNCLGdCQUFJOztrQkFDUCxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFLLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQTs7Ozs7aUJBRXhDLElBQUksQ0FBQyxnQkFBZ0I7Ozs7Ozs2Q0FDakIsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksRUFBRSxXQUFXLENBQUMsSUFBSSxDQUFDLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQzs7O0FBQzFFLGdCQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxHQUFHLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQzs7Ozs7QUFFekMsZ0NBQUksYUFBYSxDQUFDLDhEQUE4RCxDQUFDLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7S0FJekY7OztXQUVXLHVCQUFHO0FBQ2IsYUFBTyxJQUFJLENBQUMsU0FBUyxDQUFDO0tBQ3ZCOzs7U0EzQkcsY0FBYzs7O3FCQThCTCxjQUFjIiwiZmlsZSI6ImxpYi9kZXZpY2Utc2V0dGluZ3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IGxvZyBmcm9tICcuL2xvZ2dlcic7XG5cbmNsYXNzIERldmljZVNldHRpbmdzIHtcblxuICBjb25zdHJ1Y3RvciAoZGVmYXVsdFNldHRpbmdzID0ge30sIG9uU2V0dGluZ3NVcGRhdGUgPSBudWxsKSB7XG4gICAgdGhpcy5fc2V0dGluZ3MgPSBkZWZhdWx0U2V0dGluZ3M7XG4gICAgdGhpcy5vblNldHRpbmdzVXBkYXRlID0gb25TZXR0aW5nc1VwZGF0ZTtcbiAgfVxuXG4gIC8vIGNhbGxzIHVwZGF0ZVNldHRpbmdzIGZyb20gaW1wbGVtZW50aW5nIGRyaXZlciBldmVyeSB0aW1lIGEgc2V0dGluZyBpcyBjaGFuZ2VkLlxuICBhc3luYyB1cGRhdGUgKG5ld1NldHRpbmdzKSB7XG4gICAgaWYgKCFfLmlzT2JqZWN0KG5ld1NldHRpbmdzKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdTZXR0aW5ncyB1cGRhdGUgc2hvdWxkIGJlIGNhbGxlZCB3aXRoIHZhbGlkIEpTT04nKTtcbiAgICB9XG4gICAgZm9yIChsZXQgcHJvcCBvZiBfLmtleXMobmV3U2V0dGluZ3MpKSB7XG4gICAgICBpZiAodGhpcy5fc2V0dGluZ3NbcHJvcF0gIT09IG5ld1NldHRpbmdzW3Byb3BdKSB7XG4gICAgICAgIC8vIHVwZGF0ZSBzZXR0aW5nIG9ubHkgd2hlbiB0aGVyZSBpcyB1cGRhdGVTZXR0aW5ncyBkZWZpbmVkLlxuICAgICAgICBpZiAodGhpcy5vblNldHRpbmdzVXBkYXRlKSB7XG4gICAgICAgICAgYXdhaXQgdGhpcy5vblNldHRpbmdzVXBkYXRlKHByb3AsIG5ld1NldHRpbmdzW3Byb3BdLCB0aGlzLl9zZXR0aW5nc1twcm9wXSk7XG4gICAgICAgICAgdGhpcy5fc2V0dGluZ3NbcHJvcF0gPSBuZXdTZXR0aW5nc1twcm9wXTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBsb2cuZXJyb3JBbmRUaHJvdygnVW5hYmxlIHRvIHVwZGF0ZSBzZXR0aW5nczsgb25TZXR0aW5nc1VwZGF0ZSBtZXRob2Qgbm90IGZvdW5kJyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBnZXRTZXR0aW5ncyAoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3NldHRpbmdzO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IERldmljZVNldHRpbmdzO1xuIl19