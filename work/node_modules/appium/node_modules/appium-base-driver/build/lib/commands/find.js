"use strict";

var _regeneratorRuntime = require("babel-runtime/regenerator")["default"];

var _Object$assign = require("babel-runtime/core-js/object/assign")["default"];

Object.defineProperty(exports, "__esModule", {
  value: true
});
var commands = {},
    helpers = {},
    extensions = {};

// Override the following function for your own driver, and the rest is taken
// care of!

//helpers.findElOrEls = async function (strategy, selector, mult, context) {}
// strategy: locator strategy
// selector: the actual selector for finding an element
// mult: multiple elements or just one?
// context: finding an element from the root context? or starting from another element

commands.findElement = function callee$0$0(strategy, selector) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        this.validateLocatorStrategy(strategy);
        return context$1$0.abrupt("return", this.findElOrEls(strategy, selector, false));

      case 2:
      case "end":
        return context$1$0.stop();
    }
  }, null, this);
};

commands.findElements = function callee$0$0(strategy, selector) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        this.validateLocatorStrategy(strategy);
        return context$1$0.abrupt("return", this.findElOrEls(strategy, selector, true));

      case 2:
      case "end":
        return context$1$0.stop();
    }
  }, null, this);
};

commands.findElementFromElement = function callee$0$0(strategy, selector, elementId) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        this.validateLocatorStrategy(strategy);
        return context$1$0.abrupt("return", this.findElOrEls(strategy, selector, false, elementId));

      case 2:
      case "end":
        return context$1$0.stop();
    }
  }, null, this);
};

commands.findElementsFromElement = function callee$0$0(strategy, selector, elementId) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        this.validateLocatorStrategy(strategy);
        return context$1$0.abrupt("return", this.findElOrEls(strategy, selector, true, elementId));

      case 2:
      case "end":
        return context$1$0.stop();
    }
  }, null, this);
};

_Object$assign(extensions, commands, helpers);
exports.commands = commands;
exports.helpers = helpers;
exports["default"] = extensions;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb21tYW5kcy9maW5kLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLElBQUksUUFBUSxHQUFHLEVBQUU7SUFBRSxPQUFPLEdBQUcsRUFBRTtJQUFFLFVBQVUsR0FBRyxFQUFFLENBQUM7Ozs7Ozs7Ozs7O0FBV2pELFFBQVEsQ0FBQyxXQUFXLEdBQUcsb0JBQWdCLFFBQVEsRUFBRSxRQUFROzs7O0FBQ3ZELFlBQUksQ0FBQyx1QkFBdUIsQ0FBQyxRQUFRLENBQUMsQ0FBQzs0Q0FDaEMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLEVBQUUsUUFBUSxFQUFFLEtBQUssQ0FBQzs7Ozs7OztDQUNuRCxDQUFDOztBQUVGLFFBQVEsQ0FBQyxZQUFZLEdBQUcsb0JBQWdCLFFBQVEsRUFBRSxRQUFROzs7O0FBQ3hELFlBQUksQ0FBQyx1QkFBdUIsQ0FBQyxRQUFRLENBQUMsQ0FBQzs0Q0FDaEMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQzs7Ozs7OztDQUNsRCxDQUFDOztBQUVGLFFBQVEsQ0FBQyxzQkFBc0IsR0FBRyxvQkFBZ0IsUUFBUSxFQUFFLFFBQVEsRUFBRSxTQUFTOzs7O0FBQzdFLFlBQUksQ0FBQyx1QkFBdUIsQ0FBQyxRQUFRLENBQUMsQ0FBQzs0Q0FDaEMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxTQUFTLENBQUM7Ozs7Ozs7Q0FDOUQsQ0FBQzs7QUFFRixRQUFRLENBQUMsdUJBQXVCLEdBQUcsb0JBQWdCLFFBQVEsRUFBRSxRQUFRLEVBQUUsU0FBUzs7OztBQUM5RSxZQUFJLENBQUMsdUJBQXVCLENBQUMsUUFBUSxDQUFDLENBQUM7NENBQ2hDLElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsU0FBUyxDQUFDOzs7Ozs7O0NBQzdELENBQUM7O0FBRUYsZUFBYyxVQUFVLEVBQUUsUUFBUSxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQ3BDLFFBQVEsR0FBUixRQUFRO1FBQUUsT0FBTyxHQUFQLE9BQU87cUJBQ1gsVUFBVSIsImZpbGUiOiJsaWIvY29tbWFuZHMvZmluZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImxldCBjb21tYW5kcyA9IHt9LCBoZWxwZXJzID0ge30sIGV4dGVuc2lvbnMgPSB7fTtcblxuLy8gT3ZlcnJpZGUgdGhlIGZvbGxvd2luZyBmdW5jdGlvbiBmb3IgeW91ciBvd24gZHJpdmVyLCBhbmQgdGhlIHJlc3QgaXMgdGFrZW5cbi8vIGNhcmUgb2YhXG5cbi8vaGVscGVycy5maW5kRWxPckVscyA9IGFzeW5jIGZ1bmN0aW9uIChzdHJhdGVneSwgc2VsZWN0b3IsIG11bHQsIGNvbnRleHQpIHt9XG4vLyBzdHJhdGVneTogbG9jYXRvciBzdHJhdGVneVxuLy8gc2VsZWN0b3I6IHRoZSBhY3R1YWwgc2VsZWN0b3IgZm9yIGZpbmRpbmcgYW4gZWxlbWVudFxuLy8gbXVsdDogbXVsdGlwbGUgZWxlbWVudHMgb3IganVzdCBvbmU/XG4vLyBjb250ZXh0OiBmaW5kaW5nIGFuIGVsZW1lbnQgZnJvbSB0aGUgcm9vdCBjb250ZXh0PyBvciBzdGFydGluZyBmcm9tIGFub3RoZXIgZWxlbWVudFxuXG5jb21tYW5kcy5maW5kRWxlbWVudCA9IGFzeW5jIGZ1bmN0aW9uIChzdHJhdGVneSwgc2VsZWN0b3IpIHtcbiAgdGhpcy52YWxpZGF0ZUxvY2F0b3JTdHJhdGVneShzdHJhdGVneSk7XG4gIHJldHVybiB0aGlzLmZpbmRFbE9yRWxzKHN0cmF0ZWd5LCBzZWxlY3RvciwgZmFsc2UpO1xufTtcblxuY29tbWFuZHMuZmluZEVsZW1lbnRzID0gYXN5bmMgZnVuY3Rpb24gKHN0cmF0ZWd5LCBzZWxlY3Rvcikge1xuICB0aGlzLnZhbGlkYXRlTG9jYXRvclN0cmF0ZWd5KHN0cmF0ZWd5KTtcbiAgcmV0dXJuIHRoaXMuZmluZEVsT3JFbHMoc3RyYXRlZ3ksIHNlbGVjdG9yLCB0cnVlKTtcbn07XG5cbmNvbW1hbmRzLmZpbmRFbGVtZW50RnJvbUVsZW1lbnQgPSBhc3luYyBmdW5jdGlvbiAoc3RyYXRlZ3ksIHNlbGVjdG9yLCBlbGVtZW50SWQpIHtcbiAgdGhpcy52YWxpZGF0ZUxvY2F0b3JTdHJhdGVneShzdHJhdGVneSk7XG4gIHJldHVybiB0aGlzLmZpbmRFbE9yRWxzKHN0cmF0ZWd5LCBzZWxlY3RvciwgZmFsc2UsIGVsZW1lbnRJZCk7XG59O1xuXG5jb21tYW5kcy5maW5kRWxlbWVudHNGcm9tRWxlbWVudCA9IGFzeW5jIGZ1bmN0aW9uIChzdHJhdGVneSwgc2VsZWN0b3IsIGVsZW1lbnRJZCkge1xuICB0aGlzLnZhbGlkYXRlTG9jYXRvclN0cmF0ZWd5KHN0cmF0ZWd5KTtcbiAgcmV0dXJuIHRoaXMuZmluZEVsT3JFbHMoc3RyYXRlZ3ksIHNlbGVjdG9yLCB0cnVlLCBlbGVtZW50SWQpO1xufTtcblxuT2JqZWN0LmFzc2lnbihleHRlbnNpb25zLCBjb21tYW5kcywgaGVscGVycyk7XG5leHBvcnQgeyBjb21tYW5kcywgaGVscGVyc307XG5leHBvcnQgZGVmYXVsdCBleHRlbnNpb25zO1xuIl19