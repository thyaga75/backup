{
  "_args": [
    [
      "appium-express@https://registry.npmjs.org/appium-express/-/appium-express-1.2.1.tgz",
      "/Users/thyag/work/node_modules/appium"
    ]
  ],
  "_from": "appium-express@>=1.2.0 <2.0.0",
  "_id": "appium-express@1.2.1",
  "_inCache": true,
  "_location": "/appium/appium-express",
  "_phantomChildren": {},
  "_requested": {
    "name": "appium-express",
    "raw": "appium-express@https://registry.npmjs.org/appium-express/-/appium-express-1.2.1.tgz",
    "rawSpec": "https://registry.npmjs.org/appium-express/-/appium-express-1.2.1.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/appium-express/-/appium-express-1.2.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/appium",
    "/appium/appium-android-driver",
    "/appium/appium-fake-driver",
    "/appium/appium-ios-driver",
    "/appium/appium-selendroid-driver"
  ],
  "_resolved": "https://registry.npmjs.org/appium-express/-/appium-express-1.2.1.tgz",
  "_shasum": "7b6faad334fd0f152741b14d66b23ed3711abf8f",
  "_shrinkwrap": null,
  "_spec": "appium-express@https://registry.npmjs.org/appium-express/-/appium-express-1.2.1.tgz",
  "_where": "/Users/thyag/work/node_modules/appium",
  "author": {
    "name": "appium"
  },
  "bin": {},
  "bugs": {
    "url": "https://github.com/appium/appium-express/issues"
  },
  "dependencies": {
    "appium-logger": "^2.1.0",
    "appium-support": "^2.0.10",
    "babel-runtime": "=5.8.24",
    "bluebird": "^2.10.2",
    "body-parser": "^1.14.1",
    "colors": "^1.1.2",
    "express": "^4.13.3",
    "lodash": "^3.10.1",
    "method-override": "^2.3.5",
    "mobile-json-wire-protocol": "^1.2.0",
    "morgan": "^1.6.1",
    "serve-favicon": "^2.3.0",
    "source-map-support": "^0.3.2"
  },
  "description": "HTTP server for Appium drivers",
  "devDependencies": {
    "appium-gulp-plugins": "^1.3.12",
    "chai": "^3.3.0",
    "chai-as-promised": "^5.1.0",
    "gulp": "^3.9.0",
    "request-promise": "^0.4.3",
    "sinon": "^1.17.1"
  },
  "directories": {
    "lib": "lib"
  },
  "engines": [
    "node"
  ],
  "homepage": "https://github.com/appium/appium-express#readme",
  "keywords": [
    "appium",
    "express"
  ],
  "license": "Apache-2.0",
  "main": "./build/index.js",
  "name": "appium-express",
  "optionalDependencies": {},
  "readme": "## appium-express\n\n[![Build Status](https://travis-ci.org/appium/appium-express.svg)](https://travis-ci.org/appium/appium-express)\n[![Coverage Status](https://coveralls.io/repos/appium/appium-express/badge.svg?branch=master&service=github)](https://coveralls.io/github/appium/appium-express?branch=master)\n\n[Express](http://expressjs.com/) server tuned for to serve [Appium](http://appium.io/).\n\n\n### Configuration\n\nThe `appium-express` server comes configured with:\n\n1. appropriate logging formats\n2. service of necessary static assets\n3. allowance of cross-domain requests\n4. default error handling\n5. fix for invalid content types sent by certain clients\n\nTo configure routes, a function that takes an Express server is passed into the server. This function can add whatever routes are wanted.\n\n\n### Usage\n\n```js\nimport server from 'appium-express';\n\n\n// configure the routes\nfunction configureRoutes (app) {\n  app.get('/hello', (req, res) => {\n    res.header['content-type'] = 'text/html';\n    res.status(200).send('Hello');\n  });\n  app.get('/world', (req, res) => {\n    res.header['content-type'] = 'text/html';\n    res.status(200).send('World');\n  });\n}\n\nlet port = 5000;\nlet host = 'localhost';\n\nlet appiumServer = await server(configureRoutes, port, host);\n```\n\n\n## Watch\n\n```\nnpm run watch\n```\n\n## Test\n\n```\nnpm test\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/appium/appium-express.git"
  },
  "scripts": {
    "prepublish": "gulp prepublish",
    "test": "gulp once",
    "watch": "gulp"
  },
  "version": "1.2.1"
}
