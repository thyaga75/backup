require('source-map-support').install();

'use strict';

var _slicedToArray = require('babel-runtime/helpers/sliced-to-array')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _this = this;

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _wd = require('wd');

var _wd2 = _interopRequireDefault(_wd);

var _appiumSupport = require('appium-support');

var _ = require('../..');

var TEST_PORT = 4884;
var TEST_HOST = 'localhost';
var TEST_APP = _path2['default'].resolve(__dirname, '..', '..', '..', 'test', 'fixtures', 'selendroid-test-app.apk');
var REMOTE_TEST_APP = 'http://appium.github.io/appium/assets/ApiDemos-debug.apk';

var shouldStartServer = process.env.USE_RUNNING_SERVER !== "0";

var should = _chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

describe('SelendroidDriver', function () {
  var server = null;

  before(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          if (!shouldStartServer) {
            context$2$0.next = 4;
            break;
          }

          context$2$0.next = 3;
          return _regeneratorRuntime.awrap((0, _.startServer)(TEST_PORT, TEST_HOST));

        case 3:
          server = context$2$0.sent;

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
  after(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          if (server) {
            server.close();
          }

        case 1:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  describe('local app', function () {
    var caps = { platformName: 'Android', deviceName: 'Android Emulator',
      app: TEST_APP };
    var tempAppFile = undefined;
    before(function callee$2$0() {
      var dir;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(_appiumSupport.tempDir.path());

          case 2:
            dir = context$3$0.sent;

            tempAppFile = _path2['default'].resolve(dir, 'selendroid-test-app.apk');
            context$3$0.next = 6;
            return _regeneratorRuntime.awrap(_appiumSupport.fs.copyFile(TEST_APP, tempAppFile));

          case 6:
            caps.app = tempAppFile;

          case 7:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
    after(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            if (!tempAppFile) {
              context$3$0.next = 3;
              break;
            }

            context$3$0.next = 3;
            return _regeneratorRuntime.awrap(_appiumSupport.fs.unlink(tempAppFile));

          case 3:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });

    it('should start a session', function callee$2$0() {
      var driver, _ref, _ref2, sessionId;

      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            driver = _wd2['default'].promiseChainRemote(TEST_HOST, TEST_PORT);
            context$3$0.next = 3;
            return _regeneratorRuntime.awrap(driver.init(caps));

          case 3:
            _ref = context$3$0.sent;
            _ref2 = _slicedToArray(_ref, 1);
            sessionId = _ref2[0];

            should.exist(sessionId);
            sessionId.should.be.a('string');
            context$3$0.next = 10;
            return _regeneratorRuntime.awrap(driver.quit());

          case 10:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
    it('should fail gracefully when session has ended', function callee$2$0() {
      var driver, _ref3, _ref32, sessionId;

      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            driver = _wd2['default'].promiseChainRemote(TEST_HOST, TEST_PORT);
            context$3$0.next = 3;
            return _regeneratorRuntime.awrap(driver.init(caps));

          case 3:
            _ref3 = context$3$0.sent;
            _ref32 = _slicedToArray(_ref3, 1);
            sessionId = _ref32[0];

            should.exist(sessionId);
            sessionId.should.be.a('string');
            context$3$0.next = 10;
            return _regeneratorRuntime.awrap(driver.quit());

          case 10:
            context$3$0.next = 12;
            return _regeneratorRuntime.awrap(driver.title().should.eventually.be.rejectedWith(/terminated/));

          case 12:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
  });

  describe('remote app', function () {
    var caps = { platformName: 'Android', deviceName: 'Android Emulator',
      app: REMOTE_TEST_APP };

    it('should start a session', function callee$2$0() {
      var driver, _ref4, _ref42, sessionId;

      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            driver = _wd2['default'].promiseChainRemote(TEST_HOST, TEST_PORT);
            context$3$0.next = 3;
            return _regeneratorRuntime.awrap(driver.init(caps));

          case 3:
            _ref4 = context$3$0.sent;
            _ref42 = _slicedToArray(_ref4, 1);
            sessionId = _ref42[0];

            should.exist(sessionId);
            sessionId.should.be.a('string');
            context$3$0.next = 10;
            return _regeneratorRuntime.awrap(driver.quit());

          case 10:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
  });
});

// make a temporary copy of the apk
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZnVuY3Rpb25hbC9kcml2ZXItZTJlLXNwZWNzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztvQkFFaUIsTUFBTTs7OztvQkFDTixNQUFNOzs7OzhCQUNJLGtCQUFrQjs7OztrQkFDOUIsSUFBSTs7Ozs2QkFDUyxnQkFBZ0I7O2dCQUNoQixPQUFPOztBQUduQyxJQUFNLFNBQVMsR0FBRyxJQUFJLENBQUM7QUFDdkIsSUFBTSxTQUFTLEdBQUcsV0FBVyxDQUFDO0FBQzlCLElBQU0sUUFBUSxHQUFHLGtCQUFLLE9BQU8sQ0FBQyxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLFVBQVUsRUFDL0MseUJBQXlCLENBQUMsQ0FBQztBQUN6RCxJQUFNLGVBQWUsR0FBRywwREFBMEQsQ0FBQzs7QUFFbkYsSUFBTSxpQkFBaUIsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixLQUFLLEdBQUcsQ0FBQzs7QUFFakUsSUFBTSxNQUFNLEdBQUcsa0JBQUssTUFBTSxFQUFFLENBQUM7QUFDN0Isa0JBQUssR0FBRyw2QkFBZ0IsQ0FBQzs7QUFFekIsUUFBUSxDQUFDLGtCQUFrQixFQUFFLFlBQU07QUFDakMsTUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDOztBQUVsQixRQUFNLENBQUM7Ozs7ZUFDRCxpQkFBaUI7Ozs7OzsyQ0FDSixtQkFBWSxTQUFTLEVBQUUsU0FBUyxDQUFDOzs7QUFBaEQsZ0JBQU07Ozs7Ozs7R0FFVCxDQUFDLENBQUM7QUFDSCxPQUFLLENBQUM7Ozs7QUFDSixjQUFJLE1BQU0sRUFBRTtBQUNWLGtCQUFNLENBQUMsS0FBSyxFQUFFLENBQUM7V0FDaEI7Ozs7Ozs7R0FDRixDQUFDLENBQUM7O0FBRUgsVUFBUSxDQUFDLFdBQVcsRUFBRSxZQUFNO0FBQzFCLFFBQU0sSUFBSSxHQUFHLEVBQUMsWUFBWSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsa0JBQWtCO0FBQ3ZELFNBQUcsRUFBRSxRQUFRLEVBQUMsQ0FBQztBQUM3QixRQUFJLFdBQVcsWUFBQSxDQUFDO0FBQ2hCLFVBQU0sQ0FBQztVQUVELEdBQUc7Ozs7OzZDQUFTLHVCQUFRLElBQUksRUFBRTs7O0FBQTFCLGVBQUc7O0FBQ1AsdUJBQVcsR0FBRyxrQkFBSyxPQUFPLENBQUMsR0FBRyxFQUFFLHlCQUF5QixDQUFDLENBQUM7OzZDQUNyRCxrQkFBRyxRQUFRLENBQUMsUUFBUSxFQUFFLFdBQVcsQ0FBQzs7O0FBQ3hDLGdCQUFJLENBQUMsR0FBRyxHQUFHLFdBQVcsQ0FBQzs7Ozs7OztLQUN4QixDQUFDLENBQUM7QUFDSCxTQUFLLENBQUM7Ozs7aUJBQ0EsV0FBVzs7Ozs7OzZDQUNQLGtCQUFHLE1BQU0sQ0FBQyxXQUFXLENBQUM7Ozs7Ozs7S0FFL0IsQ0FBQyxDQUFDOztBQUVILE1BQUUsQ0FBQyx3QkFBd0IsRUFBRTtVQUN2QixNQUFNLGVBQ0wsU0FBUzs7Ozs7QUFEVixrQkFBTSxHQUFHLGdCQUFHLGtCQUFrQixDQUFDLFNBQVMsRUFBRSxTQUFTLENBQUM7OzZDQUNoQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQzs7Ozs7QUFBcEMscUJBQVM7O0FBQ2Qsa0JBQU0sQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUM7QUFDeEIscUJBQVMsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQzs7NkNBQzFCLE1BQU0sQ0FBQyxJQUFJLEVBQUU7Ozs7Ozs7S0FDcEIsQ0FBQyxDQUFDO0FBQ0gsTUFBRSxDQUFDLCtDQUErQyxFQUFFO1VBQzlDLE1BQU0saUJBQ0wsU0FBUzs7Ozs7QUFEVixrQkFBTSxHQUFHLGdCQUFHLGtCQUFrQixDQUFDLFNBQVMsRUFBRSxTQUFTLENBQUM7OzZDQUNoQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQzs7Ozs7QUFBcEMscUJBQVM7O0FBQ2Qsa0JBQU0sQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUM7QUFDeEIscUJBQVMsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQzs7NkNBQzFCLE1BQU0sQ0FBQyxJQUFJLEVBQUU7Ozs7NkNBQ2IsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLFlBQVksQ0FBQyxZQUFZLENBQUM7Ozs7Ozs7S0FDckUsQ0FBQyxDQUFDO0dBQ0osQ0FBQyxDQUFDOztBQUVILFVBQVEsQ0FBQyxZQUFZLEVBQUUsWUFBTTtBQUMzQixRQUFNLElBQUksR0FBRyxFQUFDLFlBQVksRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLGtCQUFrQjtBQUN2RCxTQUFHLEVBQUUsZUFBZSxFQUFDLENBQUM7O0FBRXBDLE1BQUUsQ0FBQyx3QkFBd0IsRUFBRTtVQUN2QixNQUFNLGlCQUNMLFNBQVM7Ozs7O0FBRFYsa0JBQU0sR0FBRyxnQkFBRyxrQkFBa0IsQ0FBQyxTQUFTLEVBQUUsU0FBUyxDQUFDOzs2Q0FDaEMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7Ozs7O0FBQXBDLHFCQUFTOztBQUNkLGtCQUFNLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBQ3hCLHFCQUFTLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUM7OzZDQUMxQixNQUFNLENBQUMsSUFBSSxFQUFFOzs7Ozs7O0tBQ3BCLENBQUMsQ0FBQztHQUNKLENBQUMsQ0FBQztDQUNKLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXN0L2Z1bmN0aW9uYWwvZHJpdmVyLWUyZS1zcGVjcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHRyYW5zcGlsZTptb2NoYVxuXG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCBjaGFpIGZyb20gJ2NoYWknO1xuaW1wb3J0IGNoYWlBc1Byb21pc2VkIGZyb20gJ2NoYWktYXMtcHJvbWlzZWQnO1xuaW1wb3J0IHdkIGZyb20gJ3dkJztcbmltcG9ydCB7IHRlbXBEaXIsIGZzIH0gZnJvbSAnYXBwaXVtLXN1cHBvcnQnO1xuaW1wb3J0IHsgc3RhcnRTZXJ2ZXIgfSBmcm9tICcuLi8uLic7XG5cblxuY29uc3QgVEVTVF9QT1JUID0gNDg4NDtcbmNvbnN0IFRFU1RfSE9TVCA9ICdsb2NhbGhvc3QnO1xuY29uc3QgVEVTVF9BUFAgPSBwYXRoLnJlc29sdmUoX19kaXJuYW1lLCAnLi4nLCAnLi4nLCAnLi4nLCAndGVzdCcsICdmaXh0dXJlcycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnc2VsZW5kcm9pZC10ZXN0LWFwcC5hcGsnKTtcbmNvbnN0IFJFTU9URV9URVNUX0FQUCA9ICdodHRwOi8vYXBwaXVtLmdpdGh1Yi5pby9hcHBpdW0vYXNzZXRzL0FwaURlbW9zLWRlYnVnLmFwayc7XG5cbmNvbnN0IHNob3VsZFN0YXJ0U2VydmVyID0gcHJvY2Vzcy5lbnYuVVNFX1JVTk5JTkdfU0VSVkVSICE9PSBcIjBcIjtcblxuY29uc3Qgc2hvdWxkID0gY2hhaS5zaG91bGQoKTtcbmNoYWkudXNlKGNoYWlBc1Byb21pc2VkKTtcblxuZGVzY3JpYmUoJ1NlbGVuZHJvaWREcml2ZXInLCAoKSA9PiB7XG4gIGxldCBzZXJ2ZXIgPSBudWxsO1xuXG4gIGJlZm9yZShhc3luYyAoKSA9PiB7XG4gICAgaWYgKHNob3VsZFN0YXJ0U2VydmVyKSB7XG4gICAgICBzZXJ2ZXIgPSBhd2FpdCBzdGFydFNlcnZlcihURVNUX1BPUlQsIFRFU1RfSE9TVCk7XG4gICAgfVxuICB9KTtcbiAgYWZ0ZXIoYXN5bmMgKCkgPT4ge1xuICAgIGlmIChzZXJ2ZXIpIHtcbiAgICAgIHNlcnZlci5jbG9zZSgpO1xuICAgIH1cbiAgfSk7XG5cbiAgZGVzY3JpYmUoJ2xvY2FsIGFwcCcsICgpID0+IHtcbiAgICBjb25zdCBjYXBzID0ge3BsYXRmb3JtTmFtZTogJ0FuZHJvaWQnLCBkZXZpY2VOYW1lOiAnQW5kcm9pZCBFbXVsYXRvcicsXG4gICAgICAgICAgICAgICAgICBhcHA6IFRFU1RfQVBQfTtcbiAgICBsZXQgdGVtcEFwcEZpbGU7XG4gICAgYmVmb3JlKGFzeW5jICgpID0+IHtcbiAgICAgIC8vIG1ha2UgYSB0ZW1wb3JhcnkgY29weSBvZiB0aGUgYXBrXG4gICAgICBsZXQgZGlyID0gYXdhaXQgdGVtcERpci5wYXRoKCk7XG4gICAgICB0ZW1wQXBwRmlsZSA9IHBhdGgucmVzb2x2ZShkaXIsICdzZWxlbmRyb2lkLXRlc3QtYXBwLmFwaycpO1xuICAgICAgYXdhaXQgZnMuY29weUZpbGUoVEVTVF9BUFAsIHRlbXBBcHBGaWxlKTtcbiAgICAgIGNhcHMuYXBwID0gdGVtcEFwcEZpbGU7XG4gICAgfSk7XG4gICAgYWZ0ZXIoYXN5bmMgKCkgPT4ge1xuICAgICAgaWYgKHRlbXBBcHBGaWxlKSB7XG4gICAgICAgIGF3YWl0IGZzLnVubGluayh0ZW1wQXBwRmlsZSk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIHN0YXJ0IGEgc2Vzc2lvbicsIGFzeW5jICgpID0+IHtcbiAgICAgIGxldCBkcml2ZXIgPSB3ZC5wcm9taXNlQ2hhaW5SZW1vdGUoVEVTVF9IT1NULCBURVNUX1BPUlQpO1xuICAgICAgbGV0IFtzZXNzaW9uSWRdID0gYXdhaXQgZHJpdmVyLmluaXQoY2Fwcyk7XG4gICAgICBzaG91bGQuZXhpc3Qoc2Vzc2lvbklkKTtcbiAgICAgIHNlc3Npb25JZC5zaG91bGQuYmUuYSgnc3RyaW5nJyk7XG4gICAgICBhd2FpdCBkcml2ZXIucXVpdCgpO1xuICAgIH0pO1xuICAgIGl0KCdzaG91bGQgZmFpbCBncmFjZWZ1bGx5IHdoZW4gc2Vzc2lvbiBoYXMgZW5kZWQnLCBhc3luYyAoKSA9PiB7XG4gICAgICBsZXQgZHJpdmVyID0gd2QucHJvbWlzZUNoYWluUmVtb3RlKFRFU1RfSE9TVCwgVEVTVF9QT1JUKTtcbiAgICAgIGxldCBbc2Vzc2lvbklkXSA9IGF3YWl0IGRyaXZlci5pbml0KGNhcHMpO1xuICAgICAgc2hvdWxkLmV4aXN0KHNlc3Npb25JZCk7XG4gICAgICBzZXNzaW9uSWQuc2hvdWxkLmJlLmEoJ3N0cmluZycpO1xuICAgICAgYXdhaXQgZHJpdmVyLnF1aXQoKTtcbiAgICAgIGF3YWl0IGRyaXZlci50aXRsZSgpLnNob3VsZC5ldmVudHVhbGx5LmJlLnJlamVjdGVkV2l0aCgvdGVybWluYXRlZC8pO1xuICAgIH0pO1xuICB9KTtcblxuICBkZXNjcmliZSgncmVtb3RlIGFwcCcsICgpID0+IHtcbiAgICBjb25zdCBjYXBzID0ge3BsYXRmb3JtTmFtZTogJ0FuZHJvaWQnLCBkZXZpY2VOYW1lOiAnQW5kcm9pZCBFbXVsYXRvcicsXG4gICAgICAgICAgICAgICAgICBhcHA6IFJFTU9URV9URVNUX0FQUH07XG5cbiAgICBpdCgnc2hvdWxkIHN0YXJ0IGEgc2Vzc2lvbicsIGFzeW5jICgpID0+IHtcbiAgICAgIGxldCBkcml2ZXIgPSB3ZC5wcm9taXNlQ2hhaW5SZW1vdGUoVEVTVF9IT1NULCBURVNUX1BPUlQpO1xuICAgICAgbGV0IFtzZXNzaW9uSWRdID0gYXdhaXQgZHJpdmVyLmluaXQoY2Fwcyk7XG4gICAgICBzaG91bGQuZXhpc3Qoc2Vzc2lvbklkKTtcbiAgICAgIHNlc3Npb25JZC5zaG91bGQuYmUuYSgnc3RyaW5nJyk7XG4gICAgICBhd2FpdCBkcml2ZXIucXVpdCgpO1xuICAgIH0pO1xuICB9KTtcbn0pO1xuXG4iXX0=