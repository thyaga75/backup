require('source-map-support').install();

'use strict';

var _Promise = require('babel-runtime/core-js/promise')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _interopRequireWildcard = require('babel-runtime/helpers/interop-require-wildcard')['default'];

var _this = this;

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _sinon = require('sinon');

var _sinon2 = _interopRequireDefault(_sinon);

var _nodeSimctl = require('node-simctl');

var nodeSimctl = _interopRequireWildcard(_nodeSimctl);

var _assetsDeviceList = require('../assets/deviceList');

var _libExtensionsIsolateSimJs = require('../../lib/extensions/isolate-sim.js');

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

describe('isolate sims', function () {
  var getDevicesStub = undefined;

  beforeEach(function () {
    getDevicesStub = _sinon2['default'].stub(nodeSimctl, 'getDevices');
    getDevicesStub.returns(_Promise.resolve(_assetsDeviceList.devices));
  });
  afterEach(function () {
    nodeSimctl.getDevices.restore();
  });

  it('getAllUdids', function callee$1$0() {
    var udids, udid;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap((0, _libExtensionsIsolateSimJs.getAllUdids)());

        case 2:
          udids = context$2$0.sent;

          for (udid in udids) {
            udid.should.be.a('string');
          }
          udids.length.should.equal(26);

        case 5:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvdW5pdC9pc29sYXRlLXNpbS1zcGVjcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztvQkFFaUIsTUFBTTs7Ozs4QkFDSSxrQkFBa0I7Ozs7cUJBQzNCLE9BQU87Ozs7MEJBQ0csYUFBYTs7SUFBN0IsVUFBVTs7Z0NBQ0Usc0JBQXNCOzt5Q0FDbEIscUNBQXFDOztBQUdqRSxrQkFBSyxNQUFNLEVBQUUsQ0FBQztBQUNkLGtCQUFLLEdBQUcsNkJBQWdCLENBQUM7O0FBR3pCLFFBQVEsQ0FBQyxjQUFjLEVBQUUsWUFBTTtBQUM3QixNQUFJLGNBQWMsWUFBQSxDQUFDOztBQUVuQixZQUFVLENBQUMsWUFBTTtBQUNmLGtCQUFjLEdBQUcsbUJBQU0sSUFBSSxDQUFDLFVBQVUsRUFBRSxZQUFZLENBQUMsQ0FBQztBQUN0RCxrQkFBYyxDQUFDLE9BQU8sQ0FBQyxTQUFRLE9BQU8sMkJBQVMsQ0FBQyxDQUFDO0dBQ2xELENBQUMsQ0FBQztBQUNILFdBQVMsQ0FBQyxZQUFNO0FBQ2QsY0FBVSxDQUFDLFVBQVUsQ0FBQyxPQUFPLEVBQUUsQ0FBQztHQUNqQyxDQUFDLENBQUM7O0FBRUgsSUFBRSxDQUFDLGFBQWEsRUFBRTtRQUNaLEtBQUssRUFDQSxJQUFJOzs7OzsyQ0FESyw2Q0FBYTs7O0FBQTNCLGVBQUs7O0FBQ1QsZUFBUyxJQUFJLElBQUksS0FBSyxFQUFFO0FBQ3RCLGdCQUFJLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUM7V0FDNUI7QUFDRCxlQUFLLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUM7Ozs7Ozs7R0FDL0IsQ0FBQyxDQUFDO0NBQ0osQ0FBQyxDQUFDIiwiZmlsZSI6InRlc3QvdW5pdC9pc29sYXRlLXNpbS1zcGVjcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHRyYW5zcGlsZTptb2NoYVxuXG5pbXBvcnQgY2hhaSBmcm9tICdjaGFpJztcbmltcG9ydCBjaGFpQXNQcm9taXNlZCBmcm9tICdjaGFpLWFzLXByb21pc2VkJztcbmltcG9ydCBzaW5vbiBmcm9tICdzaW5vbic7XG5pbXBvcnQgKiBhcyBub2RlU2ltY3RsIGZyb20gJ25vZGUtc2ltY3RsJztcbmltcG9ydCB7IGRldmljZXMgfSBmcm9tICcuLi9hc3NldHMvZGV2aWNlTGlzdCc7XG5pbXBvcnQgeyBnZXRBbGxVZGlkcyB9IGZyb20gJy4uLy4uL2xpYi9leHRlbnNpb25zL2lzb2xhdGUtc2ltLmpzJztcblxuXG5jaGFpLnNob3VsZCgpO1xuY2hhaS51c2UoY2hhaUFzUHJvbWlzZWQpO1xuXG5cbmRlc2NyaWJlKCdpc29sYXRlIHNpbXMnLCAoKSA9PiB7XG4gIGxldCBnZXREZXZpY2VzU3R1YjtcblxuICBiZWZvcmVFYWNoKCgpID0+IHtcbiAgICBnZXREZXZpY2VzU3R1YiA9IHNpbm9uLnN0dWIobm9kZVNpbWN0bCwgJ2dldERldmljZXMnKTtcbiAgICBnZXREZXZpY2VzU3R1Yi5yZXR1cm5zKFByb21pc2UucmVzb2x2ZShkZXZpY2VzKSk7XG4gIH0pO1xuICBhZnRlckVhY2goKCkgPT4ge1xuICAgIG5vZGVTaW1jdGwuZ2V0RGV2aWNlcy5yZXN0b3JlKCk7XG4gIH0pO1xuXG4gIGl0KCdnZXRBbGxVZGlkcycsIGFzeW5jICgpID0+IHtcbiAgICBsZXQgdWRpZHMgPSBhd2FpdCBnZXRBbGxVZGlkcygpO1xuICAgIGZvciAobGV0IHVkaWQgaW4gdWRpZHMpIHtcbiAgICAgIHVkaWQuc2hvdWxkLmJlLmEoJ3N0cmluZycpO1xuICAgIH1cbiAgICB1ZGlkcy5sZW5ndGguc2hvdWxkLmVxdWFsKDI2KTtcbiAgfSk7XG59KTtcbiJdfQ==