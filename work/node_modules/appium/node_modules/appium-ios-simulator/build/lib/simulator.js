'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _simulatorXcode6 = require('./simulator-xcode-6');

var _simulatorXcode62 = _interopRequireDefault(_simulatorXcode6);

var _simulatorXcode7 = require('./simulator-xcode-7');

var _simulatorXcode72 = _interopRequireDefault(_simulatorXcode7);

var _simulatorXcode73 = require('./simulator-xcode-7.3');

var _simulatorXcode732 = _interopRequireDefault(_simulatorXcode73);

var _utils = require('./utils');

var _appiumXcode = require('appium-xcode');

var _appiumXcode2 = _interopRequireDefault(_appiumXcode);

var _logger = require('./logger');

var _logger2 = _interopRequireDefault(_logger);

function handleUnsupportedXcode(xcodeVersion) {
  if (xcodeVersion.major < 6) {
    throw new Error('Tried to use an iOS simulator with xcode ' + ('version ' + xcodeVersion.versionString + ' but only Xcode version ') + '6.0.0 and up are supported');
  } else if (xcodeVersion.major >= 8) {
    throw new Error('Xcode version ' + xcodeVersion + ' is ' + 'not yet supported');
  }
}

function getSimulator(udid) {
  var xcodeVersion;
  return _regeneratorRuntime.async(function getSimulator$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(_appiumXcode2['default'].getVersion(true));

      case 2:
        xcodeVersion = context$1$0.sent;
        context$1$0.next = 5;
        return _regeneratorRuntime.awrap((0, _utils.simExists)(udid));

      case 5:
        if (context$1$0.sent) {
          context$1$0.next = 7;
          break;
        }

        throw new Error('No sim found with udid ' + udid);

      case 7:

        handleUnsupportedXcode(xcodeVersion);

        _logger2['default'].info('Constructing iOS simulator for Xcode version ' + xcodeVersion.versionString);

        if (!(xcodeVersion.major === 6)) {
          context$1$0.next = 13;
          break;
        }

        return context$1$0.abrupt('return', new _simulatorXcode62['default'](udid, xcodeVersion));

      case 13:
        if (!(xcodeVersion.major === 7)) {
          context$1$0.next = 19;
          break;
        }

        if (!(xcodeVersion.minor < 3)) {
          context$1$0.next = 18;
          break;
        }

        return context$1$0.abrupt('return', new _simulatorXcode72['default'](udid, xcodeVersion));

      case 18:
        return context$1$0.abrupt('return', new _simulatorXcode732['default'](udid, xcodeVersion));

      case 19:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

function getDeviceString(opts) {
  var xcodeVersion;
  return _regeneratorRuntime.async(function getDeviceString$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(_appiumXcode2['default'].getVersion(true));

      case 2:
        xcodeVersion = context$1$0.sent;

        handleUnsupportedXcode(xcodeVersion);

        if (!(xcodeVersion.major === 7)) {
          context$1$0.next = 9;
          break;
        }

        _logger2['default'].info('Retrieving device name string for Xcode version ' + xcodeVersion.versionString);
        return context$1$0.abrupt('return', _simulatorXcode72['default'].getDeviceString(opts));

      case 9:
        if (!(xcodeVersion.major === 6)) {
          context$1$0.next = 12;
          break;
        }

        _logger2['default'].info('Retrieving device name string for Xcode version ' + xcodeVersion.versionString);
        return context$1$0.abrupt('return', _simulatorXcode62['default'].getDeviceString(opts));

      case 12:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

exports.getSimulator = getSimulator;
exports.getDeviceString = getDeviceString;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9zaW11bGF0b3IuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OzsrQkFBNEIscUJBQXFCOzs7OytCQUNyQixxQkFBcUI7Ozs7Z0NBQ3BCLHVCQUF1Qjs7OztxQkFDMUIsU0FBUzs7MkJBQ2pCLGNBQWM7Ozs7c0JBQ2hCLFVBQVU7Ozs7QUFHMUIsU0FBUyxzQkFBc0IsQ0FBRSxZQUFZLEVBQUU7QUFDN0MsTUFBSSxZQUFZLENBQUMsS0FBSyxHQUFHLENBQUMsRUFBRTtBQUMxQixVQUFNLElBQUksS0FBSyxDQUFDLDREQUNXLFlBQVksQ0FBQyxhQUFhLDhCQUEwQiwrQkFDbkMsQ0FBQyxDQUFDO0dBQy9DLE1BQU0sSUFBSSxZQUFZLENBQUMsS0FBSyxJQUFJLENBQUMsRUFBRTtBQUNsQyxVQUFNLElBQUksS0FBSyxDQUFDLG1CQUFpQixZQUFZLCtCQUNWLENBQUMsQ0FBQztHQUN0QztDQUNGOztBQUVELFNBQWUsWUFBWSxDQUFFLElBQUk7TUFDM0IsWUFBWTs7Ozs7eUNBQVMseUJBQU0sVUFBVSxDQUFDLElBQUksQ0FBQzs7O0FBQTNDLG9CQUFZOzt5Q0FFTCxzQkFBVSxJQUFJLENBQUM7Ozs7Ozs7O2NBQ2xCLElBQUksS0FBSyw2QkFBMkIsSUFBSSxDQUFHOzs7O0FBR25ELDhCQUFzQixDQUFDLFlBQVksQ0FBQyxDQUFDOztBQUVyQyw0QkFBSSxJQUFJLG1EQUFpRCxZQUFZLENBQUMsYUFBYSxDQUFHLENBQUM7O2NBQ25GLFlBQVksQ0FBQyxLQUFLLEtBQUssQ0FBQyxDQUFBOzs7Ozs0Q0FDbkIsaUNBQW9CLElBQUksRUFBRSxZQUFZLENBQUM7OztjQUNyQyxZQUFZLENBQUMsS0FBSyxLQUFLLENBQUMsQ0FBQTs7Ozs7Y0FDN0IsWUFBWSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUE7Ozs7OzRDQUNqQixpQ0FBb0IsSUFBSSxFQUFFLFlBQVksQ0FBQzs7OzRDQUV2QyxrQ0FBcUIsSUFBSSxFQUFFLFlBQVksQ0FBQzs7Ozs7OztDQUdwRDs7QUFFRCxTQUFlLGVBQWUsQ0FBRSxJQUFJO01BQzlCLFlBQVk7Ozs7O3lDQUFTLHlCQUFNLFVBQVUsQ0FBQyxJQUFJLENBQUM7OztBQUEzQyxvQkFBWTs7QUFFaEIsOEJBQXNCLENBQUMsWUFBWSxDQUFDLENBQUM7O2NBRWpDLFlBQVksQ0FBQyxLQUFLLEtBQUssQ0FBQyxDQUFBOzs7OztBQUMxQiw0QkFBSSxJQUFJLHNEQUFvRCxZQUFZLENBQUMsYUFBYSxDQUFHLENBQUM7NENBQ25GLDZCQUFnQixlQUFlLENBQUMsSUFBSSxDQUFDOzs7Y0FDbkMsWUFBWSxDQUFDLEtBQUssS0FBSyxDQUFDLENBQUE7Ozs7O0FBQ2pDLDRCQUFJLElBQUksc0RBQW9ELFlBQVksQ0FBQyxhQUFhLENBQUcsQ0FBQzs0Q0FDbkYsNkJBQWdCLGVBQWUsQ0FBQyxJQUFJLENBQUM7Ozs7Ozs7Q0FFL0M7O1FBRVEsWUFBWSxHQUFaLFlBQVk7UUFBRSxlQUFlLEdBQWYsZUFBZSIsImZpbGUiOiJsaWIvc2ltdWxhdG9yLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNpbXVsYXRvclhjb2RlNiBmcm9tICcuL3NpbXVsYXRvci14Y29kZS02JztcbmltcG9ydCBTaW11bGF0b3JYY29kZTcgZnJvbSAnLi9zaW11bGF0b3IteGNvZGUtNyc7XG5pbXBvcnQgU2ltdWxhdG9yWGNvZGU3MyBmcm9tICcuL3NpbXVsYXRvci14Y29kZS03LjMnO1xuaW1wb3J0IHsgc2ltRXhpc3RzIH0gZnJvbSAnLi91dGlscyc7XG5pbXBvcnQgeGNvZGUgZnJvbSAnYXBwaXVtLXhjb2RlJztcbmltcG9ydCBsb2cgZnJvbSAnLi9sb2dnZXInO1xuXG5cbmZ1bmN0aW9uIGhhbmRsZVVuc3VwcG9ydGVkWGNvZGUgKHhjb2RlVmVyc2lvbikge1xuICBpZiAoeGNvZGVWZXJzaW9uLm1ham9yIDwgNikge1xuICAgIHRocm93IG5ldyBFcnJvcihgVHJpZWQgdG8gdXNlIGFuIGlPUyBzaW11bGF0b3Igd2l0aCB4Y29kZSBgICtcbiAgICAgICAgICAgICAgICAgICAgYHZlcnNpb24gJHt4Y29kZVZlcnNpb24udmVyc2lvblN0cmluZ30gYnV0IG9ubHkgWGNvZGUgdmVyc2lvbiBgICtcbiAgICAgICAgICAgICAgICAgICAgYDYuMC4wIGFuZCB1cCBhcmUgc3VwcG9ydGVkYCk7XG4gIH0gZWxzZSBpZiAoeGNvZGVWZXJzaW9uLm1ham9yID49IDgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFhjb2RlIHZlcnNpb24gJHt4Y29kZVZlcnNpb259IGlzIGAgK1xuICAgICAgICAgICAgICAgICAgICBgbm90IHlldCBzdXBwb3J0ZWRgKTtcbiAgfVxufVxuXG5hc3luYyBmdW5jdGlvbiBnZXRTaW11bGF0b3IgKHVkaWQpIHtcbiAgbGV0IHhjb2RlVmVyc2lvbiA9IGF3YWl0IHhjb2RlLmdldFZlcnNpb24odHJ1ZSk7XG5cbiAgaWYgKCFhd2FpdCBzaW1FeGlzdHModWRpZCkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYE5vIHNpbSBmb3VuZCB3aXRoIHVkaWQgJHt1ZGlkfWApO1xuICB9XG5cbiAgaGFuZGxlVW5zdXBwb3J0ZWRYY29kZSh4Y29kZVZlcnNpb24pO1xuXG4gIGxvZy5pbmZvKGBDb25zdHJ1Y3RpbmcgaU9TIHNpbXVsYXRvciBmb3IgWGNvZGUgdmVyc2lvbiAke3hjb2RlVmVyc2lvbi52ZXJzaW9uU3RyaW5nfWApO1xuICBpZiAoeGNvZGVWZXJzaW9uLm1ham9yID09PSA2KSB7XG4gICAgcmV0dXJuIG5ldyBTaW11bGF0b3JYY29kZTYodWRpZCwgeGNvZGVWZXJzaW9uKTtcbiAgfSBlbHNlIGlmICh4Y29kZVZlcnNpb24ubWFqb3IgPT09IDcpIHtcbiAgICBpZiAoeGNvZGVWZXJzaW9uLm1pbm9yIDwgMykge1xuICAgICAgcmV0dXJuIG5ldyBTaW11bGF0b3JYY29kZTcodWRpZCwgeGNvZGVWZXJzaW9uKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG5ldyBTaW11bGF0b3JYY29kZTczKHVkaWQsIHhjb2RlVmVyc2lvbik7XG4gICAgfVxuICB9XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGdldERldmljZVN0cmluZyAob3B0cykge1xuICBsZXQgeGNvZGVWZXJzaW9uID0gYXdhaXQgeGNvZGUuZ2V0VmVyc2lvbih0cnVlKTtcblxuICBoYW5kbGVVbnN1cHBvcnRlZFhjb2RlKHhjb2RlVmVyc2lvbik7XG5cbiAgaWYgKHhjb2RlVmVyc2lvbi5tYWpvciA9PT0gNykge1xuICAgIGxvZy5pbmZvKGBSZXRyaWV2aW5nIGRldmljZSBuYW1lIHN0cmluZyBmb3IgWGNvZGUgdmVyc2lvbiAke3hjb2RlVmVyc2lvbi52ZXJzaW9uU3RyaW5nfWApO1xuICAgIHJldHVybiBTaW11bGF0b3JYY29kZTcuZ2V0RGV2aWNlU3RyaW5nKG9wdHMpO1xuICB9IGVsc2UgaWYgKHhjb2RlVmVyc2lvbi5tYWpvciA9PT0gNikge1xuICAgIGxvZy5pbmZvKGBSZXRyaWV2aW5nIGRldmljZSBuYW1lIHN0cmluZyBmb3IgWGNvZGUgdmVyc2lvbiAke3hjb2RlVmVyc2lvbi52ZXJzaW9uU3RyaW5nfWApO1xuICAgIHJldHVybiBTaW11bGF0b3JYY29kZTYuZ2V0RGV2aWNlU3RyaW5nKG9wdHMpO1xuICB9XG59XG5cbmV4cG9ydCB7IGdldFNpbXVsYXRvciwgZ2V0RGV2aWNlU3RyaW5nIH07XG4iXX0=