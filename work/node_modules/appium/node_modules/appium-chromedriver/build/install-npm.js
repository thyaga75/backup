#!/usr/bin/env node
'use strict';

var fs = require('fs'),
    path = require('path');

function waitForDeps(cb) {
  // see if we can import the necessary code
  // try it a ridiculous (but finite) number of times
  var i = 0;
  function check() {
    i++;
    try {
      require('./build/lib/install');
      cb();
    } catch (err) {
      console.warn('Error trying to install Chromedriver binary. Waiting and trying again.');
      if (i <= 200) {
        setTimeout(check, 1000);
      } else {
        cb('Could not import install module: ' + err);
      }
    }
  }
  check();
}

if (require.main === module) {
  // check if cur dir exists
  var installScript = path.resolve(__dirname, 'build', 'lib', 'install.js');
  waitForDeps(function (err) {
    if (err) {
      console.warn("Unable to import install script. Re-run `install appium-chromedriver` manually.");
      return;
    }
    fs.stat(installScript, function (err) {
      if (err) {
        console.warn("NOTE: Run 'gulp transpile' before using");
        return;
      }
      require('./build/lib/install').doInstall()['catch'](function (err) {
        console.error(err.stack ? err.stack : err);
        process.exit(1);
      });
    });
  });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluc3RhbGwtbnBtLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRUEsSUFBSSxFQUFFLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQztJQUNsQixJQUFJLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDOztBQUczQixTQUFTLFdBQVcsQ0FBRSxFQUFFLEVBQUU7OztBQUd4QixNQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDVixXQUFTLEtBQUssR0FBSTtBQUNoQixLQUFDLEVBQUUsQ0FBQztBQUNKLFFBQUk7QUFDRixhQUFPLENBQUMscUJBQXFCLENBQUMsQ0FBQztBQUMvQixRQUFFLEVBQUUsQ0FBQztLQUNOLENBQUMsT0FBTyxHQUFHLEVBQUU7QUFDWixhQUFPLENBQUMsSUFBSSxDQUFDLHdFQUF3RSxDQUFDLENBQUM7QUFDdkYsVUFBSSxDQUFDLElBQUksR0FBRyxFQUFFO0FBQ1osa0JBQVUsQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7T0FDekIsTUFBTTtBQUNMLFVBQUUsQ0FBQyxtQ0FBbUMsR0FBRyxHQUFHLENBQUMsQ0FBQztPQUMvQztLQUNGO0dBQ0Y7QUFDRCxPQUFLLEVBQUUsQ0FBQztDQUNUOztBQUVELElBQUksT0FBTyxDQUFDLElBQUksS0FBSyxNQUFNLEVBQUU7O0FBRTNCLE1BQUksYUFBYSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsWUFBWSxDQUFDLENBQUM7QUFDMUUsYUFBVyxDQUFDLFVBQVUsR0FBRyxFQUFFO0FBQ3pCLFFBQUksR0FBRyxFQUFFO0FBQ1AsYUFBTyxDQUFDLElBQUksQ0FBQyxpRkFBaUYsQ0FBQyxDQUFDO0FBQ2hHLGFBQU87S0FDUjtBQUNELE1BQUUsQ0FBQyxJQUFJLENBQUMsYUFBYSxFQUFFLFVBQVUsR0FBRyxFQUFFO0FBQ3BDLFVBQUksR0FBRyxFQUFFO0FBQ1AsZUFBTyxDQUFDLElBQUksQ0FBQyx5Q0FBeUMsQ0FBQyxDQUFDO0FBQ3hELGVBQU87T0FDUjtBQUNELGFBQU8sQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLFNBQVMsRUFBRSxTQUFNLENBQUMsVUFBVSxHQUFHLEVBQUU7QUFDOUQsZUFBTyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsS0FBSyxHQUFHLEdBQUcsQ0FBQyxLQUFLLEdBQUcsR0FBRyxDQUFDLENBQUM7QUFDM0MsZUFBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztPQUNqQixDQUFDLENBQUM7S0FDSixDQUFDLENBQUM7R0FDSixDQUFDLENBQUM7Q0FDSiIsImZpbGUiOiJpbnN0YWxsLW5wbS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuXG52YXIgZnMgPSByZXF1aXJlKCdmcycpXG4gICwgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcblxuXG5mdW5jdGlvbiB3YWl0Rm9yRGVwcyAoY2IpIHtcbiAgLy8gc2VlIGlmIHdlIGNhbiBpbXBvcnQgdGhlIG5lY2Vzc2FyeSBjb2RlXG4gIC8vIHRyeSBpdCBhIHJpZGljdWxvdXMgKGJ1dCBmaW5pdGUpIG51bWJlciBvZiB0aW1lc1xuICB2YXIgaSA9IDA7XG4gIGZ1bmN0aW9uIGNoZWNrICgpIHtcbiAgICBpKys7XG4gICAgdHJ5IHtcbiAgICAgIHJlcXVpcmUoJy4vYnVpbGQvbGliL2luc3RhbGwnKTtcbiAgICAgIGNiKCk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBjb25zb2xlLndhcm4oJ0Vycm9yIHRyeWluZyB0byBpbnN0YWxsIENocm9tZWRyaXZlciBiaW5hcnkuIFdhaXRpbmcgYW5kIHRyeWluZyBhZ2Fpbi4nKTtcbiAgICAgIGlmIChpIDw9IDIwMCkge1xuICAgICAgICBzZXRUaW1lb3V0KGNoZWNrLCAxMDAwKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNiKCdDb3VsZCBub3QgaW1wb3J0IGluc3RhbGwgbW9kdWxlOiAnICsgZXJyKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgY2hlY2soKTtcbn1cblxuaWYgKHJlcXVpcmUubWFpbiA9PT0gbW9kdWxlKSB7XG4gIC8vIGNoZWNrIGlmIGN1ciBkaXIgZXhpc3RzXG4gIHZhciBpbnN0YWxsU2NyaXB0ID0gcGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJ2J1aWxkJywgJ2xpYicsICdpbnN0YWxsLmpzJyk7XG4gIHdhaXRGb3JEZXBzKGZ1bmN0aW9uIChlcnIpIHtcbiAgICBpZiAoZXJyKSB7XG4gICAgICBjb25zb2xlLndhcm4oXCJVbmFibGUgdG8gaW1wb3J0IGluc3RhbGwgc2NyaXB0LiBSZS1ydW4gYGluc3RhbGwgYXBwaXVtLWNocm9tZWRyaXZlcmAgbWFudWFsbHkuXCIpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBmcy5zdGF0KGluc3RhbGxTY3JpcHQsIGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgY29uc29sZS53YXJuKFwiTk9URTogUnVuICdndWxwIHRyYW5zcGlsZScgYmVmb3JlIHVzaW5nXCIpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICByZXF1aXJlKCcuL2J1aWxkL2xpYi9pbnN0YWxsJykuZG9JbnN0YWxsKCkuY2F0Y2goZnVuY3Rpb24gKGVycikge1xuICAgICAgICBjb25zb2xlLmVycm9yKGVyci5zdGFjayA/IGVyci5zdGFjayA6IGVycik7XG4gICAgICAgIHByb2Nlc3MuZXhpdCgxKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9KTtcbn1cbiJdfQ==