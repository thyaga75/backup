'use strict';

var _getIterator = require('babel-runtime/core-js/get-iterator')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _mobileJsonWireProtocol = require('mobile-json-wire-protocol');

var commands = {},
    helpers = {},
    extensions = {};

helpers.getElements = function (elIds) {
  var _this = this;

  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = _getIterator(elIds), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var elId = _step.value;

      if (!_lodash2['default'].has(this.elMap, elId)) {
        throw new _mobileJsonWireProtocol.errors.StaleElementReferenceError();
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator['return']) {
        _iterator['return']();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return elIds.map(function (e) {
    return _this.elMap[e];
  });
};

helpers.getElement = function (elId) {
  return this.getElements([elId])[0];
};

commands.getName = function callee$0$0(elementId) {
  var el;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        el = this.getElement(elementId);
        return context$1$0.abrupt('return', el.tagName);

      case 2:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.elementDisplayed = function callee$0$0(elementId) {
  var el;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        el = this.getElement(elementId);
        return context$1$0.abrupt('return', el.isVisible());

      case 2:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.elementEnabled = function callee$0$0(elementId) {
  var el;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        el = this.getElement(elementId);
        return context$1$0.abrupt('return', el.isEnabled());

      case 2:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.elementSelected = function callee$0$0(elementId) {
  var el;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        el = this.getElement(elementId);
        return context$1$0.abrupt('return', el.isSelected());

      case 2:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.setValue = function callee$0$0(keys, elementId) {
  var value, el;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        value = keys;

        if (keys instanceof Array) {
          value = keys.join("");
        }
        el = this.getElement(elementId);

        if (!(el.type !== "MockInputField")) {
          context$1$0.next = 5;
          break;
        }

        throw new _mobileJsonWireProtocol.errors.InvalidElementStateError();

      case 5:
        el.setAttr('value', value);

      case 6:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.getText = function callee$0$0(elementId) {
  var el;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        el = this.getElement(elementId);
        return context$1$0.abrupt('return', el.getAttr('value'));

      case 2:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.clear = function callee$0$0(elementId) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(this.setValue('', elementId));

      case 2:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.click = function callee$0$0(elementId) {
  var el;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        this.assertNoAlert();
        el = this.getElement(elementId);

        if (el.isVisible()) {
          context$1$0.next = 4;
          break;
        }

        throw new _mobileJsonWireProtocol.errors.InvalidElementStateError();

      case 4:
        el.click();
        this.focusedElId = elementId;

      case 6:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.getAttribute = function callee$0$0(attr, elementId) {
  var el;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        el = this.getElement(elementId);
        return context$1$0.abrupt('return', el.getAttr(attr));

      case 2:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.getLocation = function (elementId) {
  var el = this.getElement(elementId);
  return el.getLocation();
};

commands.getSize = function (elementId) {
  var el = this.getElement(elementId);
  return el.getSize();
};

commands.equalsElement = function (el1Id, el2Id) {
  var el1 = this.getElement(el1Id);
  var el2 = this.getElement(el2Id);
  return el1.equals(el2);
};

commands.getLocationInView = commands.getLocation;

commands.getCssProperty = function callee$0$0(prop, elementId) {
  var el;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        this.assertWebviewContext();
        el = this.getElement(elementId);
        return context$1$0.abrupt('return', el.getCss(prop));

      case 3:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

_Object$assign(extensions, commands, helpers);
exports.commands = commands;
exports.helpers = helpers;
exports['default'] = extensions;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb21tYW5kcy9lbGVtZW50LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O3NCQUFjLFFBQVE7Ozs7c0NBQ0MsMkJBQTJCOztBQUVsRCxJQUFJLFFBQVEsR0FBRyxFQUFFO0lBQUUsT0FBTyxHQUFHLEVBQUU7SUFBRSxVQUFVLEdBQUcsRUFBRSxDQUFDOztBQUVqRCxPQUFPLENBQUMsV0FBVyxHQUFHLFVBQVUsS0FBSyxFQUFFOzs7Ozs7OztBQUNyQyxzQ0FBaUIsS0FBSyw0R0FBRTtVQUFmLElBQUk7O0FBQ1gsVUFBSSxDQUFDLG9CQUFFLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxFQUFFO0FBQzVCLGNBQU0sSUFBSSwrQkFBTywwQkFBMEIsRUFBRSxDQUFDO09BQy9DO0tBQ0Y7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDRCxTQUFPLEtBQUssQ0FBQyxHQUFHLENBQUMsVUFBQyxDQUFDO1dBQUssTUFBSyxLQUFLLENBQUMsQ0FBQyxDQUFDO0dBQUEsQ0FBQyxDQUFDO0NBQ3hDLENBQUM7O0FBRUYsT0FBTyxDQUFDLFVBQVUsR0FBRyxVQUFVLElBQUksRUFBRTtBQUNuQyxTQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0NBQ3BDLENBQUM7O0FBRUYsUUFBUSxDQUFDLE9BQU8sR0FBRyxvQkFBZ0IsU0FBUztNQUN0QyxFQUFFOzs7O0FBQUYsVUFBRSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDOzRDQUM1QixFQUFFLENBQUMsT0FBTzs7Ozs7OztDQUNsQixDQUFDOztBQUVGLFFBQVEsQ0FBQyxnQkFBZ0IsR0FBRyxvQkFBZ0IsU0FBUztNQUMvQyxFQUFFOzs7O0FBQUYsVUFBRSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDOzRDQUM1QixFQUFFLENBQUMsU0FBUyxFQUFFOzs7Ozs7O0NBQ3RCLENBQUM7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TyxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0NBQ3hCLENBQUM7O0FBRUYsUUFBUSxDQUFDLGlCQUFpQixHQUFHLFFBQVEsQ0FBQyxXQUFXLENBQUM7O0FBRWxELFFBQVEsQ0FBQyxjQUFjLEdBQUcsb0JBQWdCLElBQUksRUFBRSxTQUFTO01BRW5ELEVBQUU7Ozs7QUFETixZQUFJLENBQUMsb0JBQW9CLEVBQUUsQ0FBQztBQUN4QixVQUFFLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUM7NENBQzVCLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDOzs7Ozs7O0NBQ3ZCLENBQUM7O0FBRUYsZUFBYyxVQUFVLEVBQUUsUUFBUSxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQ3BDLFFBQVEsR0FBUixRQUFRO1FBQUUsT0FBTyxHQUFQLE9BQU87cUJBQ1gsVUFBVSIsImZpbGUiOiJsaWIvY29tbWFuZHMvZWxlbWVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgeyBlcnJvcnMgfSBmcm9tICdtb2JpbGUtanNvbi13aXJlLXByb3RvY29sJztcblxubGV0IGNvbW1hbmRzID0ge30sIGhlbHBlcnMgPSB7fSwgZXh0ZW5zaW9ucyA9IHt9O1xuXG5oZWxwZXJzLmdldEVsZW1lbnRzID0gZnVuY3Rpb24gKGVsSWRzKSB7XG4gIGZvciAobGV0IGVsSWQgb2YgZWxJZHMpIHtcbiAgICBpZiAoIV8uaGFzKHRoaXMuZWxNYXAsIGVsSWQpKSB7XG4gICAgICB0aHJvdyBuZXcgZXJyb3JzLlN0YWxlRWxlbWVudFJlZmVyZW5jZUVycm9yKCk7XG4gICAgfVxuICB9XG4gIHJldHVybiBlbElkcy5tYXAoKGUpID0+IHRoaXMuZWxNYXBbZV0pO1xufTtcblxuaGVscGVycy5nZXRFbGVtZW50ID0gZnVuY3Rpb24gKGVsSWQpIHtcbiAgcmV0dXJuIHRoaXMuZ2V0RWxlbWVudHMoW2VsSWRdKVswXTtcbn07XG5cbmNvbW1hbmRzLmdldE5hbWUgPSBhc3luYyBmdW5jdGlvbiAoZWxlbWVudElkKSB7XG4gIGxldCBlbCA9IHRoaXMuZ2V0RWxlbWVudChlbGVtZW50SWQpO1xuICByZXR1cm4gZWwudGFnTmFtZTtcbn07XG5cbmNvbW1hbmRzLmVsZW1lbnREaXNwbGF5ZWQgPSBhc3luYyBmdW5jdGlvbiAoZWxlbWVudElkKSB7XG4gIGxldCBlbCA9IHRoaXMuZ2V0RWxlbWVudChlbGVtZW50SWQpO1xuICByZXR1cm4gZWwuaXNWaXNpYmxlKCk7XG59O1xuXG5jb21tYW5kcy5lbGVtZW50RW5hYmxlZCA9IGFzeW5jIGZ1bmN0aW9uIChlbGVtZW50SWQpIHtcbiAgbGV0IGVsID0gdGhpcy5nZXRFbGVtZW50KGVsZW1lbnRJZCk7XG4gIHJldHVybiBlbC5pc0VuYWJsZWQoKTtcbn07XG5cbmNvbW1hbmRzLmVsZW1lbnRTZWxlY3RlZCA9IGFzeW5jIGZ1bmN0aW9uIChlbGVtZW50SWQpIHtcbiAgbGV0IGVsID0gdGhpcy5nZXRFbGVtZW50KGVsZW1lbnRJZCk7XG4gIHJldHVybiBlbC5pc1NlbGVjdGVkKCk7XG59O1xuXG5jb21tYW5kcy5zZXRWYWx1ZSA9IGFzeW5jIGZ1bmN0aW9uIChrZXlzLCBlbGVtZW50SWQpIHtcbiAgbGV0IHZhbHVlID0ga2V5cztcbiAgaWYgKGtleXMgaW5zdGFuY2VvZiBBcnJheSkge1xuICAgIHZhbHVlID0ga2V5cy5qb2luKFwiXCIpO1xuICB9XG4gIGxldCBlbCA9IHRoaXMuZ2V0RWxlbWVudChlbGVtZW50SWQpO1xuICBpZiAoZWwudHlwZSAhPT0gXCJNb2NrSW5wdXRGaWVsZFwiKSB7XG4gICAgdGhyb3cgbmV3IGVycm9ycy5JbnZhbGlkRWxlbWVudFN0YXRlRXJyb3IoKTtcbiAgfVxuICBlbC5zZXRBdHRyKCd2YWx1ZScsIHZhbHVlKTtcbn07XG5cbmNvbW1hbmRzLmdldFRleHQgPSBhc3luYyBmdW5jdGlvbiAoZWxlbWVudElkKSB7XG4gIGxldCBlbCA9IHRoaXMuZ2V0RWxlbWVudChlbGVtZW50SWQpO1xuICByZXR1cm4gZWwuZ2V0QXR0cigndmFsdWUnKTtcbn07XG5cbmNvbW1hbmRzLmNsZWFyID0gYXN5bmMgZnVuY3Rpb24gKGVsZW1lbnRJZCkge1xuICBhd2FpdCB0aGlzLnNldFZhbHVlKCcnLCBlbGVtZW50SWQpO1xufTtcblxuY29tbWFuZHMuY2xpY2sgPSBhc3luYyBmdW5jdGlvbiAoZWxlbWVudElkKSB7XG4gIHRoaXMuYXNzZXJ0Tm9BbGVydCgpO1xuICBsZXQgZWwgPSB0aGlzLmdldEVsZW1lbnQoZWxlbWVudElkKTtcbiAgaWYgKCFlbC5pc1Zpc2libGUoKSkge1xuICAgIHRocm93IG5ldyBlcnJvcnMuSW52YWxpZEVsZW1lbnRTdGF0ZUVycm9yKCk7XG4gIH1cbiAgZWwuY2xpY2soKTtcbiAgdGhpcy5mb2N1c2VkRWxJZCA9IGVsZW1lbnRJZDtcbn07XG5cbmNvbW1hbmRzLmdldEF0dHJpYnV0ZSA9IGFzeW5jIGZ1bmN0aW9uIChhdHRyLCBlbGVtZW50SWQpIHtcbiAgbGV0IGVsID0gdGhpcy5nZXRFbGVtZW50KGVsZW1lbnRJZCk7XG4gIHJldHVybiBlbC5nZXRBdHRyKGF0dHIpO1xufTtcblxuY29tbWFuZHMuZ2V0TG9jYXRpb24gPSBmdW5jdGlvbiAoZWxlbWVudElkKSB7XG4gIGxldCBlbCA9IHRoaXMuZ2V0RWxlbWVudChlbGVtZW50SWQpO1xuICByZXR1cm4gZWwuZ2V0TG9jYXRpb24oKTtcbn07XG5cbmNvbW1hbmRzLmdldFNpemUgPSBmdW5jdGlvbiAoZWxlbWVudElkKSB7XG4gIGxldCBlbCA9IHRoaXMuZ2V0RWxlbWVudChlbGVtZW50SWQpO1xuICByZXR1cm4gZWwuZ2V0U2l6ZSgpO1xufTtcblxuY29tbWFuZHMuZXF1YWxzRWxlbWVudCA9IGZ1bmN0aW9uIChlbDFJZCwgZWwySWQpIHtcbiAgbGV0IGVsMSA9IHRoaXMuZ2V0RWxlbWVudChlbDFJZCk7XG4gIGxldCBlbDIgPSB0aGlzLmdldEVsZW1lbnQoZWwySWQpO1xuICByZXR1cm4gZWwxLmVxdWFscyhlbDIpO1xufTtcblxuY29tbWFuZHMuZ2V0TG9jYXRpb25JblZpZXcgPSBjb21tYW5kcy5nZXRMb2NhdGlvbjtcblxuY29tbWFuZHMuZ2V0Q3NzUHJvcGVydHkgPSBhc3luYyBmdW5jdGlvbiAocHJvcCwgZWxlbWVudElkKSB7XG4gIHRoaXMuYXNzZXJ0V2Vidmlld0NvbnRleHQoKTtcbiAgbGV0IGVsID0gdGhpcy5nZXRFbGVtZW50KGVsZW1lbnRJZCk7XG4gIHJldHVybiBlbC5nZXRDc3MocHJvcCk7XG59O1xuXG5PYmplY3QuYXNzaWduKGV4dGVuc2lvbnMsIGNvbW1hbmRzLCBoZWxwZXJzKTtcbmV4cG9ydCB7IGNvbW1hbmRzLCBoZWxwZXJzIH07XG5leHBvcnQgZGVmYXVsdCBleHRlbnNpb25zO1xuIl19