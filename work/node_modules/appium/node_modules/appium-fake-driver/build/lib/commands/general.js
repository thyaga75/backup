'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _mobileJsonWireProtocol = require('mobile-json-wire-protocol');

var commands = {},
    helpers = {},
    extensions = {};

commands.title = function callee$0$0() {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        this.assertWebviewContext();
        return context$1$0.abrupt('return', this.appModel.title);

      case 2:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.keys = function callee$0$0(value) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (this.focusedElId) {
          context$1$0.next = 2;
          break;
        }

        throw new _mobileJsonWireProtocol.errors.InvalidElementStateError();

      case 2:
        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(this.setValue(value, this.focusedElId));

      case 4:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.setGeoLocation = function callee$0$0(location) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        // TODO test this adequately once WD bug is fixed
        this.appModel.lat = location.latitude;
        this.appModel.long = location.longitude;

      case 2:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.getGeoLocation = function callee$0$0() {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        return context$1$0.abrupt('return', this.appModel.currentGeoLocation);

      case 1:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.getPageSource = function callee$0$0() {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        return context$1$0.abrupt('return', this.appModel.rawXml);

      case 1:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.getOrientation = function callee$0$0() {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        return context$1$0.abrupt('return', this.appModel.orientation);

      case 1:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.setOrientation = function callee$0$0(o) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (_lodash2['default'].contains(["LANDSCAPE", "PORTRAIT"], o)) {
          context$1$0.next = 2;
          break;
        }

        throw new _mobileJsonWireProtocol.errors.UnknownError("Orientation must be LANDSCAPE or PORTRAIT");

      case 2:
        this.appModel.orientation = o;

      case 3:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.getScreenshot = function callee$0$0() {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        return context$1$0.abrupt('return', this.appModel.getScreenshot());

      case 1:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.implicitWait = function callee$0$0(ms) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(this.timeouts('implicitWait', ms));

      case 2:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.asyncScriptTimeout = function callee$0$0(ms) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(this.timeouts('asyncScript', ms));

      case 2:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.timeouts = function callee$0$0(type, ms) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        this.appModel.timeouts[type] = ms;

      case 1:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

_Object$assign(extensions, commands, helpers);
exports.commands = commands;
exports.helpers = helpers;
exports['default'] = extensions;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb21tYW5kcy9nZW5lcmFsLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztzQkFBYyxRQUFROzs7O3NDQUNDLDJCQUEyQjs7QUFFbEQsSUFBSSxRQUFRLEdBQUcsRUFBRTtJQUFFLE9BQU8sR0FBRyxFQUFFO0lBQUUsVUFBVSxHQUFHLEVBQUUsQ0FBQzs7QUFFakQsUUFBUSxDQUFDLEtBQUssR0FBRzs7OztBQUNmLFlBQUksQ0FBQyxvQkFBb0IsRUFBRSxDQUFDOzRDQUNyQixJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUs7Ozs7Ozs7Q0FDM0IsQ0FBQzs7QUFFRixRQUFRLENBQUMsSUFBSSxHQUFHLG9CQUFnQixLQUFLOzs7O1lBQzlCLElBQUksQ0FBQyxXQUFXOzs7OztjQUNiLElBQUksK0JBQU8sd0JBQXdCLEVBQUU7Ozs7eUNBRXZDLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUM7Ozs7Ozs7Q0FDN0MsQ0FBQzs7QUFFRixRQUFRLENBQUMsY0FBYyxHQUFHLG9CQUFnQixRQUFROzs7OztBQUVoRCxZQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsR0FBRyxRQUFRLENBQUMsUUFBUSxDQUFDO0FBQ3RDLFlBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxHQUFHLFFBQVEsQ0FBQyxTQUFTLENBQUM7Ozs7Ozs7Q0FDekMsQ0FBQzs7QUFFRixRQUFRLENBQUMsY0FBYyxHQUFHOzs7OzRDQUNqQixJQUFJLENBQUMsUUFBUSxDQUFDLGtCQUFrQjs7Ozs7OztDQUN4QyxDQUFDOztBQUVGLFFBQVEsQ0FBQyxhQUFhLEdBQUc7Ozs7NENBQ2hCLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTTs7Ozs7OztDQUM1QixDQUFDOztBQUVGLFFBQVEsQ0FBQyxjQUFjLEdBQUc7Ozs7NENBQ2pCLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVzs7Ozs7OztDQUNqQyxDQUFDOztBQUVGLFFBQVEsQ0FBQyxjQUFjLEdBQUcsb0JBQWdCLENBQUM7Ozs7WUFDcEMsb0JBQUUsUUFBUSxDQUFDLENBQUMsV0FBVyxFQUFFLFVBQVUsQ0FBQyxFQUFFLENBQUMsQ0FBQzs7Ozs7Y0FDckMsSUFBSSwrQkFBTyxZQUFZLENBQUMsMkNBQTJDLENBQUM7OztBQUU1RSxZQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUM7Ozs7Ozs7Q0FDL0IsQ0FBQzs7QUFFRixRQUFRLENBQUMsYUFBYSxHQUFHOzs7OzRDQUNoQixJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsRUFBRTs7Ozs7OztDQUNyQyxDQUFDOztBQUVGLFFBQVEsQ0FBQyxZQUFZLEdBQUcsb0JBQWdCLEVBQUU7Ozs7O3lDQUNsQyxJQUFJLENBQUMsUUFBUSxDQUFDLGNBQWMsRUFBRSxFQUFFLENBQUM7Ozs7Ozs7Q0FDeEMsQ0FBQzs7QUFFRixRQUFRLENBQUMsa0JBQWtCLEdBQUcsb0JBQWdCLEVBQUU7Ozs7O3lDQUN4QyxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsRUFBRSxFQUFFLENBQUM7Ozs7Ozs7Q0FDdkMsQ0FBQzs7QUFFRixRQUFRLENBQUMsUUFBUSxHQUFHLG9CQUFnQixJQUFJLEVBQUUsRUFBRTs7OztBQUMxQyxZQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7Ozs7Ozs7Q0FDbkMsQ0FBQzs7QUFFRixlQUFjLFVBQVUsRUFBRSxRQUFRLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFDcEMsUUFBUSxHQUFSLFFBQVE7UUFBRSxPQUFPLEdBQVAsT0FBTztxQkFDWCxVQUFVIiwiZmlsZSI6ImxpYi9jb21tYW5kcy9nZW5lcmFsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCB7IGVycm9ycyB9IGZyb20gJ21vYmlsZS1qc29uLXdpcmUtcHJvdG9jb2wnO1xuXG5sZXQgY29tbWFuZHMgPSB7fSwgaGVscGVycyA9IHt9LCBleHRlbnNpb25zID0ge307XG5cbmNvbW1hbmRzLnRpdGxlID0gYXN5bmMgZnVuY3Rpb24gKCkge1xuICB0aGlzLmFzc2VydFdlYnZpZXdDb250ZXh0KCk7XG4gIHJldHVybiB0aGlzLmFwcE1vZGVsLnRpdGxlO1xufTtcblxuY29tbWFuZHMua2V5cyA9IGFzeW5jIGZ1bmN0aW9uICh2YWx1ZSkge1xuICBpZiAoIXRoaXMuZm9jdXNlZEVsSWQpIHtcbiAgICB0aHJvdyBuZXcgZXJyb3JzLkludmFsaWRFbGVtZW50U3RhdGVFcnJvcigpO1xuICB9XG4gIGF3YWl0IHRoaXMuc2V0VmFsdWUodmFsdWUsIHRoaXMuZm9jdXNlZEVsSWQpO1xufTtcblxuY29tbWFuZHMuc2V0R2VvTG9jYXRpb24gPSBhc3luYyBmdW5jdGlvbiAobG9jYXRpb24pIHtcbiAgLy8gVE9ETyB0ZXN0IHRoaXMgYWRlcXVhdGVseSBvbmNlIFdEIGJ1ZyBpcyBmaXhlZFxuICB0aGlzLmFwcE1vZGVsLmxhdCA9IGxvY2F0aW9uLmxhdGl0dWRlO1xuICB0aGlzLmFwcE1vZGVsLmxvbmcgPSBsb2NhdGlvbi5sb25naXR1ZGU7XG59O1xuXG5jb21tYW5kcy5nZXRHZW9Mb2NhdGlvbiA9IGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHRoaXMuYXBwTW9kZWwuY3VycmVudEdlb0xvY2F0aW9uO1xufTtcblxuY29tbWFuZHMuZ2V0UGFnZVNvdXJjZSA9IGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHRoaXMuYXBwTW9kZWwucmF3WG1sO1xufTtcblxuY29tbWFuZHMuZ2V0T3JpZW50YXRpb24gPSBhc3luYyBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzLmFwcE1vZGVsLm9yaWVudGF0aW9uO1xufTtcblxuY29tbWFuZHMuc2V0T3JpZW50YXRpb24gPSBhc3luYyBmdW5jdGlvbiAobykge1xuICBpZiAoIV8uY29udGFpbnMoW1wiTEFORFNDQVBFXCIsIFwiUE9SVFJBSVRcIl0sIG8pKSB7XG4gICAgdGhyb3cgbmV3IGVycm9ycy5Vbmtub3duRXJyb3IoXCJPcmllbnRhdGlvbiBtdXN0IGJlIExBTkRTQ0FQRSBvciBQT1JUUkFJVFwiKTtcbiAgfVxuICB0aGlzLmFwcE1vZGVsLm9yaWVudGF0aW9uID0gbztcbn07XG5cbmNvbW1hbmRzLmdldFNjcmVlbnNob3QgPSBhc3luYyBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzLmFwcE1vZGVsLmdldFNjcmVlbnNob3QoKTtcbn07XG5cbmNvbW1hbmRzLmltcGxpY2l0V2FpdCA9IGFzeW5jIGZ1bmN0aW9uIChtcykge1xuICBhd2FpdCB0aGlzLnRpbWVvdXRzKCdpbXBsaWNpdFdhaXQnLCBtcyk7XG59O1xuXG5jb21tYW5kcy5hc3luY1NjcmlwdFRpbWVvdXQgPSBhc3luYyBmdW5jdGlvbiAobXMpIHtcbiAgYXdhaXQgdGhpcy50aW1lb3V0cygnYXN5bmNTY3JpcHQnLCBtcyk7XG59O1xuXG5jb21tYW5kcy50aW1lb3V0cyA9IGFzeW5jIGZ1bmN0aW9uICh0eXBlLCBtcykge1xuICB0aGlzLmFwcE1vZGVsLnRpbWVvdXRzW3R5cGVdID0gbXM7XG59O1xuXG5PYmplY3QuYXNzaWduKGV4dGVuc2lvbnMsIGNvbW1hbmRzLCBoZWxwZXJzKTtcbmV4cG9ydCB7IGNvbW1hbmRzLCBoZWxwZXJzIH07XG5leHBvcnQgZGVmYXVsdCBleHRlbnNpb25zO1xuIl19