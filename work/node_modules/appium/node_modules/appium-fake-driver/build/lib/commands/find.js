'use strict';

var _slicedToArray = require('babel-runtime/helpers/sliced-to-array')['default'];

var _getIterator = require('babel-runtime/core-js/get-iterator')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _mobileJsonWireProtocol = require('mobile-json-wire-protocol');

var _fakeElement = require('../fake-element');

var commands = {},
    helpers = {},
    extensions = {};

helpers.getExistingElementForNode = function (node) {
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = _getIterator(_lodash2['default'].pairs(this.elMap)), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var _step$value = _slicedToArray(_step.value, 2);

      var id = _step$value[0];
      var el = _step$value[1];

      if (el.node === node) {
        return id;
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator['return']) {
        _iterator['return']();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return null;
};

helpers.wrapNewEl = function (obj) {
  // first check and see if we already have a ref to this element
  var existingElId = this.getExistingElementForNode(obj);
  if (existingElId) {
    return { ELEMENT: existingElId };
  }

  // otherwise add the element to the map
  this.maxElId++;
  this.elMap[this.maxElId.toString()] = new _fakeElement.FakeElement(obj, this.appModel);
  return { ELEMENT: this.maxElId.toString() };
};

helpers.findElOrEls = function callee$0$0(strategy, selector, mult, ctx) {
  var qMap, els, allEls, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, el;

  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        qMap = {
          'xpath': 'xpathQuery',
          'id': 'idQuery',
          'accessibility id': 'idQuery',
          'class name': 'classQuery',
          'tag name': 'classQuery'
        };

        if (_lodash2['default'].contains(_lodash2['default'].keys(qMap), strategy)) {
          context$1$0.next = 3;
          break;
        }

        throw new _mobileJsonWireProtocol.errors.UnknownCommandError();

      case 3:
        if (!(selector === "badsel")) {
          context$1$0.next = 5;
          break;
        }

        throw new _mobileJsonWireProtocol.errors.InvalidSelectorError();

      case 5:
        els = this.appModel[qMap[strategy]](selector, ctx);

        if (!els.length) {
          context$1$0.next = 34;
          break;
        }

        if (!mult) {
          context$1$0.next = 31;
          break;
        }

        allEls = [];
        _iteratorNormalCompletion2 = true;
        _didIteratorError2 = false;
        _iteratorError2 = undefined;
        context$1$0.prev = 12;

        for (_iterator2 = _getIterator(els); !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          el = _step2.value;

          allEls.push(this.wrapNewEl(el));
        }
        context$1$0.next = 20;
        break;

      case 16:
        context$1$0.prev = 16;
        context$1$0.t0 = context$1$0['catch'](12);
        _didIteratorError2 = true;
        _iteratorError2 = context$1$0.t0;

      case 20:
        context$1$0.prev = 20;
        context$1$0.prev = 21;

        if (!_iteratorNormalCompletion2 && _iterator2['return']) {
          _iterator2['return']();
        }

      case 23:
        context$1$0.prev = 23;

        if (!_didIteratorError2) {
          context$1$0.next = 26;
          break;
        }

        throw _iteratorError2;

      case 26:
        return context$1$0.finish(23);

      case 27:
        return context$1$0.finish(20);

      case 28:
        return context$1$0.abrupt('return', allEls);

      case 31:
        return context$1$0.abrupt('return', this.wrapNewEl(els[0]));

      case 32:
        context$1$0.next = 39;
        break;

      case 34:
        if (!mult) {
          context$1$0.next = 38;
          break;
        }

        return context$1$0.abrupt('return', []);

      case 38:
        throw new _mobileJsonWireProtocol.errors.NoSuchElementError();

      case 39:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[12, 16, 20, 28], [21,, 23, 27]]);
};

commands.findElement = function callee$0$0(strategy, selector) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        return context$1$0.abrupt('return', this.findElOrEls(strategy, selector, false));

      case 1:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.findElements = function callee$0$0(strategy, selector) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        return context$1$0.abrupt('return', this.findElOrEls(strategy, selector, true));

      case 1:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.findElementFromElement = function callee$0$0(strategy, selector, elementId) {
  var el;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        el = this.getElement(elementId);
        return context$1$0.abrupt('return', this.findElOrEls(strategy, selector, false, el.xmlFragment));

      case 2:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.findElementsFromElement = function callee$0$0(strategy, selector, elementId) {
  var el;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        el = this.getElement(elementId);
        return context$1$0.abrupt('return', this.findElOrEls(strategy, selector, true, el.xmlFragment));

      case 2:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

_Object$assign(extensions, commands, helpers);
exports.commands = commands;
exports.helpers = helpers;
exports['default'] = extensions;

// TODO this error checking should probably be part of MJSONWP?
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb21tYW5kcy9maW5kLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7c0JBQWMsUUFBUTs7OztzQ0FDQywyQkFBMkI7OzJCQUN0QixpQkFBaUI7O0FBRTdDLElBQUksUUFBUSxHQUFHLEVBQUU7SUFBRSxPQUFPLEdBQUcsRUFBRTtJQUFFLFVBQVUsR0FBRyxFQUFFLENBQUM7O0FBRWpELE9BQU8sQ0FBQyx5QkFBeUIsR0FBRyxVQUFVLElBQUksRUFBRTs7Ozs7O0FBQ2xELHNDQUFxQixvQkFBRSxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyw0R0FBRTs7O1VBQWhDLEVBQUU7VUFBRSxFQUFFOztBQUNkLFVBQUksRUFBRSxDQUFDLElBQUksS0FBSyxJQUFJLEVBQUU7QUFDcEIsZUFBTyxFQUFFLENBQUM7T0FDWDtLQUNGOzs7Ozs7Ozs7Ozs7Ozs7O0FBQ0QsU0FBTyxJQUFJLENBQUM7Q0FDYixDQUFDOztBQUVGLE9BQU8sQ0FBQyxTQUFTLEdBQUcsVUFBVSxHQUFHLEVBQUU7O0FBRWpDLE1BQUksWUFBWSxHQUFHLElBQUksQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUN2RCxNQUFJLFlBQVksRUFBRTtBQUNoQixXQUFPLEVBQUMsT0FBTyxFQUFFLFlBQVksRUFBQyxDQUFDO0dBQ2hDOzs7QUFHRCxNQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7QUFDZixNQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLENBQUMsR0FBRyw2QkFBZ0IsR0FBRyxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUMxRSxTQUFPLEVBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLEVBQUMsQ0FBQztDQUMzQyxDQUFDOztBQUVGLE9BQU8sQ0FBQyxXQUFXLEdBQUcsb0JBQWdCLFFBQVEsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLEdBQUc7TUFDN0QsSUFBSSxFQWNKLEdBQUcsRUFHQyxNQUFNLHVGQUNELEVBQUU7Ozs7O0FBbEJYLFlBQUksR0FBRztBQUNULGlCQUFPLEVBQUUsWUFBWTtBQUNyQixjQUFJLEVBQUUsU0FBUztBQUNmLDRCQUFrQixFQUFFLFNBQVM7QUFDN0Isc0JBQVksRUFBRSxZQUFZO0FBQzFCLG9CQUFVLEVBQUUsWUFBWTtTQUN6Qjs7WUFFSSxvQkFBRSxRQUFRLENBQUMsb0JBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLFFBQVEsQ0FBQzs7Ozs7Y0FDL0IsSUFBSSwrQkFBTyxtQkFBbUIsRUFBRTs7O2NBRXBDLFFBQVEsS0FBSyxRQUFRLENBQUE7Ozs7O2NBQ2pCLElBQUksK0JBQU8sb0JBQW9CLEVBQUU7OztBQUVyQyxXQUFHLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUUsR0FBRyxDQUFDOzthQUNsRCxHQUFHLENBQUMsTUFBTTs7Ozs7YUFDUixJQUFJOzs7OztBQUNGLGNBQU0sR0FBRyxFQUFFOzs7Ozs7QUFDZix1Q0FBZSxHQUFHLHlHQUFFO0FBQVgsWUFBRTs7QUFDVCxnQkFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7U0FDakM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzRDQUNNLE1BQU07Ozs0Q0FFTixJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQzs7Ozs7OzthQUV0QixJQUFJOzs7Ozs0Q0FDTixFQUFFOzs7Y0FFSCxJQUFJLCtCQUFPLGtCQUFrQixFQUFFOzs7Ozs7O0NBRXhDLENBQUM7O0FBRUYsUUFBUSxDQUFDLFdBQVcsR0FBRyxvQkFBZ0IsUUFBUSxFQUFFLFFBQVE7Ozs7NENBQ2hELElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxFQUFFLFFBQVEsRUFBRSxLQUFLLENBQUM7Ozs7Ozs7Q0FDbkQsQ0FBQzs7QUFFRixRQUFRLENBQUMsWUFBWSxHQUFHLG9CQUFnQixRQUFRLEVBQUUsUUFBUTs7Ozs0Q0FDakQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQzs7Ozs7OztDQUNsRCxDQUFDOztBQUVGLFFBQVEsQ0FBQyxzQkFBc0IsR0FBRyxvQkFBZ0IsUUFBUSxFQUFFLFFBQVEsRUFBRSxTQUFTO01BQ3pFLEVBQUU7Ozs7QUFBRixVQUFFLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUM7NENBQzVCLElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsRUFBRSxDQUFDLFdBQVcsQ0FBQzs7Ozs7OztDQUNuRSxDQUFDOztBQUVGLFFBQVEsQ0FBQyx1QkFBdUIsR0FBRyxvQkFBZ0IsUUFBUSxFQUFFLFFBQVEsRUFBRSxTQUFTO01BQzFFLEVBQUU7Ozs7QUFBRixVQUFFLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUM7NENBQzVCLElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsRUFBRSxDQUFDLFdBQVcsQ0FBQzs7Ozs7OztDQUNsRSxDQUFDOztBQUVGLGVBQWMsVUFBVSxFQUFFLFFBQVEsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUNwQyxRQUFRLEdBQVIsUUFBUTtRQUFFLE9BQU8sR0FBUCxPQUFPO3FCQUNYLFVBQVUiLCJmaWxlIjoibGliL2NvbW1hbmRzL2ZpbmQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IHsgZXJyb3JzIH0gZnJvbSAnbW9iaWxlLWpzb24td2lyZS1wcm90b2NvbCc7XG5pbXBvcnQgeyBGYWtlRWxlbWVudCB9IGZyb20gJy4uL2Zha2UtZWxlbWVudCc7XG5cbmxldCBjb21tYW5kcyA9IHt9LCBoZWxwZXJzID0ge30sIGV4dGVuc2lvbnMgPSB7fTtcblxuaGVscGVycy5nZXRFeGlzdGluZ0VsZW1lbnRGb3JOb2RlID0gZnVuY3Rpb24gKG5vZGUpIHtcbiAgZm9yIChsZXQgW2lkLCBlbF0gb2YgXy5wYWlycyh0aGlzLmVsTWFwKSkge1xuICAgIGlmIChlbC5ub2RlID09PSBub2RlKSB7XG4gICAgICByZXR1cm4gaWQ7XG4gICAgfVxuICB9XG4gIHJldHVybiBudWxsO1xufTtcblxuaGVscGVycy53cmFwTmV3RWwgPSBmdW5jdGlvbiAob2JqKSB7XG4gIC8vIGZpcnN0IGNoZWNrIGFuZCBzZWUgaWYgd2UgYWxyZWFkeSBoYXZlIGEgcmVmIHRvIHRoaXMgZWxlbWVudFxuICBsZXQgZXhpc3RpbmdFbElkID0gdGhpcy5nZXRFeGlzdGluZ0VsZW1lbnRGb3JOb2RlKG9iaik7XG4gIGlmIChleGlzdGluZ0VsSWQpIHtcbiAgICByZXR1cm4ge0VMRU1FTlQ6IGV4aXN0aW5nRWxJZH07XG4gIH1cblxuICAvLyBvdGhlcndpc2UgYWRkIHRoZSBlbGVtZW50IHRvIHRoZSBtYXBcbiAgdGhpcy5tYXhFbElkKys7XG4gIHRoaXMuZWxNYXBbdGhpcy5tYXhFbElkLnRvU3RyaW5nKCldID0gbmV3IEZha2VFbGVtZW50KG9iaiwgdGhpcy5hcHBNb2RlbCk7XG4gIHJldHVybiB7RUxFTUVOVDogdGhpcy5tYXhFbElkLnRvU3RyaW5nKCl9O1xufTtcblxuaGVscGVycy5maW5kRWxPckVscyA9IGFzeW5jIGZ1bmN0aW9uIChzdHJhdGVneSwgc2VsZWN0b3IsIG11bHQsIGN0eCkge1xuICBsZXQgcU1hcCA9IHtcbiAgICAneHBhdGgnOiAneHBhdGhRdWVyeScsXG4gICAgJ2lkJzogJ2lkUXVlcnknLFxuICAgICdhY2Nlc3NpYmlsaXR5IGlkJzogJ2lkUXVlcnknLFxuICAgICdjbGFzcyBuYW1lJzogJ2NsYXNzUXVlcnknLFxuICAgICd0YWcgbmFtZSc6ICdjbGFzc1F1ZXJ5J1xuICB9O1xuICAvLyBUT0RPIHRoaXMgZXJyb3IgY2hlY2tpbmcgc2hvdWxkIHByb2JhYmx5IGJlIHBhcnQgb2YgTUpTT05XUD9cbiAgaWYgKCFfLmNvbnRhaW5zKF8ua2V5cyhxTWFwKSwgc3RyYXRlZ3kpKSB7XG4gICAgdGhyb3cgbmV3IGVycm9ycy5Vbmtub3duQ29tbWFuZEVycm9yKCk7XG4gIH1cbiAgaWYgKHNlbGVjdG9yID09PSBcImJhZHNlbFwiKSB7XG4gICAgdGhyb3cgbmV3IGVycm9ycy5JbnZhbGlkU2VsZWN0b3JFcnJvcigpO1xuICB9XG4gIGxldCBlbHMgPSB0aGlzLmFwcE1vZGVsW3FNYXBbc3RyYXRlZ3ldXShzZWxlY3RvciwgY3R4KTtcbiAgaWYgKGVscy5sZW5ndGgpIHtcbiAgICBpZiAobXVsdCkge1xuICAgICAgbGV0IGFsbEVscyA9IFtdO1xuICAgICAgZm9yIChsZXQgZWwgb2YgZWxzKSB7XG4gICAgICAgIGFsbEVscy5wdXNoKHRoaXMud3JhcE5ld0VsKGVsKSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gYWxsRWxzO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gdGhpcy53cmFwTmV3RWwoZWxzWzBdKTtcbiAgICB9XG4gIH0gZWxzZSBpZiAobXVsdCkge1xuICAgIHJldHVybiBbXTtcbiAgfSBlbHNlIHtcbiAgICB0aHJvdyBuZXcgZXJyb3JzLk5vU3VjaEVsZW1lbnRFcnJvcigpO1xuICB9XG59O1xuXG5jb21tYW5kcy5maW5kRWxlbWVudCA9IGFzeW5jIGZ1bmN0aW9uIChzdHJhdGVneSwgc2VsZWN0b3IpIHtcbiAgcmV0dXJuIHRoaXMuZmluZEVsT3JFbHMoc3RyYXRlZ3ksIHNlbGVjdG9yLCBmYWxzZSk7XG59O1xuXG5jb21tYW5kcy5maW5kRWxlbWVudHMgPSBhc3luYyBmdW5jdGlvbiAoc3RyYXRlZ3ksIHNlbGVjdG9yKSB7XG4gIHJldHVybiB0aGlzLmZpbmRFbE9yRWxzKHN0cmF0ZWd5LCBzZWxlY3RvciwgdHJ1ZSk7XG59O1xuXG5jb21tYW5kcy5maW5kRWxlbWVudEZyb21FbGVtZW50ID0gYXN5bmMgZnVuY3Rpb24gKHN0cmF0ZWd5LCBzZWxlY3RvciwgZWxlbWVudElkKSB7XG4gIGxldCBlbCA9IHRoaXMuZ2V0RWxlbWVudChlbGVtZW50SWQpO1xuICByZXR1cm4gdGhpcy5maW5kRWxPckVscyhzdHJhdGVneSwgc2VsZWN0b3IsIGZhbHNlLCBlbC54bWxGcmFnbWVudCk7XG59O1xuXG5jb21tYW5kcy5maW5kRWxlbWVudHNGcm9tRWxlbWVudCA9IGFzeW5jIGZ1bmN0aW9uIChzdHJhdGVneSwgc2VsZWN0b3IsIGVsZW1lbnRJZCkge1xuICBsZXQgZWwgPSB0aGlzLmdldEVsZW1lbnQoZWxlbWVudElkKTtcbiAgcmV0dXJuIHRoaXMuZmluZEVsT3JFbHMoc3RyYXRlZ3ksIHNlbGVjdG9yLCB0cnVlLCBlbC54bWxGcmFnbWVudCk7XG59O1xuXG5PYmplY3QuYXNzaWduKGV4dGVuc2lvbnMsIGNvbW1hbmRzLCBoZWxwZXJzKTtcbmV4cG9ydCB7IGNvbW1hbmRzLCBoZWxwZXJzfTtcbmV4cG9ydCBkZWZhdWx0IGV4dGVuc2lvbnM7XG4iXX0=