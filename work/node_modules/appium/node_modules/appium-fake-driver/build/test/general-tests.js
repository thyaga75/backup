'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _helpers = require('./helpers');

var should = _chai2['default'].should();

function generalTests() {
  var _this = this;

  describe('generic actions', function () {
    var driver = undefined;
    (0, _helpers.initSession)(_helpers.DEFAULT_CAPS).then(function (d) {
      driver = d;
    });
    it('should not send keys without a focused element', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.keys("test").should.eventually.be.rejectedWith(/12/));

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
    it('should send keys to a focused element', function callee$2$0() {
      var el;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.elementById('input'));

          case 2:
            el = context$3$0.sent;
            context$3$0.next = 5;
            return _regeneratorRuntime.awrap(el.click());

          case 5:
            context$3$0.next = 7;
            return _regeneratorRuntime.awrap(driver.keys("test"));

          case 7:
            context$3$0.next = 9;
            return _regeneratorRuntime.awrap(el.text());

          case 9:
            context$3$0.sent.should.equal("test");

          case 10:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
    it.skip('should set geolocation', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.setGeoLocation(-30, 30));

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
    it('should get geolocation', function callee$2$0() {
      var geo;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.getGeoLocation());

          case 2:
            geo = context$3$0.sent;

            should.exist(geo.latitude);
            should.exist(geo.longitude);

          case 5:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
    it('should get app source', function callee$2$0() {
      var source;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.source());

          case 2:
            source = context$3$0.sent;

            source.should.contain('<MockNavBar id="nav"');

          case 4:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
    // TODO do we want to test driver.pageIndex? probably not

    it('should get the orientation', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.getOrientation());

          case 2:
            context$3$0.sent.should.equal("PORTRAIT");

          case 3:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
    it('should set the orientation to something valid', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.setOrientation("LANDSCAPE"));

          case 2:
            context$3$0.next = 4;
            return _regeneratorRuntime.awrap(driver.getOrientation());

          case 4:
            context$3$0.sent.should.equal("LANDSCAPE");

          case 5:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
    it('should not set the orientation to something invalid', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.setOrientation("INSIDEOUT").should.eventually.be.rejectedWith(/Orientation must be/));

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });

    it('should get a screenshot', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.t0 = should;
            context$3$0.next = 3;
            return _regeneratorRuntime.awrap(driver.takeScreenshot());

          case 3:
            context$3$0.t1 = context$3$0.sent;
            context$3$0.t0.exist.call(context$3$0.t0, context$3$0.t1);

          case 5:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });

    it('should set implicit wait timeout', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.setImplicitWaitTimeout(1000));

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
    it('should not set invalid implicit wait timeout', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.setImplicitWaitTimeout('foo').should.eventually.be.rejectedWith(/ms/));

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });

    it('should set async script timeout', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.setAsyncScriptTimeout(1000));

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
    it('should not set invalid async script timeout', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.setAsyncScriptTimeout('foo').should.eventually.be.rejectedWith(/ms/));

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });

    it('should set page load timeout', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.setPageLoadTimeout(1000));

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
    it('should not set page load script timeout', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.setPageLoadTimeout('foo').should.eventually.be.rejectedWith(/ms/));

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
  });
}

exports['default'] = generalTests;
module.exports = exports['default'];

// TODO unquarantine when WD fixes what it sends the server
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZ2VuZXJhbC10ZXN0cy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O29CQUFpQixNQUFNOzs7O3VCQUNtQixXQUFXOztBQUVyRCxJQUFNLE1BQU0sR0FBRyxrQkFBSyxNQUFNLEVBQUUsQ0FBQzs7QUFFN0IsU0FBUyxZQUFZLEdBQUk7OztBQUN2QixVQUFRLENBQUMsaUJBQWlCLEVBQUUsWUFBTTtBQUNoQyxRQUFJLE1BQU0sWUFBQSxDQUFDO0FBQ1gsb0RBQXlCLENBQUMsSUFBSSxDQUFDLFVBQUMsQ0FBQyxFQUFLO0FBQUUsWUFBTSxHQUFHLENBQUMsQ0FBQztLQUFFLENBQUMsQ0FBQztBQUN2RCxNQUFFLENBQUMsZ0RBQWdELEVBQUU7Ozs7OzZDQUM3QyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUM7Ozs7Ozs7S0FDbEUsQ0FBQyxDQUFDO0FBQ0gsTUFBRSxDQUFDLHVDQUF1QyxFQUFFO1VBQ3RDLEVBQUU7Ozs7OzZDQUFTLE1BQU0sQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDOzs7QUFBdEMsY0FBRTs7NkNBQ0EsRUFBRSxDQUFDLEtBQUssRUFBRTs7Ozs2Q0FDVixNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQzs7Ozs2Q0FDbEIsRUFBRSxDQUFDLElBQUksRUFBRTs7OzZCQUFFLE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBTTs7Ozs7OztLQUN0QyxDQUFDLENBQUM7QUFDSCxNQUFFLENBQUMsSUFBSSxDQUFDLHdCQUF3QixFQUFFOzs7Ozs2Q0FFMUIsTUFBTSxDQUFDLGNBQWMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUM7Ozs7Ozs7S0FDckMsQ0FBQyxDQUFDO0FBQ0gsTUFBRSxDQUFDLHdCQUF3QixFQUFFO1VBQ3ZCLEdBQUc7Ozs7OzZDQUFTLE1BQU0sQ0FBQyxjQUFjLEVBQUU7OztBQUFuQyxlQUFHOztBQUNQLGtCQUFNLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUMzQixrQkFBTSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUM7Ozs7Ozs7S0FDN0IsQ0FBQyxDQUFDO0FBQ0gsTUFBRSxDQUFDLHVCQUF1QixFQUFFO1VBQ3RCLE1BQU07Ozs7OzZDQUFTLE1BQU0sQ0FBQyxNQUFNLEVBQUU7OztBQUE5QixrQkFBTTs7QUFDVixrQkFBTSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsc0JBQXNCLENBQUMsQ0FBQzs7Ozs7OztLQUMvQyxDQUFDLENBQUM7OztBQUdILE1BQUUsQ0FBQyw0QkFBNEIsRUFBRTs7Ozs7NkNBQ3hCLE1BQU0sQ0FBQyxjQUFjLEVBQUU7Ozs2QkFBRSxNQUFNLENBQUMsS0FBSyxDQUFDLFVBQVU7Ozs7Ozs7S0FDeEQsQ0FBQyxDQUFDO0FBQ0gsTUFBRSxDQUFDLCtDQUErQyxFQUFFOzs7Ozs2Q0FDNUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxXQUFXLENBQUM7Ozs7NkNBQ2pDLE1BQU0sQ0FBQyxjQUFjLEVBQUU7Ozs2QkFBRSxNQUFNLENBQUMsS0FBSyxDQUFDLFdBQVc7Ozs7Ozs7S0FDekQsQ0FBQyxDQUFDO0FBQ0gsTUFBRSxDQUFDLHFEQUFxRCxFQUFFOzs7Ozs2Q0FDbEQsTUFBTSxDQUFDLGNBQWMsQ0FBQyxXQUFXLENBQUMsQ0FDL0IsTUFBTSxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUMsWUFBWSxDQUFDLHFCQUFxQixDQUFDOzs7Ozs7O0tBQ2xFLENBQUMsQ0FBQzs7QUFFSCxNQUFFLENBQUMseUJBQXlCLEVBQUU7Ozs7NkJBQzVCLE1BQU07OzZDQUFhLE1BQU0sQ0FBQyxjQUFjLEVBQUU7Ozs7MkJBQW5DLEtBQUs7Ozs7Ozs7S0FDYixDQUFDLENBQUM7O0FBRUgsTUFBRSxDQUFDLGtDQUFrQyxFQUFFOzs7Ozs2Q0FDL0IsTUFBTSxDQUFDLHNCQUFzQixDQUFDLElBQUksQ0FBQzs7Ozs7OztLQUMxQyxDQUFDLENBQUM7QUFDSCxNQUFFLENBQUMsOENBQThDLEVBQUU7Ozs7OzZDQUMzQyxNQUFNLENBQUMsc0JBQXNCLENBQUMsS0FBSyxDQUFDLENBQ2pDLE1BQU0sQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUM7Ozs7Ozs7S0FDakQsQ0FBQyxDQUFDOztBQUVILE1BQUUsQ0FBQyxpQ0FBaUMsRUFBRTs7Ozs7NkNBQzlCLE1BQU0sQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJLENBQUM7Ozs7Ozs7S0FDekMsQ0FBQyxDQUFDO0FBQ0gsTUFBRSxDQUFDLDZDQUE2QyxFQUFFOzs7Ozs2Q0FDMUMsTUFBTSxDQUFDLHFCQUFxQixDQUFDLEtBQUssQ0FBQyxDQUNoQyxNQUFNLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDOzs7Ozs7O0tBQ2pELENBQUMsQ0FBQzs7QUFFSCxNQUFFLENBQUMsOEJBQThCLEVBQUU7Ozs7OzZDQUMzQixNQUFNLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDOzs7Ozs7O0tBQ3RDLENBQUMsQ0FBQztBQUNILE1BQUUsQ0FBQyx5Q0FBeUMsRUFBRTs7Ozs7NkNBQ3RDLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxLQUFLLENBQUMsQ0FDN0IsTUFBTSxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQzs7Ozs7OztLQUNqRCxDQUFDLENBQUM7R0FDSixDQUFDLENBQUM7Q0FDSjs7cUJBRWMsWUFBWSIsImZpbGUiOiJ0ZXN0L2dlbmVyYWwtdGVzdHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2hhaSBmcm9tICdjaGFpJztcbmltcG9ydCB7IGluaXRTZXNzaW9uLCBERUZBVUxUX0NBUFMgfSBmcm9tICcuL2hlbHBlcnMnO1xuXG5jb25zdCBzaG91bGQgPSBjaGFpLnNob3VsZCgpO1xuXG5mdW5jdGlvbiBnZW5lcmFsVGVzdHMgKCkge1xuICBkZXNjcmliZSgnZ2VuZXJpYyBhY3Rpb25zJywgKCkgPT4ge1xuICAgIGxldCBkcml2ZXI7XG4gICAgaW5pdFNlc3Npb24oREVGQVVMVF9DQVBTKS50aGVuKChkKSA9PiB7IGRyaXZlciA9IGQ7IH0pO1xuICAgIGl0KCdzaG91bGQgbm90IHNlbmQga2V5cyB3aXRob3V0IGEgZm9jdXNlZCBlbGVtZW50JywgYXN5bmMgKCkgPT4ge1xuICAgICAgYXdhaXQgZHJpdmVyLmtleXMoXCJ0ZXN0XCIpLnNob3VsZC5ldmVudHVhbGx5LmJlLnJlamVjdGVkV2l0aCgvMTIvKTtcbiAgICB9KTtcbiAgICBpdCgnc2hvdWxkIHNlbmQga2V5cyB0byBhIGZvY3VzZWQgZWxlbWVudCcsIGFzeW5jICgpID0+IHtcbiAgICAgIGxldCBlbCA9IGF3YWl0IGRyaXZlci5lbGVtZW50QnlJZCgnaW5wdXQnKTtcbiAgICAgIGF3YWl0IGVsLmNsaWNrKCk7XG4gICAgICBhd2FpdCBkcml2ZXIua2V5cyhcInRlc3RcIik7XG4gICAgICAoYXdhaXQgZWwudGV4dCgpKS5zaG91bGQuZXF1YWwoXCJ0ZXN0XCIpO1xuICAgIH0pO1xuICAgIGl0LnNraXAoJ3Nob3VsZCBzZXQgZ2VvbG9jYXRpb24nLCBhc3luYyAoKSA9PiB7XG4gICAgICAvLyBUT0RPIHVucXVhcmFudGluZSB3aGVuIFdEIGZpeGVzIHdoYXQgaXQgc2VuZHMgdGhlIHNlcnZlclxuICAgICAgYXdhaXQgZHJpdmVyLnNldEdlb0xvY2F0aW9uKC0zMCwgMzApO1xuICAgIH0pO1xuICAgIGl0KCdzaG91bGQgZ2V0IGdlb2xvY2F0aW9uJywgYXN5bmMgKCkgPT4ge1xuICAgICAgbGV0IGdlbyA9IGF3YWl0IGRyaXZlci5nZXRHZW9Mb2NhdGlvbigpO1xuICAgICAgc2hvdWxkLmV4aXN0KGdlby5sYXRpdHVkZSk7XG4gICAgICBzaG91bGQuZXhpc3QoZ2VvLmxvbmdpdHVkZSk7XG4gICAgfSk7XG4gICAgaXQoJ3Nob3VsZCBnZXQgYXBwIHNvdXJjZScsIGFzeW5jICgpID0+IHtcbiAgICAgIGxldCBzb3VyY2UgPSBhd2FpdCBkcml2ZXIuc291cmNlKCk7XG4gICAgICBzb3VyY2Uuc2hvdWxkLmNvbnRhaW4oJzxNb2NrTmF2QmFyIGlkPVwibmF2XCInKTtcbiAgICB9KTtcbiAgICAvLyBUT0RPIGRvIHdlIHdhbnQgdG8gdGVzdCBkcml2ZXIucGFnZUluZGV4PyBwcm9iYWJseSBub3RcblxuICAgIGl0KCdzaG91bGQgZ2V0IHRoZSBvcmllbnRhdGlvbicsIGFzeW5jICgpID0+IHtcbiAgICAgIChhd2FpdCBkcml2ZXIuZ2V0T3JpZW50YXRpb24oKSkuc2hvdWxkLmVxdWFsKFwiUE9SVFJBSVRcIik7XG4gICAgfSk7XG4gICAgaXQoJ3Nob3VsZCBzZXQgdGhlIG9yaWVudGF0aW9uIHRvIHNvbWV0aGluZyB2YWxpZCcsIGFzeW5jICgpID0+IHtcbiAgICAgIGF3YWl0IGRyaXZlci5zZXRPcmllbnRhdGlvbihcIkxBTkRTQ0FQRVwiKTtcbiAgICAgIChhd2FpdCBkcml2ZXIuZ2V0T3JpZW50YXRpb24oKSkuc2hvdWxkLmVxdWFsKFwiTEFORFNDQVBFXCIpO1xuICAgIH0pO1xuICAgIGl0KCdzaG91bGQgbm90IHNldCB0aGUgb3JpZW50YXRpb24gdG8gc29tZXRoaW5nIGludmFsaWQnLCBhc3luYyAoKSA9PiB7XG4gICAgICBhd2FpdCBkcml2ZXIuc2V0T3JpZW50YXRpb24oXCJJTlNJREVPVVRcIilcbiAgICAgICAgICAgICAgLnNob3VsZC5ldmVudHVhbGx5LmJlLnJlamVjdGVkV2l0aCgvT3JpZW50YXRpb24gbXVzdCBiZS8pO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCBnZXQgYSBzY3JlZW5zaG90JywgYXN5bmMgKCkgPT4ge1xuICAgICAgc2hvdWxkLmV4aXN0KGF3YWl0IGRyaXZlci50YWtlU2NyZWVuc2hvdCgpKTtcbiAgICB9KTtcblxuICAgIGl0KCdzaG91bGQgc2V0IGltcGxpY2l0IHdhaXQgdGltZW91dCcsIGFzeW5jICgpID0+IHtcbiAgICAgIGF3YWl0IGRyaXZlci5zZXRJbXBsaWNpdFdhaXRUaW1lb3V0KDEwMDApO1xuICAgIH0pO1xuICAgIGl0KCdzaG91bGQgbm90IHNldCBpbnZhbGlkIGltcGxpY2l0IHdhaXQgdGltZW91dCcsIGFzeW5jICgpID0+IHtcbiAgICAgIGF3YWl0IGRyaXZlci5zZXRJbXBsaWNpdFdhaXRUaW1lb3V0KCdmb28nKVxuICAgICAgICAgICAgICAuc2hvdWxkLmV2ZW50dWFsbHkuYmUucmVqZWN0ZWRXaXRoKC9tcy8pO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCBzZXQgYXN5bmMgc2NyaXB0IHRpbWVvdXQnLCBhc3luYyAoKSA9PiB7XG4gICAgICBhd2FpdCBkcml2ZXIuc2V0QXN5bmNTY3JpcHRUaW1lb3V0KDEwMDApO1xuICAgIH0pO1xuICAgIGl0KCdzaG91bGQgbm90IHNldCBpbnZhbGlkIGFzeW5jIHNjcmlwdCB0aW1lb3V0JywgYXN5bmMgKCkgPT4ge1xuICAgICAgYXdhaXQgZHJpdmVyLnNldEFzeW5jU2NyaXB0VGltZW91dCgnZm9vJylcbiAgICAgICAgICAgICAgLnNob3VsZC5ldmVudHVhbGx5LmJlLnJlamVjdGVkV2l0aCgvbXMvKTtcbiAgICB9KTtcblxuICAgIGl0KCdzaG91bGQgc2V0IHBhZ2UgbG9hZCB0aW1lb3V0JywgYXN5bmMgKCkgPT4ge1xuICAgICAgYXdhaXQgZHJpdmVyLnNldFBhZ2VMb2FkVGltZW91dCgxMDAwKTtcbiAgICB9KTtcbiAgICBpdCgnc2hvdWxkIG5vdCBzZXQgcGFnZSBsb2FkIHNjcmlwdCB0aW1lb3V0JywgYXN5bmMgKCkgPT4ge1xuICAgICAgYXdhaXQgZHJpdmVyLnNldFBhZ2VMb2FkVGltZW91dCgnZm9vJylcbiAgICAgICAgICAgICAgLnNob3VsZC5ldmVudHVhbGx5LmJlLnJlamVjdGVkV2l0aCgvbXMvKTtcbiAgICB9KTtcbiAgfSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGdlbmVyYWxUZXN0cztcbiJdfQ==