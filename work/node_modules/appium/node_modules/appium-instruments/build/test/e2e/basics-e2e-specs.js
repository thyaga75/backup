require('source-map-support').install();

'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _2 = require('../..');

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _appiumIosSimulator = require('appium-ios-simulator');

var _appiumSupport = require('appium-support');

var _teen_process = require('teen_process');

var _libUtils = require('../../lib/utils');

var _asyncbox = require('asyncbox');

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

var LAUNCH_HANDLER_TIMEOUT = 10000;
var TEMP_DIR = _path2['default'].resolve(__dirname, 'tmp');

describe('instruments tests', function () {
  this.timeout(90000);

  function newInstrument(opts) {
    return _regeneratorRuntime.async(function newInstrument$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          _lodash2['default'].extend(opts, {
            app: _path2['default'].resolve(__dirname, '..', '..', '..', 'assets', 'TestApp.app'),
            bootstrap: _path2['default'].resolve(__dirname, '..', 'assets', 'bootstrap.js'),
            simulatorSdkAndDevice: 'iPhone 6 (8.4 Simulator)'
          });
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(_2.Instruments.quickInstruments(opts));

        case 3:
          return context$2$0.abrupt('return', context$2$0.sent);

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  }

  function test(appendDesc, opts) {
    var _this = this;

    var checks = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

    checks = checks || {};
    var instruments = undefined;

    it('should launch' + appendDesc, function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap((0, _appiumIosSimulator.killAllSimulators)());

          case 2:
            context$3$0.next = 4;
            return _regeneratorRuntime.awrap(newInstrument(opts));

          case 4:
            instruments = context$3$0.sent;

            if (!checks.afterCreate) {
              context$3$0.next = 8;
              break;
            }

            context$3$0.next = 8;
            return _regeneratorRuntime.awrap(checks.afterCreate(instruments));

          case 8:
            setTimeout(function () {
              if (instruments.launchResultDeferred) {
                instruments.launchResultDeferred.resolve();
              }
            }, LAUNCH_HANDLER_TIMEOUT);
            context$3$0.next = 11;
            return _regeneratorRuntime.awrap(instruments.launch());

          case 11:
            if (!checks.afterLaunch) {
              context$3$0.next = 14;
              break;
            }

            context$3$0.next = 14;
            return _regeneratorRuntime.awrap(checks.afterLaunch(instruments));

          case 14:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });

    it('should shutdown' + appendDesc, function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(instruments.shutdown());

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
  }

  describe('regular timeout', function () {
    test('', { launchTimeout: 60000 });
  });

  describe('smart timeout', function () {
    test('', { launchTimeout: { global: 60000, afterSimLaunch: 10000 } });
  });

  describe.skip("using different tmp dir", function () {
    var altTmpDir = _path2['default'].resolve(TEMP_DIR, 'abcd');

    before(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.prev = 0;
            context$3$0.next = 3;
            return _regeneratorRuntime.awrap(_appiumSupport.fs.mkdir(TEMP_DIR));

          case 3:
            context$3$0.next = 7;
            break;

          case 5:
            context$3$0.prev = 5;
            context$3$0.t0 = context$3$0['catch'](0);

          case 7:
            context$3$0.next = 9;
            return _regeneratorRuntime.awrap(_appiumSupport.fs.rimraf(altTmpDir));

          case 9:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this, [[0, 5]]);
    });

    after(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(_appiumSupport.fs.rimraf(TEMP_DIR));

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });

    test(" (1)", {
      launchTimeout: { global: 60000, afterSimLaunch: 10000 },
      tmpDir: altTmpDir
    }, {
      afterCreate: function afterCreate(instruments) {
        instruments.tmpDir.should.equal(altTmpDir);
      },
      afterLaunch: function afterLaunch() {
        return _regeneratorRuntime.async(function afterLaunch$(context$3$0) {
          while (1) switch (context$3$0.prev = context$3$0.next) {
            case 0:
              context$3$0.next = 2;
              return _regeneratorRuntime.awrap(_appiumSupport.fs.exists(altTmpDir));

            case 2:
              context$3$0.sent.should.be.ok;
              context$3$0.next = 5;
              return _regeneratorRuntime.awrap(_appiumSupport.fs.exists(_path2['default'].resolve(altTmpDir, 'instrumentscli0.trace')));

            case 5:
              context$3$0.sent.should.be.ok;

            case 6:
            case 'end':
              return context$3$0.stop();
          }
        }, null, this);
      }
    });

    //test(" (2)", {
    //launchTimeout: {global: 60000, afterSimLaunch: 10000},
    //tmpDir: altTmpDir
    //}, {
    //afterCreate: function (instruments) { instruments.tmpDir.should.equal(altTmpDir); },
    //afterLaunch: async function () {
    //(await fs.exists(altTmpDir)).should.be.ok;
    //// tmp dir is deleted at startup so trace file is not incremented
    //(await fs.exists(path.resolve(altTmpDir, 'instrumentscli0.trace'))).should.be.ok;
    //}
    //});
  });

  describe.skip("using different trace dir", function () {
    var altTraceDir = _path2['default'].resolve(TEMP_DIR, 'abcd');

    before(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.prev = 0;
            context$3$0.next = 3;
            return _regeneratorRuntime.awrap(_appiumSupport.fs.mkdir(TEMP_DIR));

          case 3:
            context$3$0.next = 7;
            break;

          case 5:
            context$3$0.prev = 5;
            context$3$0.t0 = context$3$0['catch'](0);

          case 7:
            context$3$0.next = 9;
            return _regeneratorRuntime.awrap(_appiumSupport.fs.rimraf(altTraceDir));

          case 9:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this, [[0, 5]]);
    });

    after(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(_appiumSupport.fs.rimraf(TEMP_DIR));

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });

    test(" (1)", {
      launchTimeout: { global: 60000, afterSimLaunch: 10000 },
      traceDir: altTraceDir
    }, {
      afterCreate: function afterCreate(instruments) {
        instruments.tmpDir.should.equal('/tmp/appium-instruments');
      },
      afterLaunch: function afterLaunch() {
        return _regeneratorRuntime.async(function afterLaunch$(context$3$0) {
          while (1) switch (context$3$0.prev = context$3$0.next) {
            case 0:
              context$3$0.next = 2;
              return _regeneratorRuntime.awrap(_appiumSupport.fs.exists(altTraceDir));

            case 2:
              context$3$0.sent.should.be.ok;
              context$3$0.next = 5;
              return _regeneratorRuntime.awrap(_appiumSupport.fs.exists(_path2['default'].resolve(altTraceDir, 'instrumentscli0.trace')));

            case 5:
              context$3$0.sent.should.be.ok;

            case 6:
            case 'end':
              return context$3$0.stop();
          }
        }, null, this);
      }
    });

    test(" (2)", {
      launchTimeout: { global: 60000, afterSimLaunch: 10000 },
      traceDir: altTraceDir
    }, {
      afterCreate: function afterCreate(instruments) {
        instruments.tmpDir.should.equal('/tmp/appium-instruments');
      },
      afterLaunch: function afterLaunch() {
        return _regeneratorRuntime.async(function afterLaunch$(context$3$0) {
          while (1) switch (context$3$0.prev = context$3$0.next) {
            case 0:
              context$3$0.next = 2;
              return _regeneratorRuntime.awrap(_appiumSupport.fs.exists(altTraceDir));

            case 2:
              context$3$0.sent.should.be.ok;
              context$3$0.next = 5;
              return _regeneratorRuntime.awrap(_appiumSupport.fs.exists(_path2['default'].resolve(altTraceDir, 'instrumentscli1.trace')));

            case 5:
              context$3$0.sent.should.be.ok;

            case 6:
            case 'end':
              return context$3$0.stop();
          }
        }, null, this);
      }
    });
  });

  describe("shutdown without startup", function () {
    it('should launch', function callee$2$0() {
      var instruments;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap((0, _appiumIosSimulator.killAllSimulators)());

          case 2:
            context$3$0.next = 4;
            return _regeneratorRuntime.awrap(newInstrument({ launchTimeout: 60000 }));

          case 4:
            instruments = context$3$0.sent;
            context$3$0.next = 7;
            return _regeneratorRuntime.awrap(instruments.shutdown());

          case 7:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
  });

  describe('getting devices', function () {
    var _this2 = this;

    before(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap((0, _appiumIosSimulator.killAllSimulators)());

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this2);
    });

    it('should get all available devices', function callee$2$0() {
      var iosVer, _ref, stdout, devices;

      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            iosVer = undefined;
            context$3$0.prev = 1;
            context$3$0.next = 4;
            return _regeneratorRuntime.awrap((0, _teen_process.exec)('xcrun', ['--sdk', 'iphonesimulator', '--show-sdk-version']));

          case 4:
            _ref = context$3$0.sent;
            stdout = _ref.stdout;

            iosVer = parseFloat(stdout);
            context$3$0.next = 11;
            break;

          case 9:
            context$3$0.prev = 9;
            context$3$0.t0 = context$3$0['catch'](1);

          case 11:
            if (!(_lodash2['default'].isNumber(iosVer) || isNaN(iosVer))) {
              context$3$0.next = 14;
              break;
            }

            // TODO: this is weird
            console.warn('Could not get iOS sdk version, skipping test');
            return context$3$0.abrupt('return');

          case 14:
            context$3$0.next = 16;
            return _regeneratorRuntime.awrap((0, _asyncbox.retry)(3, _libUtils.getAvailableDevices));

          case 16:
            devices = context$3$0.sent;

            if (iosVer >= 7.1) {
              devices.length.should.be.above(0);
              devices.join('\n').should.include('iPhone 6 (8.4');
            } else {
              devices.length.should.equal(0);
            }

          case 18:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this, [[1, 9]]);
    });
  });
});

// travis can't write to /tmp, so let's create a tmp directory

// travis can't write to /tmp, so let's create a tmp directory
//# sourceMappingURL=data:application/json;base64,